2024-06-02 19:28:41 ERROR c.s.s.service.MarketService - createStore: jwt isnt valid
2024-06-02 19:28:42 ERROR c.s.sadnamarket.domain.users.Member - Exception in logout: user isn't logged in
2024-06-02 19:28:42 ERROR c.s.s.service.MarketService - error in logout: user isn't logged in
2024-06-02 19:28:42 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=username that isn't very real does not exist
2024-06-02 19:28:42 ERROR c.s.s.service.MarketService - error in logout: User with username username that isn't very real does not exist
2024-06-02 19:28:46 ERROR c.s.s.service.MarketService - getStoreOrderHistory: There is no store with id 2147483647.
2024-06-02 19:28:46 ERROR c.s.s.domain.users.MemoryRepo - Exception in getMember: User with userName=Username that nobody has does not exist
2024-06-02 19:28:46 ERROR c.s.s.service.MarketService - Get order DTO history failed for username: Username that nobody has. Error: User with userName Username that nobody has does not exist
2024-06-02 19:28:47 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=Eric does not exist
2024-06-02 19:28:47 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: User with username Eric does not exist
2024-06-02 19:28:48 ERROR c.s.s.service.MarketService - closeStore: There is no store with id 2147483647.
2024-06-02 19:28:48 ERROR c.s.s.service.MarketService - getOwners: There is no store with id 2147483647.
2024-06-02 19:28:48 ERROR c.s.s.service.MarketService - getManagers: There is no store with id 2147483647.
2024-06-02 19:28:49 ERROR c.s.s.service.MarketService - deleteProductFromStore: user Mallory can not delete a product from store with id 0.
2024-06-02 19:28:50 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: jwt isnt valid
2024-06-02 19:28:50 ERROR c.s.s.domain.products.ProductFacade - Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. 
2024-06-02 19:28:50 ERROR c.s.s.domain.products.ProductFacade - Error adding product: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. 
java.lang.IllegalArgumentException: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. 
	at com.sadna.sadnamarket.domain.products.ProductFacade.checkProductAttributes(ProductFacade.java:305)
	at com.sadna.sadnamarket.domain.products.ProductFacade.addProduct(ProductFacade.java:43)
	at com.sadna.sadnamarket.domain.stores.StoreFacade.addProductToStore(StoreFacade.java:80)
	at com.sadna.sadnamarket.service.MarketService.addProductToStore(MarketService.java:101)
	at com.sadna.sadnamarket.service.MarketServiceTestAdapter.addProductToStore(MarketServiceTestAdapter.java:157)
	at com.sadna.sadnamarket.StoreOwnerTests.addProductBadInfoTest(StoreOwnerTests.java:86)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)
2024-06-02 19:28:50 ERROR c.s.s.service.MarketService - addProductToStore: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. 
2024-06-02 19:28:51 ERROR c.s.s.service.MarketService - getStoreOrderHistory: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-02 19:28:51 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: jwt isnt valid
2024-06-02 19:28:52 ERROR c.s.s.service.MarketService - closeStore: User Mallory can not close the store with id 0 (not a founder).
2024-06-02 19:28:53 ERROR c.s.sadnamarket.domain.users.Member - Exception in getRequest: member already has role in store
2024-06-02 19:28:53 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: member already has role in store
2024-06-02 19:28:54 ERROR c.s.s.service.MarketService - getOwners: There is no store with id 2147483647.
2024-06-02 19:28:54 ERROR c.s.s.service.MarketService - getManagers: There is no store with id 2147483647.
2024-06-02 19:28:54 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: User StoreOwnerMan can not add user Eric as an owner to store 0.
2024-06-02 19:28:55 ERROR c.s.s.service.MarketService - addManagerPermission: User StoreOwnerMan can not add user Eric as a manager to store 0.
2024-06-02 19:28:56 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: User StoreOwnerMan can not add user Eric as a manager to store 0.
2024-06-02 19:28:58 ERROR c.s.s.service.MarketService - getStoreOrderHistory: jwt isnt valid
2024-06-02 19:28:59 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: User Mallory can not add user Eric as a manager to store 0.
2024-06-02 19:28:59 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-02 19:28:59 ERROR c.s.s.service.MarketService - getStoreInfo: The product with id 0 doesn't exist.
2024-06-02 19:29:01 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: User Mallory can not add user Eric as an owner to store 0.
2024-06-02 19:29:01 ERROR c.s.s.service.MarketService - updateProductInStore: A store with id 0 does not have a product with id 2147483647.
2024-06-02 19:29:02 ERROR c.s.s.service.MarketService - deleteProductFromStore: A product with id 2147483647 does not exist.
2024-06-02 19:29:02 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=Eric does not exist
2024-06-02 19:29:02 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: User with username Eric does not exist
2024-06-02 19:29:03 ERROR c.s.s.service.MarketService - updateProductInStore: A store with id 0 does not have a product with id 0.
2024-06-02 19:29:04 ERROR c.s.s.service.MarketService - addManagerPermission: User Mallory can not add user Eric as a manager to store 0.
2024-06-02 19:29:05 ERROR c.s.s.domain.products.ProductFacade - Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
2024-06-02 19:29:05 ERROR c.s.s.domain.products.ProductFacade - Error updating product: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
java.lang.IllegalArgumentException: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
	at com.sadna.sadnamarket.domain.products.ProductFacade.checkProductAttributes(ProductFacade.java:305)
	at com.sadna.sadnamarket.domain.products.ProductFacade.updateProduct(ProductFacade.java:92)
	at com.sadna.sadnamarket.domain.stores.StoreFacade.updateProduct(StoreFacade.java:110)
	at com.sadna.sadnamarket.service.MarketService.updateProductInStore(MarketService.java:140)
	at com.sadna.sadnamarket.service.MarketServiceTestAdapter.editStoreProduct(MarketServiceTestAdapter.java:169)
	at com.sadna.sadnamarket.StoreOwnerTests.editProductBadInfoTest(StoreOwnerTests.java:122)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)
2024-06-02 19:29:05 ERROR c.s.s.service.MarketService - updateProductInStore: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
2024-06-02 19:29:07 ERROR c.s.s.service.MarketService - deleteProductFromStore: A product with id 0 does not exist.
2024-06-02 19:29:08 ERROR c.s.s.service.MarketService - updateProductInStore: user Mallory can not update a product in store with id 0.
2024-06-02 19:29:09 ERROR c.s.s.service.MarketService - addProductToStore: user Mallory can not add a product to store with id 0.
2024-06-02 19:29:09 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 999 does not exist.
2024-06-02 19:29:09 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-02 19:29:09 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 999 does not exist.
2024-06-02 19:29:09 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 4. Error: You can not buy 1 of product 0 - there are only 0 in stock.


2024-06-02 19:29:10 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-02 19:29:11 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-02 19:29:11 ERROR c.s.s.service.MarketService - Change quantity in cart failed for guestId: 2, storeId: 0, productId: 0, amount: 3. Error: Amount doesn't exist in store
2024-06-02 19:29:13 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Missing card details
2024-06-02 19:29:13 ERROR c.s.s.service.MarketService - Add product to cart failed for guestId: 2, storeId: 0, productId: 0, amount: 3. Error: Amount doesn't exist in store
2024-06-02 19:29:14 ERROR c.s.s.service.MarketService - getStoreInfo: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-02 19:29:14 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Order cannot be supplied
2024-06-02 19:29:14 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-02 19:29:14 ERROR c.s.s.service.MarketService - getStoreInfo: There is no store with id 2147483647.
2024-06-02 19:29:15 ERROR c.s.s.domain.users.UserFacade - user JohnDoe already logged in
2024-06-02 19:29:15 ERROR c.s.s.service.MarketService - error in login: user already logged in
2024-06-02 19:29:15 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasGuest: Guest with guestID=1 does not exist
2024-06-02 19:29:15 ERROR c.s.s.service.MarketService - error in exitGuest: Guest with guestID 1 does not exist
2024-06-02 19:29:15 ERROR c.s.s.service.MarketService - getProductsInfo: No products found
2024-06-02 19:29:15 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-02 19:29:16 ERROR c.s.s.service.MarketService - getProductsInfo: There is no store with id 2147483647.
2024-06-02 19:29:16 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-02 19:29:16 ERROR c.s.s.service.MarketService - Change quantity in cart failed for guestId: 2, storeId: 0, productId: 0, amount: 2. Error: Amount doesn't exist in store
2024-06-02 19:29:16 ERROR c.s.s.service.MarketService - Add product to cart failed for guestId: 2, storeId: 0, productId: 2147483647, amount: 3. Error: Amount doesn't exist in store
2024-06-02 19:29:17 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-02 19:29:17 ERROR c.s.s.service.MarketService - getStoreInfo: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-02 19:29:18 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Credit card invalid
2024-06-02 19:29:18 ERROR c.s.s.domain.auth.AuthFacade - user doesnt exist
2024-06-02 19:29:18 ERROR c.s.s.service.MarketService - error in login: password is incorrect
2024-06-02 19:29:19 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: You can not buy 5 of product 0 - there are only 4 in stock.


2024-06-02 19:29:19 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-02 19:29:20 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-02 19:29:20 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-02 19:55:24 ERROR c.s.s.service.MarketService - createStore: jwt isnt valid
2024-06-02 19:55:25 ERROR c.s.sadnamarket.domain.users.Member - Exception in logout: user isn't logged in
2024-06-02 19:55:25 ERROR c.s.s.service.MarketService - error in logout: user isn't logged in
2024-06-02 19:55:25 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=username that isn't very real does not exist
2024-06-02 19:55:25 ERROR c.s.s.service.MarketService - error in logout: User with username username that isn't very real does not exist
2024-06-02 19:55:28 ERROR c.s.s.service.MarketService - getStoreOrderHistory: There is no store with id 2147483647.
2024-06-02 19:55:29 ERROR c.s.s.domain.users.MemoryRepo - Exception in getMember: User with userName=Username that nobody has does not exist
2024-06-02 19:55:29 ERROR c.s.s.service.MarketService - Get order DTO history failed for username: Username that nobody has. Error: User with userName Username that nobody has does not exist
2024-06-02 19:55:30 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=Eric does not exist
2024-06-02 19:55:30 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: User with username Eric does not exist
2024-06-02 19:55:30 ERROR c.s.s.service.MarketService - closeStore: There is no store with id 2147483647.
2024-06-02 19:55:31 ERROR c.s.s.service.MarketService - getOwners: There is no store with id 2147483647.
2024-06-02 19:55:31 ERROR c.s.s.service.MarketService - getManagers: There is no store with id 2147483647.
2024-06-02 19:55:32 ERROR c.s.s.service.MarketService - deleteProductFromStore: user Mallory can not delete a product from store with id 0.
2024-06-02 19:55:32 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: jwt isnt valid
2024-06-02 19:55:33 ERROR c.s.s.domain.products.ProductFacade - Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. 
2024-06-02 19:55:33 ERROR c.s.s.domain.products.ProductFacade - Error adding product: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. 
java.lang.IllegalArgumentException: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. 
	at com.sadna.sadnamarket.domain.products.ProductFacade.checkProductAttributes(ProductFacade.java:305)
	at com.sadna.sadnamarket.domain.products.ProductFacade.addProduct(ProductFacade.java:43)
	at com.sadna.sadnamarket.domain.stores.StoreFacade.addProductToStore(StoreFacade.java:80)
	at com.sadna.sadnamarket.service.MarketService.addProductToStore(MarketService.java:101)
	at com.sadna.sadnamarket.service.MarketServiceTestAdapter.addProductToStore(MarketServiceTestAdapter.java:157)
	at com.sadna.sadnamarket.StoreOwnerTests.addProductBadInfoTest(StoreOwnerTests.java:86)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)
2024-06-02 19:55:33 ERROR c.s.s.service.MarketService - addProductToStore: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. 
2024-06-02 19:55:33 ERROR c.s.s.service.MarketService - getStoreOrderHistory: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-02 19:55:34 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: jwt isnt valid
2024-06-02 19:55:34 ERROR c.s.s.service.MarketService - closeStore: User Mallory can not close the store with id 0 (not a founder).
2024-06-02 19:55:35 ERROR c.s.sadnamarket.domain.users.Member - Exception in getRequest: member already has role in store
2024-06-02 19:55:35 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: member already has role in store
2024-06-02 19:55:36 ERROR c.s.s.service.MarketService - getOwners: There is no store with id 2147483647.
2024-06-02 19:55:36 ERROR c.s.s.service.MarketService - getManagers: There is no store with id 2147483647.
2024-06-02 19:55:37 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: User StoreOwnerMan can not add user Eric as an owner to store 0.
2024-06-02 19:55:38 ERROR c.s.s.service.MarketService - addManagerPermission: User StoreOwnerMan can not add user Eric as a manager to store 0.
2024-06-02 19:55:38 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: User StoreOwnerMan can not add user Eric as a manager to store 0.
2024-06-02 19:55:41 ERROR c.s.s.service.MarketService - getStoreOrderHistory: jwt isnt valid
2024-06-02 19:55:41 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: User Mallory can not add user Eric as a manager to store 0.
2024-06-02 19:55:42 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-02 19:55:42 ERROR c.s.s.service.MarketService - getStoreInfo: The product with id 0 doesn't exist.
2024-06-02 19:55:43 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: User Mallory can not add user Eric as an owner to store 0.
2024-06-02 19:55:44 ERROR c.s.s.service.MarketService - updateProductInStore: A store with id 0 does not have a product with id 2147483647.
2024-06-02 19:55:44 ERROR c.s.s.service.MarketService - deleteProductFromStore: Product Id 2147483647 does not exist.
2024-06-02 19:55:45 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=Eric does not exist
2024-06-02 19:55:45 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: User with username Eric does not exist
2024-06-02 19:55:46 ERROR c.s.s.service.MarketService - updateProductInStore: A store with id 0 does not have a product with id 0.
2024-06-02 19:55:47 ERROR c.s.s.service.MarketService - addManagerPermission: User Mallory can not add user Eric as a manager to store 0.
2024-06-02 19:55:48 ERROR c.s.s.domain.products.ProductFacade - Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
2024-06-02 19:55:48 ERROR c.s.s.domain.products.ProductFacade - Error updating product: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
java.lang.IllegalArgumentException: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
	at com.sadna.sadnamarket.domain.products.ProductFacade.checkProductAttributes(ProductFacade.java:305)
	at com.sadna.sadnamarket.domain.products.ProductFacade.updateProduct(ProductFacade.java:92)
	at com.sadna.sadnamarket.domain.stores.StoreFacade.updateProduct(StoreFacade.java:108)
	at com.sadna.sadnamarket.service.MarketService.updateProductInStore(MarketService.java:140)
	at com.sadna.sadnamarket.service.MarketServiceTestAdapter.editStoreProduct(MarketServiceTestAdapter.java:169)
	at com.sadna.sadnamarket.StoreOwnerTests.editProductBadInfoTest(StoreOwnerTests.java:122)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)
2024-06-02 19:55:48 ERROR c.s.s.service.MarketService - updateProductInStore: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
2024-06-02 19:55:49 ERROR c.s.s.service.MarketService - deleteProductFromStore: Product Id 0 does not exist.
2024-06-02 19:55:51 ERROR c.s.s.service.MarketService - updateProductInStore: user Mallory can not update a product in store with id 0.
2024-06-02 19:55:51 ERROR c.s.s.service.MarketService - addProductToStore: user Mallory can not add a product to store with id 0.
2024-06-02 19:55:51 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 999 does not exist.
2024-06-02 19:55:51 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-02 19:55:52 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 999 does not exist.
2024-06-02 19:55:52 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 4. Error: You can not buy 1 of product 0 - there are only 0 in stock.


2024-06-02 19:55:53 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-02 19:55:54 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-02 19:55:54 ERROR c.s.s.service.MarketService - Change quantity in cart failed for guestId: 2, storeId: 0, productId: 0, amount: 3. Error: Amount doesn't exist in store
2024-06-02 19:55:56 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Missing card details
2024-06-02 19:55:56 ERROR c.s.s.service.MarketService - Add product to cart failed for guestId: 2, storeId: 0, productId: 0, amount: 3. Error: Amount doesn't exist in store
2024-06-02 19:55:56 ERROR c.s.s.service.MarketService - getStoreInfo: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-02 19:55:57 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Order cannot be supplied
2024-06-02 19:55:57 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-02 19:55:57 ERROR c.s.s.service.MarketService - getStoreInfo: There is no store with id 2147483647.
2024-06-02 19:55:58 ERROR c.s.s.domain.users.UserFacade - user JohnDoe already logged in
2024-06-02 19:55:58 ERROR c.s.s.service.MarketService - error in login: user already logged in
2024-06-02 19:55:58 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasGuest: Guest with guestID=1 does not exist
2024-06-02 19:55:58 ERROR c.s.s.service.MarketService - error in exitGuest: Guest with guestID 1 does not exist
2024-06-02 19:55:58 ERROR c.s.s.service.MarketService - getProductsInfo: No products found
2024-06-02 19:55:58 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-02 19:55:59 ERROR c.s.s.service.MarketService - getProductsInfo: There is no store with id 2147483647.
2024-06-02 19:55:59 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-02 19:55:59 ERROR c.s.s.service.MarketService - Change quantity in cart failed for guestId: 2, storeId: 0, productId: 0, amount: 2. Error: Amount doesn't exist in store
2024-06-02 19:55:59 ERROR c.s.s.service.MarketService - Add product to cart failed for guestId: 2, storeId: 0, productId: 2147483647, amount: 3. Error: Amount doesn't exist in store
2024-06-02 19:56:00 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-02 19:56:00 ERROR c.s.s.service.MarketService - getStoreInfo: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-02 19:56:01 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Credit card invalid
2024-06-02 19:56:01 ERROR c.s.s.domain.auth.AuthFacade - user doesnt exist
2024-06-02 19:56:01 ERROR c.s.s.service.MarketService - error in login: password is incorrect
2024-06-02 19:56:02 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: You can not buy 5 of product 0 - there are only 4 in stock.


2024-06-02 19:56:02 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-02 19:56:02 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-02 19:56:02 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-02 20:10:14 ERROR c.s.s.service.MarketService - createStore: jwt isnt valid
2024-06-02 20:10:14 ERROR c.s.sadnamarket.domain.users.Member - Exception in logout: user isn't logged in
2024-06-02 20:10:14 ERROR c.s.s.service.MarketService - error in logout: user isn't logged in
2024-06-02 20:10:15 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=username that isn't very real does not exist
2024-06-02 20:10:15 ERROR c.s.s.service.MarketService - error in logout: User with username username that isn't very real does not exist
2024-06-02 20:10:18 ERROR c.s.s.service.MarketService - getStoreOrderHistory: There is no store with id 2147483647.
2024-06-02 20:10:19 ERROR c.s.s.domain.users.MemoryRepo - Exception in getMember: User with userName=Username that nobody has does not exist
2024-06-02 20:10:19 ERROR c.s.s.service.MarketService - Get order DTO history failed for username: Username that nobody has. Error: User with userName Username that nobody has does not exist
2024-06-02 20:10:19 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=Eric does not exist
2024-06-02 20:10:19 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: User with username Eric does not exist
2024-06-02 20:10:20 ERROR c.s.s.service.MarketService - closeStore: There is no store with id 2147483647.
2024-06-02 20:10:21 ERROR c.s.s.service.MarketService - getOwners: There is no store with id 2147483647.
2024-06-02 20:10:21 ERROR c.s.s.service.MarketService - getManagers: There is no store with id 2147483647.
2024-06-02 20:10:21 ERROR c.s.s.service.MarketService - deleteProductFromStore: user Mallory can not delete a product from store with id 0.
2024-06-02 20:10:22 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: jwt isnt valid
2024-06-02 20:10:22 ERROR c.s.s.domain.products.ProductFacade - Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. 
2024-06-02 20:10:22 ERROR c.s.s.domain.products.ProductFacade - Error adding product: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. 
java.lang.IllegalArgumentException: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. 
	at com.sadna.sadnamarket.domain.products.ProductFacade.checkProductAttributes(ProductFacade.java:305)
	at com.sadna.sadnamarket.domain.products.ProductFacade.addProduct(ProductFacade.java:43)
	at com.sadna.sadnamarket.domain.stores.StoreFacade.addProductToStore(StoreFacade.java:80)
	at com.sadna.sadnamarket.service.MarketService.addProductToStore(MarketService.java:101)
	at com.sadna.sadnamarket.service.MarketServiceTestAdapter.addProductToStore(MarketServiceTestAdapter.java:157)
	at com.sadna.sadnamarket.StoreOwnerTests.addProductBadInfoTest(StoreOwnerTests.java:86)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)
2024-06-02 20:10:22 ERROR c.s.s.service.MarketService - addProductToStore: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. 
2024-06-02 20:10:23 ERROR c.s.s.service.MarketService - getStoreOrderHistory: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-02 20:10:23 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: jwt isnt valid
2024-06-02 20:10:24 ERROR c.s.s.service.MarketService - closeStore: User Mallory can not close the store with id 0 (not a founder).
2024-06-02 20:10:25 ERROR c.s.sadnamarket.domain.users.Member - Exception in getRequest: member already has role in store
2024-06-02 20:10:25 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: member already has role in store
2024-06-02 20:10:26 ERROR c.s.s.service.MarketService - getOwners: There is no store with id 2147483647.
2024-06-02 20:10:26 ERROR c.s.s.service.MarketService - getManagers: There is no store with id 2147483647.
2024-06-02 20:10:26 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: User StoreOwnerMan can not add user Eric as an owner to store 0.
2024-06-02 20:10:27 ERROR c.s.s.service.MarketService - addManagerPermission: User StoreOwnerMan can not add user Eric as a manager to store 0.
2024-06-02 20:10:28 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: User StoreOwnerMan can not add user Eric as a manager to store 0.
2024-06-02 20:10:30 ERROR c.s.s.service.MarketService - getStoreOrderHistory: jwt isnt valid
2024-06-02 20:10:31 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: User Mallory can not add user Eric as a manager to store 0.
2024-06-02 20:10:31 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-02 20:10:31 ERROR c.s.s.service.MarketService - getStoreInfo: The product with id 0 doesn't exist.
2024-06-02 20:10:33 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: User Mallory can not add user Eric as an owner to store 0.
2024-06-02 20:10:33 ERROR c.s.s.service.MarketService - updateProductInStore: A store with id 0 does not have a product with id 2147483647.
2024-06-02 20:10:34 ERROR c.s.s.service.MarketService - deleteProductFromStore: Product Id 2147483647 does not exist.
2024-06-02 20:10:34 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=Eric does not exist
2024-06-02 20:10:34 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: User with username Eric does not exist
2024-06-02 20:10:35 ERROR c.s.s.service.MarketService - updateProductInStore: A store with id 0 does not have a product with id 0.
2024-06-02 20:10:36 ERROR c.s.s.service.MarketService - addManagerPermission: User Mallory can not add user Eric as a manager to store 0.
2024-06-02 20:10:37 ERROR c.s.s.domain.products.ProductFacade - Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
2024-06-02 20:10:37 ERROR c.s.s.domain.products.ProductFacade - Error updating product: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
java.lang.IllegalArgumentException: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
	at com.sadna.sadnamarket.domain.products.ProductFacade.checkProductAttributes(ProductFacade.java:305)
	at com.sadna.sadnamarket.domain.products.ProductFacade.updateProduct(ProductFacade.java:92)
	at com.sadna.sadnamarket.domain.stores.StoreFacade.updateProduct(StoreFacade.java:108)
	at com.sadna.sadnamarket.service.MarketService.updateProductInStore(MarketService.java:140)
	at com.sadna.sadnamarket.service.MarketServiceTestAdapter.editStoreProduct(MarketServiceTestAdapter.java:169)
	at com.sadna.sadnamarket.StoreOwnerTests.editProductBadInfoTest(StoreOwnerTests.java:122)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)
2024-06-02 20:10:37 ERROR c.s.s.service.MarketService - updateProductInStore: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
2024-06-02 20:10:39 ERROR c.s.s.service.MarketService - deleteProductFromStore: Product Id 0 does not exist.
2024-06-02 20:10:40 ERROR c.s.s.service.MarketService - updateProductInStore: user Mallory can not update a product in store with id 0.
2024-06-02 20:10:41 ERROR c.s.s.service.MarketService - addProductToStore: user Mallory can not add a product to store with id 0.
2024-06-02 20:10:41 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 999 does not exist.
2024-06-02 20:10:41 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-02 20:10:41 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 999 does not exist.
2024-06-02 20:10:41 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 4. Error: You can not buy 1 of product 0 - there are only 0 in stock.


2024-06-02 20:10:43 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-02 20:10:43 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-02 20:10:43 ERROR c.s.s.service.MarketService - Change quantity in cart failed for guestId: 2, storeId: 0, productId: 0, amount: 3. Error: Amount doesn't exist in store
2024-06-02 20:10:45 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Missing card details
2024-06-02 20:10:45 ERROR c.s.s.service.MarketService - Add product to cart failed for guestId: 2, storeId: 0, productId: 0, amount: 3. Error: Amount doesn't exist in store
2024-06-02 20:10:45 ERROR c.s.s.service.MarketService - getStoreInfo: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-02 20:10:46 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Order cannot be supplied
2024-06-02 20:10:46 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-02 20:10:46 ERROR c.s.s.service.MarketService - getStoreInfo: There is no store with id 2147483647.
2024-06-02 20:10:47 ERROR c.s.s.domain.users.UserFacade - user JohnDoe already logged in
2024-06-02 20:10:47 ERROR c.s.s.service.MarketService - error in login: user already logged in
2024-06-02 20:10:47 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasGuest: Guest with guestID=1 does not exist
2024-06-02 20:10:47 ERROR c.s.s.service.MarketService - error in exitGuest: Guest with guestID 1 does not exist
2024-06-02 20:10:47 ERROR c.s.s.service.MarketService - getProductsInfo: No products found
2024-06-02 20:10:47 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-02 20:10:48 ERROR c.s.s.service.MarketService - getProductsInfo: There is no store with id 2147483647.
2024-06-02 20:10:48 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-02 20:10:48 ERROR c.s.s.service.MarketService - Change quantity in cart failed for guestId: 2, storeId: 0, productId: 0, amount: 2. Error: Amount doesn't exist in store
2024-06-02 20:10:48 ERROR c.s.s.service.MarketService - Add product to cart failed for guestId: 2, storeId: 0, productId: 2147483647, amount: 3. Error: Amount doesn't exist in store
2024-06-02 20:10:49 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-02 20:10:49 ERROR c.s.s.service.MarketService - getStoreInfo: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-02 20:10:50 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Credit card invalid
2024-06-02 20:10:50 ERROR c.s.s.domain.auth.AuthFacade - user doesnt exist
2024-06-02 20:10:50 ERROR c.s.s.service.MarketService - error in login: password is incorrect
2024-06-02 20:10:51 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: You can not buy 5 of product 0 - there are only 4 in stock.


2024-06-02 20:10:51 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-02 20:10:51 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-02 20:10:51 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-02 20:36:56 ERROR c.s.s.service.MarketService - createStore: jwt isnt valid
2024-06-02 20:36:57 ERROR c.s.sadnamarket.domain.users.Member - Exception in logout: user isn't logged in
2024-06-02 20:36:57 ERROR c.s.s.service.MarketService - error in logout: user isn't logged in
2024-06-02 20:36:57 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=username that isn't very real does not exist
2024-06-02 20:36:57 ERROR c.s.s.service.MarketService - error in logout: User with username username that isn't very real does not exist
2024-06-02 20:37:01 ERROR c.s.s.service.MarketService - getStoreOrderHistory: There is no store with id 2147483647.
2024-06-02 20:37:01 ERROR c.s.s.domain.users.MemoryRepo - Exception in getMember: User with userName=Username that nobody has does not exist
2024-06-02 20:37:01 ERROR c.s.s.service.MarketService - Get order DTO history failed for username: Username that nobody has. Error: User with userName Username that nobody has does not exist
2024-06-02 20:37:02 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=Eric does not exist
2024-06-02 20:37:02 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: User with username Eric does not exist
2024-06-02 20:37:03 ERROR c.s.s.service.MarketService - closeStore: There is no store with id 2147483647.
2024-06-02 20:37:03 ERROR c.s.s.service.MarketService - getOwners: There is no store with id 2147483647.
2024-06-02 20:37:03 ERROR c.s.s.service.MarketService - getManagers: There is no store with id 2147483647.
2024-06-02 20:37:04 ERROR c.s.s.service.MarketService - deleteProductFromStore: user Mallory can not delete a product from store with id 0.
2024-06-02 20:37:05 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: jwt isnt valid
2024-06-02 20:37:05 ERROR c.s.s.domain.products.ProductFacade - Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. 
2024-06-02 20:37:05 ERROR c.s.s.domain.products.ProductFacade - Error adding product: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. 
java.lang.IllegalArgumentException: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. 
	at com.sadna.sadnamarket.domain.products.ProductFacade.checkProductAttributes(ProductFacade.java:305)
	at com.sadna.sadnamarket.domain.products.ProductFacade.addProduct(ProductFacade.java:43)
	at com.sadna.sadnamarket.domain.stores.StoreFacade.addProductToStore(StoreFacade.java:80)
	at com.sadna.sadnamarket.service.MarketService.addProductToStore(MarketService.java:101)
	at com.sadna.sadnamarket.service.MarketServiceTestAdapter.addProductToStore(MarketServiceTestAdapter.java:157)
	at com.sadna.sadnamarket.StoreOwnerTests.addProductBadInfoTest(StoreOwnerTests.java:86)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)
2024-06-02 20:37:05 ERROR c.s.s.service.MarketService - addProductToStore: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. 
2024-06-02 20:37:06 ERROR c.s.s.service.MarketService - getStoreOrderHistory: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-02 20:37:06 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: jwt isnt valid
2024-06-02 20:37:07 ERROR c.s.s.service.MarketService - closeStore: User Mallory can not close the store with id 0 (not a founder).
2024-06-02 20:37:08 ERROR c.s.sadnamarket.domain.users.Member - Exception in getRequest: member already has role in store
2024-06-02 20:37:08 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: member already has role in store
2024-06-02 20:37:09 ERROR c.s.s.service.MarketService - getOwners: There is no store with id 2147483647.
2024-06-02 20:37:09 ERROR c.s.s.service.MarketService - getManagers: There is no store with id 2147483647.
2024-06-02 20:37:09 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: User StoreOwnerMan can not add user Eric as an owner to store 0.
2024-06-02 20:37:10 ERROR c.s.s.service.MarketService - addManagerPermission: User StoreOwnerMan can not add user Eric as a manager to store 0.
2024-06-02 20:37:11 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: User StoreOwnerMan can not add user Eric as a manager to store 0.
2024-06-02 20:37:13 ERROR c.s.s.service.MarketService - getStoreOrderHistory: jwt isnt valid
2024-06-02 20:37:14 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: User Mallory can not add user Eric as a manager to store 0.
2024-06-02 20:37:14 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-02 20:37:14 ERROR c.s.s.service.MarketService - getStoreInfo: Product Id 0 does not exist.
2024-06-02 20:37:16 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: User Mallory can not add user Eric as an owner to store 0.
2024-06-02 20:37:16 ERROR c.s.s.service.MarketService - updateProductInStore: A store with id 0 does not have a product with id 2147483647.
2024-06-02 20:37:16 ERROR c.s.s.service.MarketService - deleteProductFromStore: Product Id 2147483647 does not exist.
2024-06-02 20:37:17 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=Eric does not exist
2024-06-02 20:37:17 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: User with username Eric does not exist
2024-06-02 20:37:18 ERROR c.s.s.service.MarketService - updateProductInStore: A store with id 0 does not have a product with id 0.
2024-06-02 20:37:19 ERROR c.s.s.service.MarketService - addManagerPermission: User Mallory can not add user Eric as a manager to store 0.
2024-06-02 20:37:20 ERROR c.s.s.domain.products.ProductFacade - Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
2024-06-02 20:37:20 ERROR c.s.s.domain.products.ProductFacade - Error updating product: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
java.lang.IllegalArgumentException: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
	at com.sadna.sadnamarket.domain.products.ProductFacade.checkProductAttributes(ProductFacade.java:305)
	at com.sadna.sadnamarket.domain.products.ProductFacade.updateProduct(ProductFacade.java:92)
	at com.sadna.sadnamarket.domain.stores.StoreFacade.updateProduct(StoreFacade.java:108)
	at com.sadna.sadnamarket.service.MarketService.updateProductInStore(MarketService.java:140)
	at com.sadna.sadnamarket.service.MarketServiceTestAdapter.editStoreProduct(MarketServiceTestAdapter.java:169)
	at com.sadna.sadnamarket.StoreOwnerTests.editProductBadInfoTest(StoreOwnerTests.java:122)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)
2024-06-02 20:37:20 ERROR c.s.s.service.MarketService - updateProductInStore: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
2024-06-02 20:37:22 ERROR c.s.s.service.MarketService - deleteProductFromStore: Product Id 0 does not exist.
2024-06-02 20:37:23 ERROR c.s.s.service.MarketService - updateProductInStore: user Mallory can not update a product in store with id 0.
2024-06-02 20:37:24 ERROR c.s.s.service.MarketService - addProductToStore: user Mallory can not add a product to store with id 0.
2024-06-02 20:37:24 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 999 does not exist.
2024-06-02 20:37:24 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-02 20:37:24 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 999 does not exist.
2024-06-02 20:37:24 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 4. Error: You can not buy 1 of product 0 - there are only 0 in stock.


2024-06-02 20:37:25 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-02 20:37:26 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-02 20:37:26 ERROR c.s.s.service.MarketService - Change quantity in cart failed for guestId: 2, storeId: 0, productId: 0, amount: 3. Error: Amount doesn't exist in store
2024-06-02 20:37:28 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Missing card details
2024-06-02 20:37:28 ERROR c.s.s.service.MarketService - Add product to cart failed for guestId: 2, storeId: 0, productId: 0, amount: 3. Error: Amount doesn't exist in store
2024-06-02 20:37:28 ERROR c.s.s.service.MarketService - getStoreInfo: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-02 20:37:29 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Order cannot be supplied
2024-06-02 20:37:29 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-02 20:37:29 ERROR c.s.s.service.MarketService - getStoreInfo: There is no store with id 2147483647.
2024-06-02 20:37:30 ERROR c.s.s.domain.users.UserFacade - user JohnDoe already logged in
2024-06-02 20:37:30 ERROR c.s.s.service.MarketService - error in login: user already logged in
2024-06-02 20:37:30 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasGuest: Guest with guestID=1 does not exist
2024-06-02 20:37:30 ERROR c.s.s.service.MarketService - error in exitGuest: Guest with guestID 1 does not exist
2024-06-02 20:37:30 ERROR c.s.s.service.MarketService - getProductsInfo: No products found
2024-06-02 20:37:30 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-02 20:37:31 ERROR c.s.s.service.MarketService - getProductsInfo: There is no store with id 2147483647.
2024-06-02 20:37:31 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-02 20:37:31 ERROR c.s.s.service.MarketService - Change quantity in cart failed for guestId: 2, storeId: 0, productId: 0, amount: 2. Error: Amount doesn't exist in store
2024-06-02 20:37:31 ERROR c.s.s.service.MarketService - Add product to cart failed for guestId: 2, storeId: 0, productId: 2147483647, amount: 3. Error: Amount doesn't exist in store
2024-06-02 20:37:32 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-02 20:37:32 ERROR c.s.s.service.MarketService - getStoreInfo: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-02 20:37:33 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Credit card invalid
2024-06-02 20:37:33 ERROR c.s.s.domain.auth.AuthFacade - user doesnt exist
2024-06-02 20:37:33 ERROR c.s.s.service.MarketService - error in login: password is incorrect
2024-06-02 20:37:33 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: You can not buy 5 of product 0 - there are only 4 in stock.


2024-06-02 20:37:34 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-02 20:37:34 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-02 20:37:34 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-02 21:02:27 ERROR c.s.s.service.MarketService - createStore: jwt isnt valid
2024-06-02 21:02:27 ERROR c.s.sadnamarket.domain.users.Member - Exception in logout: user isn't logged in
2024-06-02 21:02:27 ERROR c.s.s.service.MarketService - error in logout: user isn't logged in
2024-06-02 21:02:28 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=username that isn't very real does not exist
2024-06-02 21:02:28 ERROR c.s.s.service.MarketService - error in logout: User with userName username that isn't very real does not exist
2024-06-02 21:02:31 ERROR c.s.s.service.MarketService - getStoreOrderHistory: There is no store with id 2147483647.
2024-06-02 21:02:32 ERROR c.s.s.domain.users.MemoryRepo - Exception in getMember: User with userName=Username that nobody has does not exist
2024-06-02 21:02:32 ERROR c.s.s.service.MarketService - Get order DTO history failed for username: Username that nobody has. Error: User with userName Username that nobody has does not exist
2024-06-02 21:02:33 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=Eric does not exist
2024-06-02 21:02:33 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: User with userName Eric does not exist
2024-06-02 21:02:33 ERROR c.s.s.service.MarketService - closeStore: There is no store with id 2147483647.
2024-06-02 21:02:34 ERROR c.s.s.service.MarketService - getOwners: There is no store with id 2147483647.
2024-06-02 21:02:34 ERROR c.s.s.service.MarketService - getManagers: There is no store with id 2147483647.
2024-06-02 21:02:34 ERROR c.s.s.service.MarketService - deleteProductFromStore: user Mallory can not delete a product from store with id 0.
2024-06-02 21:02:35 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: jwt isnt valid
2024-06-02 21:02:35 ERROR c.s.s.domain.products.ProductFacade - Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. 
2024-06-02 21:02:35 ERROR c.s.s.domain.products.ProductFacade - Error adding product: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. 
java.lang.IllegalArgumentException: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. 
	at com.sadna.sadnamarket.domain.products.ProductFacade.checkProductAttributes(ProductFacade.java:305)
	at com.sadna.sadnamarket.domain.products.ProductFacade.addProduct(ProductFacade.java:43)
	at com.sadna.sadnamarket.domain.stores.StoreFacade.addProductToStore(StoreFacade.java:80)
	at com.sadna.sadnamarket.service.MarketService.addProductToStore(MarketService.java:101)
	at com.sadna.sadnamarket.service.MarketServiceTestAdapter.addProductToStore(MarketServiceTestAdapter.java:157)
	at com.sadna.sadnamarket.StoreOwnerTests.addProductBadInfoTest(StoreOwnerTests.java:86)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)
2024-06-02 21:02:35 ERROR c.s.s.service.MarketService - addProductToStore: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. 
2024-06-02 21:02:36 ERROR c.s.s.service.MarketService - getStoreOrderHistory: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-02 21:02:37 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: jwt isnt valid
2024-06-02 21:02:37 ERROR c.s.s.service.MarketService - closeStore: User Mallory can not close the store with id 0 (not a founder).
2024-06-02 21:02:38 ERROR c.s.sadnamarket.domain.users.Member - Exception in getRequest: member already has role in store
2024-06-02 21:02:38 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: member already has role in store
2024-06-02 21:02:39 ERROR c.s.s.service.MarketService - getOwners: There is no store with id 2147483647.
2024-06-02 21:02:39 ERROR c.s.s.service.MarketService - getManagers: There is no store with id 2147483647.
2024-06-02 21:02:40 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: User StoreOwnerMan can not add user Eric as an owner to store 0.
2024-06-02 21:02:40 ERROR c.s.s.service.MarketService - addManagerPermission: User StoreOwnerMan can not add user Eric as a manager to store 0.
2024-06-02 21:02:41 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: User StoreOwnerMan can not add user Eric as a manager to store 0.
2024-06-02 21:02:44 ERROR c.s.s.service.MarketService - getStoreOrderHistory: jwt isnt valid
2024-06-02 21:02:44 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: User Mallory can not add user Eric as a manager to store 0.
2024-06-02 21:02:45 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-02 21:02:45 ERROR c.s.s.service.MarketService - getStoreInfo: Product Id 0 does not exist.
2024-06-02 21:02:46 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: User Mallory can not add user Eric as an owner to store 0.
2024-06-02 21:02:47 ERROR c.s.s.service.MarketService - updateProductInStore: A store with id 0 does not have a product with id 2147483647.
2024-06-02 21:02:47 ERROR c.s.s.service.MarketService - deleteProductFromStore: Product Id 2147483647 does not exist.
2024-06-02 21:02:48 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=Eric does not exist
2024-06-02 21:02:48 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: User with userName Eric does not exist
2024-06-02 21:02:49 ERROR c.s.s.service.MarketService - updateProductInStore: A store with id 0 does not have a product with id 0.
2024-06-02 21:02:50 ERROR c.s.s.service.MarketService - addManagerPermission: User Mallory can not add user Eric as a manager to store 0.
2024-06-02 21:02:51 ERROR c.s.s.domain.products.ProductFacade - Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
2024-06-02 21:02:51 ERROR c.s.s.domain.products.ProductFacade - Error updating product: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
java.lang.IllegalArgumentException: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
	at com.sadna.sadnamarket.domain.products.ProductFacade.checkProductAttributes(ProductFacade.java:305)
	at com.sadna.sadnamarket.domain.products.ProductFacade.updateProduct(ProductFacade.java:92)
	at com.sadna.sadnamarket.domain.stores.StoreFacade.updateProduct(StoreFacade.java:108)
	at com.sadna.sadnamarket.service.MarketService.updateProductInStore(MarketService.java:140)
	at com.sadna.sadnamarket.service.MarketServiceTestAdapter.editStoreProduct(MarketServiceTestAdapter.java:169)
	at com.sadna.sadnamarket.StoreOwnerTests.editProductBadInfoTest(StoreOwnerTests.java:122)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)
2024-06-02 21:02:51 ERROR c.s.s.service.MarketService - updateProductInStore: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
2024-06-02 21:02:52 ERROR c.s.s.service.MarketService - deleteProductFromStore: Product Id 0 does not exist.
2024-06-02 21:02:54 ERROR c.s.s.service.MarketService - updateProductInStore: user Mallory can not update a product in store with id 0.
2024-06-02 21:02:54 ERROR c.s.s.service.MarketService - addProductToStore: user Mallory can not add a product to store with id 0.
2024-06-02 21:02:54 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 999 does not exist.
2024-06-02 21:02:54 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-02 21:02:54 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 999 does not exist.
2024-06-02 21:02:55 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 4. Error: You can not buy 1 of product 0 - there are only 0 in stock.


2024-06-02 21:02:56 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-02 21:02:57 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-02 21:02:57 ERROR c.s.s.service.MarketService - Change quantity in cart failed for guestId: 2, storeId: 0, productId: 0, amount: 3. Error: Amount doesn't exist in store
2024-06-02 21:02:58 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Missing card details
2024-06-02 21:02:59 ERROR c.s.s.service.MarketService - Add product to cart failed for guestId: 2, storeId: 0, productId: 0, amount: 3. Error: Amount doesn't exist in store
2024-06-02 21:02:59 ERROR c.s.s.service.MarketService - getStoreInfo: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-02 21:02:59 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Order cannot be supplied
2024-06-02 21:02:59 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-02 21:03:00 ERROR c.s.s.service.MarketService - getStoreInfo: There is no store with id 2147483647.
2024-06-02 21:03:00 ERROR c.s.s.domain.users.UserFacade - user JohnDoe already logged in
2024-06-02 21:03:00 ERROR c.s.s.service.MarketService - error in login: user already logged in
2024-06-02 21:03:00 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasGuest: Guest with guestID=1 does not exist
2024-06-02 21:03:00 ERROR c.s.s.service.MarketService - error in exitGuest: Guest with guestID 1 does not exist
2024-06-02 21:03:01 ERROR c.s.s.service.MarketService - getProductsInfo: No products found
2024-06-02 21:03:01 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-02 21:03:01 ERROR c.s.s.service.MarketService - getProductsInfo: There is no store with id 2147483647.
2024-06-02 21:03:02 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-02 21:03:02 ERROR c.s.s.service.MarketService - Change quantity in cart failed for guestId: 2, storeId: 0, productId: 0, amount: 2. Error: Amount doesn't exist in store
2024-06-02 21:03:02 ERROR c.s.s.service.MarketService - Add product to cart failed for guestId: 2, storeId: 0, productId: 2147483647, amount: 3. Error: Amount doesn't exist in store
2024-06-02 21:03:02 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-02 21:03:03 ERROR c.s.s.service.MarketService - getStoreInfo: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-02 21:03:03 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Credit card is invalid
2024-06-02 21:03:04 ERROR c.s.s.domain.auth.AuthFacade - user doesnt exist
2024-06-02 21:03:04 ERROR c.s.s.service.MarketService - error in login: password is incorrect
2024-06-02 21:03:04 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: You can not buy 5 of product 0 - there are only 4 in stock.


2024-06-02 21:03:04 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-02 21:03:04 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-02 21:03:04 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-04 17:15:04 ERROR c.s.s.service.MarketService - Change quantity in cart failed for guestId: 2, storeId: 0, productId: 0, amount: 3. Error: Amount doesn't exist in store
2024-06-04 17:15:06 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Missing card details
2024-06-04 17:15:06 ERROR c.s.s.domain.users.MemoryRepo - Exception in getMember: User with userName=2 does not exist
2024-06-04 17:15:06 ERROR c.s.s.service.MarketService - Get order DTO history failed for username: 2. Error: User with userName 2 does not exist
2024-06-04 17:15:06 ERROR c.s.s.service.MarketService - Add product to cart failed for guestId: 2, storeId: 0, productId: 0, amount: 3. Error: Amount doesn't exist in store
2024-06-04 17:15:07 ERROR c.s.s.service.MarketService - getStoreInfo: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-04 17:15:07 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Order cannot be supplied
2024-06-04 17:15:07 ERROR c.s.s.domain.users.MemoryRepo - Exception in getMember: User with userName=2 does not exist
2024-06-04 17:15:07 ERROR c.s.s.service.MarketService - Get order DTO history failed for username: 2. Error: User with userName 2 does not exist
2024-06-04 17:15:07 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-04 17:15:08 ERROR c.s.s.service.MarketService - getStoreInfo: There is no store with id 2147483647.
2024-06-04 17:15:08 ERROR c.s.s.domain.users.UserFacade - user JohnDoe already logged in
2024-06-04 17:15:08 ERROR c.s.s.service.MarketService - error in login: user already logged in
2024-06-04 17:15:08 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasGuest: Guest with guestID=1 does not exist
2024-06-04 17:15:08 ERROR c.s.s.service.MarketService - error in exitGuest: Guest with guestID 1 does not exist
2024-06-04 17:15:08 ERROR c.s.s.service.MarketService - getProductsInfo: No products found
2024-06-04 17:15:09 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-04 17:15:09 ERROR c.s.s.service.MarketService - getProductsInfo: There is no store with id 2147483647.
2024-06-04 17:15:10 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-04 17:15:10 ERROR c.s.s.service.MarketService - Change quantity in cart failed for guestId: 2, storeId: 0, productId: 0, amount: 2. Error: Amount doesn't exist in store
2024-06-04 17:15:10 ERROR c.s.s.service.MarketService - Add product to cart failed for guestId: 2, storeId: 0, productId: 2147483647, amount: 3. Error: Amount doesn't exist in store
2024-06-04 17:15:11 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-04 17:15:11 ERROR c.s.s.service.MarketService - getStoreInfo: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-04 17:15:11 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Credit card is invalid
2024-06-04 17:15:12 ERROR c.s.s.domain.auth.AuthFacade - password incorrect
2024-06-04 17:15:12 ERROR c.s.s.service.MarketService - error in login: password is incorrect
2024-06-04 17:15:12 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: You can not buy 5 of product 0 - there are only 4 in stock.


2024-06-04 17:15:12 ERROR c.s.s.domain.users.MemoryRepo - Exception in getMember: User with userName=2 does not exist
2024-06-04 17:15:12 ERROR c.s.s.service.MarketService - Get order DTO history failed for username: 2. Error: User with userName 2 does not exist
2024-06-04 17:15:13 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-04 17:15:13 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-04 17:15:13 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-04 17:16:24 ERROR c.s.s.service.MarketService - Change quantity in cart failed for guestId: 2, storeId: 0, productId: 0, amount: 3. Error: Amount doesn't exist in store
2024-06-04 17:16:26 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Missing card details
2024-06-04 17:16:26 ERROR c.s.s.domain.users.MemoryRepo - Exception in getMember: User with userName=2 does not exist
2024-06-04 17:16:26 ERROR c.s.s.service.MarketService - Get order DTO history failed for username: 2. Error: User with userName 2 does not exist
2024-06-04 17:16:27 ERROR c.s.s.service.MarketService - Add product to cart failed for guestId: 2, storeId: 0, productId: 0, amount: 3. Error: Amount doesn't exist in store
2024-06-04 17:16:27 ERROR c.s.s.service.MarketService - getStoreInfo: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-04 17:16:27 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Order cannot be supplied
2024-06-04 17:16:27 ERROR c.s.s.domain.users.MemoryRepo - Exception in getMember: User with userName=2 does not exist
2024-06-04 17:16:27 ERROR c.s.s.service.MarketService - Get order DTO history failed for username: 2. Error: User with userName 2 does not exist
2024-06-04 17:16:28 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-04 17:16:28 ERROR c.s.s.service.MarketService - getStoreInfo: There is no store with id 2147483647.
2024-06-04 17:16:29 ERROR c.s.s.domain.users.UserFacade - user JohnDoe already logged in
2024-06-04 17:16:29 ERROR c.s.s.service.MarketService - error in login: user already logged in
2024-06-04 17:16:29 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasGuest: Guest with guestID=1 does not exist
2024-06-04 17:16:29 ERROR c.s.s.service.MarketService - error in exitGuest: Guest with guestID 1 does not exist
2024-06-04 17:16:29 ERROR c.s.s.service.MarketService - getProductsInfo: No products found
2024-06-04 17:16:29 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-04 17:16:30 ERROR c.s.s.service.MarketService - getProductsInfo: There is no store with id 2147483647.
2024-06-04 17:16:30 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-04 17:16:30 ERROR c.s.s.service.MarketService - Change quantity in cart failed for guestId: 2, storeId: 0, productId: 0, amount: 2. Error: Amount doesn't exist in store
2024-06-04 17:16:30 ERROR c.s.s.service.MarketService - Add product to cart failed for guestId: 2, storeId: 0, productId: 2147483647, amount: 3. Error: Amount doesn't exist in store
2024-06-04 17:16:31 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-04 17:16:31 ERROR c.s.s.service.MarketService - getStoreInfo: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-04 17:16:32 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Credit card is invalid
2024-06-04 17:16:32 ERROR c.s.s.domain.auth.AuthFacade - password incorrect
2024-06-04 17:16:32 ERROR c.s.s.service.MarketService - error in login: password is incorrect
2024-06-04 17:16:32 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: You can not buy 5 of product 0 - there are only 4 in stock.


2024-06-04 17:16:32 ERROR c.s.s.domain.users.MemoryRepo - Exception in getMember: User with userName=2 does not exist
2024-06-04 17:16:32 ERROR c.s.s.service.MarketService - Get order DTO history failed for username: 2. Error: User with userName 2 does not exist
2024-06-04 17:16:33 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-04 17:16:33 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-04 17:16:33 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-04 17:17:16 ERROR c.s.s.service.MarketService - Change quantity in cart failed for guestId: 2, storeId: 0, productId: 0, amount: 3. Error: Amount doesn't exist in store
2024-06-04 17:17:18 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Missing card details
2024-06-04 17:17:18 ERROR c.s.s.domain.users.MemoryRepo - Exception in getMember: User with userName=2 does not exist
2024-06-04 17:17:18 ERROR c.s.s.service.MarketService - Get order DTO history failed for username: 2. Error: User with userName 2 does not exist
2024-06-04 17:17:19 ERROR c.s.s.service.MarketService - Add product to cart failed for guestId: 2, storeId: 0, productId: 0, amount: 3. Error: Amount doesn't exist in store
2024-06-04 17:17:19 ERROR c.s.s.service.MarketService - getStoreInfo: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-04 17:17:19 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Order cannot be supplied
2024-06-04 17:17:19 ERROR c.s.s.domain.users.MemoryRepo - Exception in getMember: User with userName=2 does not exist
2024-06-04 17:17:19 ERROR c.s.s.service.MarketService - Get order DTO history failed for username: 2. Error: User with userName 2 does not exist
2024-06-04 17:17:20 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-04 17:17:20 ERROR c.s.s.service.MarketService - getStoreInfo: There is no store with id 2147483647.
2024-06-04 17:17:21 ERROR c.s.s.domain.users.UserFacade - user JohnDoe already logged in
2024-06-04 17:17:21 ERROR c.s.s.service.MarketService - error in login: user already logged in
2024-06-04 17:17:21 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasGuest: Guest with guestID=1 does not exist
2024-06-04 17:17:21 ERROR c.s.s.service.MarketService - error in exitGuest: Guest with guestID 1 does not exist
2024-06-04 17:17:21 ERROR c.s.s.service.MarketService - getProductsInfo: No products found
2024-06-04 17:17:21 ERROR c.s.s.service.MarketService - getStoreInfo: Product Id 2147483647 does not exist.
2024-06-04 17:17:22 ERROR c.s.s.service.MarketService - getProductsInfo: There is no store with id 2147483647.
2024-06-04 17:17:22 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-04 17:17:22 ERROR c.s.s.service.MarketService - Change quantity in cart failed for guestId: 2, storeId: 0, productId: 0, amount: 2. Error: Amount doesn't exist in store
2024-06-04 17:17:23 ERROR c.s.s.service.MarketService - Add product to cart failed for guestId: 2, storeId: 0, productId: 2147483647, amount: 3. Error: Amount doesn't exist in store
2024-06-04 17:17:23 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-04 17:17:24 ERROR c.s.s.service.MarketService - getStoreInfo: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-04 17:17:24 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Credit card is invalid
2024-06-04 17:17:25 ERROR c.s.s.domain.auth.AuthFacade - password incorrect
2024-06-04 17:17:25 ERROR c.s.s.service.MarketService - error in login: password is incorrect
2024-06-04 17:17:25 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: You can not buy 5 of product 0 - there are only 4 in stock.


2024-06-04 17:17:25 ERROR c.s.s.domain.users.MemoryRepo - Exception in getMember: User with userName=2 does not exist
2024-06-04 17:17:25 ERROR c.s.s.service.MarketService - Get order DTO history failed for username: 2. Error: User with userName 2 does not exist
2024-06-04 17:17:25 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-04 17:17:26 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-04 17:17:26 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-04 17:22:37 ERROR c.s.s.service.MarketService - Change quantity in cart failed for guestId: 2, storeId: 0, productId: 0, amount: 3. Error: Amount doesn't exist in store
2024-06-04 17:22:39 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Missing card details
2024-06-04 17:22:39 ERROR c.s.s.domain.users.MemoryRepo - Exception in getMember: User with userName=2 does not exist
2024-06-04 17:22:39 ERROR c.s.s.service.MarketService - Get order DTO history failed for username: 2. Error: User with userName 2 does not exist
2024-06-04 17:22:40 ERROR c.s.s.service.MarketService - Add product to cart failed for guestId: 2, storeId: 0, productId: 0, amount: 3. Error: Amount doesn't exist in store
2024-06-04 17:22:40 ERROR c.s.s.service.MarketService - getStoreInfo: Cannot invoke "String.equals(Object)" because "username" is null
2024-06-04 17:22:40 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Order cannot be supplied
2024-06-04 17:22:40 ERROR c.s.s.domain.users.MemoryRepo - Exception in getMember: User with userName=2 does not exist
2024-06-04 17:22:40 ERROR c.s.s.service.MarketService - Get order DTO history failed for username: 2. Error: User with userName 2 does not exist
2024-06-04 17:22:40 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-04 17:22:41 ERROR c.s.s.service.MarketService - getStoreInfo: There is no store with id 2147483647.
2024-06-04 17:22:41 ERROR c.s.s.domain.users.UserFacade - user JohnDoe already logged in
2024-06-04 17:22:41 ERROR c.s.s.service.MarketService - error in login: user already logged in
2024-06-04 17:22:41 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasGuest: Guest with guestID=1 does not exist
2024-06-04 17:22:41 ERROR c.s.s.service.MarketService - error in exitGuest: Guest with guestID 1 does not exist
2024-06-04 17:22:42 ERROR c.s.s.service.MarketService - getProductsInfo: No products found
2024-06-04 17:22:42 ERROR c.s.s.service.MarketService - getStoreInfo: Product Id 2147483647 does not exist.
2024-06-04 17:22:42 ERROR c.s.s.service.MarketService - getProductsInfo: There is no store with id 2147483647.
2024-06-04 17:22:43 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-04 17:22:43 ERROR c.s.s.service.MarketService - Change quantity in cart failed for guestId: 2, storeId: 0, productId: 0, amount: 2. Error: Amount doesn't exist in store
2024-06-04 17:22:43 ERROR c.s.s.service.MarketService - Add product to cart failed for guestId: 2, storeId: 0, productId: 2147483647, amount: 3. Error: Amount doesn't exist in store
2024-06-04 17:22:44 ERROR c.s.s.service.MarketService - getStoreInfo: Cannot invoke "String.equals(Object)" because "username" is null
2024-06-04 17:22:44 ERROR c.s.s.service.MarketService - getStoreInfo: Cannot invoke "String.equals(Object)" because "username" is null
2024-06-04 17:22:44 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Payment could not be completed for store 0
2024-06-04 17:22:44 ERROR c.s.s.domain.users.MemoryRepo - Exception in getMember: User with userName=2 does not exist
2024-06-04 17:22:44 ERROR c.s.s.service.MarketService - Get order DTO history failed for username: 2. Error: User with userName 2 does not exist
2024-06-04 17:22:45 ERROR c.s.s.domain.auth.AuthFacade - password incorrect
2024-06-04 17:22:45 ERROR c.s.s.service.MarketService - error in login: password is incorrect
2024-06-04 17:22:45 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: You can not buy 5 of product 0 - there are only 4 in stock.


2024-06-04 17:22:45 ERROR c.s.s.domain.users.MemoryRepo - Exception in getMember: User with userName=2 does not exist
2024-06-04 17:22:45 ERROR c.s.s.service.MarketService - Get order DTO history failed for username: 2. Error: User with userName 2 does not exist
2024-06-04 17:22:46 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-04 17:22:46 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-04 17:22:46 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-04 17:23:54 ERROR c.s.s.service.MarketService - Change quantity in cart failed for guestId: 2, storeId: 0, productId: 0, amount: 3. Error: Amount doesn't exist in store
2024-06-04 17:23:57 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Missing card details
2024-06-04 17:23:57 ERROR c.s.s.domain.users.MemoryRepo - Exception in getMember: User with userName=2 does not exist
2024-06-04 17:23:57 ERROR c.s.s.service.MarketService - Get order DTO history failed for username: 2. Error: User with userName 2 does not exist
2024-06-04 17:23:57 ERROR c.s.s.service.MarketService - Add product to cart failed for guestId: 2, storeId: 0, productId: 0, amount: 3. Error: Amount doesn't exist in store
2024-06-04 17:23:57 ERROR c.s.s.service.MarketService - getStoreInfo: A store with id 0 is not active.
2024-06-04 17:23:57 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Order cannot be supplied
2024-06-04 17:23:57 ERROR c.s.s.domain.users.MemoryRepo - Exception in getMember: User with userName=2 does not exist
2024-06-04 17:23:57 ERROR c.s.s.service.MarketService - Get order DTO history failed for username: 2. Error: User with userName 2 does not exist
2024-06-04 17:23:58 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-04 17:23:58 ERROR c.s.s.service.MarketService - getStoreInfo: There is no store with id 2147483647.
2024-06-04 17:23:59 ERROR c.s.s.domain.users.UserFacade - user JohnDoe already logged in
2024-06-04 17:23:59 ERROR c.s.s.service.MarketService - error in login: user already logged in
2024-06-04 17:23:59 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasGuest: Guest with guestID=1 does not exist
2024-06-04 17:23:59 ERROR c.s.s.service.MarketService - error in exitGuest: Guest with guestID 1 does not exist
2024-06-04 17:23:59 ERROR c.s.s.service.MarketService - getProductsInfo: No products found
2024-06-04 17:23:59 ERROR c.s.s.service.MarketService - getStoreInfo: Product Id 2147483647 does not exist.
2024-06-04 17:24:00 ERROR c.s.s.service.MarketService - getProductsInfo: There is no store with id 2147483647.
2024-06-04 17:24:00 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-04 17:24:00 ERROR c.s.s.service.MarketService - Change quantity in cart failed for guestId: 2, storeId: 0, productId: 0, amount: 2. Error: Amount doesn't exist in store
2024-06-04 17:24:00 ERROR c.s.s.service.MarketService - Add product to cart failed for guestId: 2, storeId: 0, productId: 2147483647, amount: 3. Error: Amount doesn't exist in store
2024-06-04 17:24:01 ERROR c.s.s.service.MarketService - getStoreInfo: The store of product with id 0 is not active.
2024-06-04 17:24:01 ERROR c.s.s.service.MarketService - getStoreInfo: A store with id 0 is not active.
2024-06-04 17:24:02 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Payment could not be completed for store 0
2024-06-04 17:24:02 ERROR c.s.s.domain.users.MemoryRepo - Exception in getMember: User with userName=2 does not exist
2024-06-04 17:24:02 ERROR c.s.s.service.MarketService - Get order DTO history failed for username: 2. Error: User with userName 2 does not exist
2024-06-04 17:24:02 ERROR c.s.s.domain.auth.AuthFacade - password incorrect
2024-06-04 17:24:02 ERROR c.s.s.service.MarketService - error in login: password is incorrect
2024-06-04 17:24:03 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: You can not buy 5 of product 0 - there are only 4 in stock.


2024-06-04 17:24:03 ERROR c.s.s.domain.users.MemoryRepo - Exception in getMember: User with userName=2 does not exist
2024-06-04 17:24:03 ERROR c.s.s.service.MarketService - Get order DTO history failed for username: 2. Error: User with userName 2 does not exist
2024-06-04 17:24:03 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-04 17:24:03 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-04 17:24:03 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-04 17:33:43 ERROR c.s.s.service.MarketService - Change quantity in cart failed for guestId: 2, storeId: 0, productId: 0, amount: 3. Error: Amount doesn't exist in store
2024-06-04 17:33:46 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Missing card details
2024-06-04 17:33:46 ERROR c.s.s.domain.users.MemoryRepo - Exception in getMember: User with userName=2 does not exist
2024-06-04 17:33:46 ERROR c.s.s.service.MarketService - Get order DTO history failed for username: 2. Error: User with userName 2 does not exist
2024-06-04 17:33:46 ERROR c.s.s.service.MarketService - Add product to cart failed for guestId: 2, storeId: 0, productId: 0, amount: 3. Error: Amount doesn't exist in store
2024-06-04 17:33:46 ERROR c.s.s.service.MarketService - getStoreInfo: A store with id 0 is not active.
2024-06-04 17:33:47 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Order cannot be supplied
2024-06-04 17:33:47 ERROR c.s.s.domain.users.MemoryRepo - Exception in getMember: User with userName=2 does not exist
2024-06-04 17:33:47 ERROR c.s.s.service.MarketService - Get order DTO history failed for username: 2. Error: User with userName 2 does not exist
2024-06-04 17:33:47 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-04 17:33:48 ERROR c.s.s.service.MarketService - getStoreInfo: There is no store with id 2147483647.
2024-06-04 17:33:48 ERROR c.s.s.domain.users.UserFacade - user JohnDoe already logged in
2024-06-04 17:33:48 ERROR c.s.s.service.MarketService - error in login: user already logged in
2024-06-04 17:33:48 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasGuest: Guest with guestID=1 does not exist
2024-06-04 17:33:48 ERROR c.s.s.service.MarketService - error in exitGuest: Guest with guestID 1 does not exist
2024-06-04 17:33:49 ERROR c.s.s.service.MarketService - getProductsInfo: No products found
2024-06-04 17:33:49 ERROR c.s.s.service.MarketService - getStoreInfo: Product Id 2147483647 does not exist.
2024-06-04 17:33:49 ERROR c.s.s.service.MarketService - getProductsInfo: There is no store with id 2147483647.
2024-06-04 17:33:50 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-04 17:33:50 ERROR c.s.s.service.MarketService - Change quantity in cart failed for guestId: 2, storeId: 0, productId: 0, amount: 2. Error: Amount doesn't exist in store
2024-06-04 17:33:50 ERROR c.s.s.service.MarketService - Add product to cart failed for guestId: 2, storeId: 0, productId: 2147483647, amount: 3. Error: Amount doesn't exist in store
2024-06-04 17:33:51 ERROR c.s.s.service.MarketService - getStoreInfo: The store of product with id 0 is not active.
2024-06-04 17:33:51 ERROR c.s.s.service.MarketService - getStoreInfo: A store with id 0 is not active.
2024-06-04 17:33:51 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Payment could not be completed for store 0
2024-06-04 17:33:51 ERROR c.s.s.domain.users.MemoryRepo - Exception in getMember: User with userName=2 does not exist
2024-06-04 17:33:51 ERROR c.s.s.service.MarketService - Get order DTO history failed for username: 2. Error: User with userName 2 does not exist
2024-06-04 17:33:52 ERROR c.s.s.domain.auth.AuthFacade - password incorrect
2024-06-04 17:33:52 ERROR c.s.s.service.MarketService - error in login: password is incorrect
2024-06-04 17:33:52 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: One or more stores did not accept your basket for the following reason: You can not buy 5 of product 0 - there are only 4 in stock.


2024-06-04 17:33:52 ERROR c.s.s.domain.users.MemoryRepo - Exception in getMember: User with userName=2 does not exist
2024-06-04 17:33:52 ERROR c.s.s.service.MarketService - Get order DTO history failed for username: 2. Error: User with userName 2 does not exist
2024-06-04 17:33:52 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-04 17:33:53 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-04 17:33:53 ERROR c.s.s.service.MarketService - error in register: username already exits
