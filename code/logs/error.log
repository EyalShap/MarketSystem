2024-06-05 13:39:20 ERROR c.s.s.service.MarketService - createStore: jwt isnt valid
2024-06-05 13:39:21 ERROR c.s.sadnamarket.domain.users.Member - Exception in logout: user isn't logged in
2024-06-05 13:39:21 ERROR c.s.s.service.MarketService - error in logout: user isn't logged in
2024-06-05 13:39:21 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=username that isn't very real does not exist
2024-06-05 13:39:21 ERROR c.s.s.service.MarketService - error in logout: User with username username that isn't very real does not exist
2024-06-05 13:39:21 ERROR c.s.s.service.MarketService - Purchase cart failed for username: Billy. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 13:39:22 ERROR c.s.s.service.MarketService - Purchase cart failed for username: Billy. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 13:39:23 ERROR c.s.s.service.MarketService - Purchase cart failed for username: Billy. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 13:39:23 ERROR c.s.s.service.MarketService - getStoreOrderHistory: There is no store with id 2147483647.
2024-06-05 13:39:23 ERROR c.s.s.service.MarketService - Purchase cart failed for username: Billy. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 13:39:24 ERROR c.s.s.domain.users.MemoryRepo - Exception in getMember: User with userName=Username that nobody has does not exist
2024-06-05 13:39:24 ERROR c.s.s.service.MarketService - Get order DTO history failed for username: Username that nobody has. Error: User with userName Username that nobody has does not exist
2024-06-05 13:39:24 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=Eric does not exist
2024-06-05 13:39:24 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: User with username Eric does not exist
2024-06-05 13:39:24 ERROR c.s.s.service.MarketService - closeStore: There is no store with id 2147483647.
2024-06-05 13:39:25 ERROR c.s.s.service.MarketService - getOwners: There is no store with id 2147483647.
2024-06-05 13:39:25 ERROR c.s.s.service.MarketService - getManagers: There is no store with id 2147483647.
2024-06-05 13:39:25 ERROR c.s.s.service.MarketService - deleteProductFromStore: user Mallory can not delete a product from store with id 0.
2024-06-05 13:39:26 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: jwt isnt valid
2024-06-05 13:39:26 ERROR c.s.s.domain.products.ProductFacade - Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
2024-06-05 13:39:26 ERROR c.s.s.domain.products.ProductFacade - Error adding product: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
java.lang.IllegalArgumentException: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
	at com.sadna.sadnamarket.domain.products.ProductFacade.checkProductAttributes(ProductFacade.java:305)
	at com.sadna.sadnamarket.domain.products.ProductFacade.addProduct(ProductFacade.java:42)
	at com.sadna.sadnamarket.domain.stores.StoreFacade.addProductToStore(StoreFacade.java:93)
	at com.sadna.sadnamarket.service.MarketService.addProductToStore(MarketService.java:106)
	at com.sadna.sadnamarket.service.MarketServiceTestAdapter.addProductToStore(MarketServiceTestAdapter.java:157)
	at com.sadna.sadnamarket.StoreOwnerTests.addProductBadInfoTest(StoreOwnerTests.java:86)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)
2024-06-05 13:39:26 ERROR c.s.s.service.MarketService - addProductToStore: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
2024-06-05 13:39:26 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=null does not exist
2024-06-05 13:39:26 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 3. Error: User with username null does not exist
2024-06-05 13:39:26 ERROR c.s.s.service.MarketService - getStoreOrderHistory: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-05 13:39:27 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: jwt isnt valid
2024-06-05 13:39:27 ERROR c.s.s.service.MarketService - closeStore: User Mallory can not close the store with id 0 (not a founder).
2024-06-05 13:39:28 ERROR c.s.sadnamarket.domain.users.Member - Exception in getRequest: member already has role in store
2024-06-05 13:39:28 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: member already has role in store
2024-06-05 13:39:28 ERROR c.s.s.service.MarketService - getOwners: There is no store with id 2147483647.
2024-06-05 13:39:28 ERROR c.s.s.service.MarketService - getManagers: There is no store with id 2147483647.
2024-06-05 13:39:29 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: User StoreOwnerMan can not add user Eric as an owner to store 0.
2024-06-05 13:39:29 ERROR c.s.s.service.MarketService - addManagerPermission: User StoreOwnerMan can not add user Eric as a manager to store 0.
2024-06-05 13:39:29 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: User StoreOwnerMan can not add user Eric as a manager to store 0.
2024-06-05 13:39:30 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=null does not exist
2024-06-05 13:39:30 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 3. Error: User with username null does not exist
2024-06-05 13:39:31 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=null does not exist
2024-06-05 13:39:31 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 3. Error: User with username null does not exist
2024-06-05 13:39:31 ERROR c.s.s.service.MarketService - getStoreOrderHistory: jwt isnt valid
2024-06-05 13:39:32 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: User Mallory can not add user Eric as a manager to store 0.
2024-06-05 13:39:32 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-05 13:39:32 ERROR c.s.s.service.MarketService - getStoreInfo: The product with id 0 doesn't exist.
2024-06-05 13:39:33 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: User Mallory can not add user Eric as an owner to store 0.
2024-06-05 13:39:33 ERROR c.s.s.service.MarketService - updateProductInStore: A store with id 0 does not have a product with id 2147483647.
2024-06-05 13:39:34 ERROR c.s.s.service.MarketService - deleteProductFromStore: A product with id 2147483647 does not exist.
2024-06-05 13:39:34 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=Eric does not exist
2024-06-05 13:39:34 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: User with username Eric does not exist
2024-06-05 13:39:35 ERROR c.s.s.service.MarketService - updateProductInStore: A store with id 0 does not have a product with id 0.
2024-06-05 13:39:35 ERROR c.s.s.service.MarketService - addManagerPermission: User Mallory can not add user Eric as a manager to store 0.
2024-06-05 13:39:36 ERROR c.s.s.domain.products.ProductFacade - Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
2024-06-05 13:39:36 ERROR c.s.s.domain.products.ProductFacade - Error updating product: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
java.lang.IllegalArgumentException: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
	at com.sadna.sadnamarket.domain.products.ProductFacade.checkProductAttributes(ProductFacade.java:305)
	at com.sadna.sadnamarket.domain.products.ProductFacade.updateProduct(ProductFacade.java:91)
	at com.sadna.sadnamarket.domain.stores.StoreFacade.updateProduct(StoreFacade.java:123)
	at com.sadna.sadnamarket.service.MarketService.updateProductInStore(MarketService.java:145)
	at com.sadna.sadnamarket.service.MarketServiceTestAdapter.editStoreProduct(MarketServiceTestAdapter.java:169)
	at com.sadna.sadnamarket.StoreOwnerTests.editProductBadInfoTest(StoreOwnerTests.java:122)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)
2024-06-05 13:39:36 ERROR c.s.s.service.MarketService - updateProductInStore: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
2024-06-05 13:39:37 ERROR c.s.s.service.MarketService - deleteProductFromStore: A product with id 0 does not exist.
2024-06-05 13:39:38 ERROR c.s.s.service.MarketService - updateProductInStore: user Mallory can not update a product in store with id 0.
2024-06-05 13:39:38 ERROR c.s.s.service.MarketService - addProductToStore: user Mallory can not add a product to store with id 0.
2024-06-05 13:39:38 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 999 does not exist.
2024-06-05 13:39:38 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-05 13:39:38 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 999 does not exist.
2024-06-05 13:39:38 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=null does not exist
2024-06-05 13:39:38 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 3. Error: User with username null does not exist
2024-06-05 13:39:38 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=null does not exist
2024-06-05 13:39:38 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 4. Error: User with username null does not exist
2024-06-05 13:39:39 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=null does not exist
2024-06-05 13:39:39 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 3. Error: User with username null does not exist
2024-06-05 13:39:39 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-05 13:39:40 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-05 13:39:40 ERROR c.s.s.service.MarketService - Change quantity in cart failed for guestId: 2, storeId: 0, productId: 0, amount: 3. Error: Amount doesn't exist in store
2024-06-05 13:39:41 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Missing card details
2024-06-05 13:39:41 ERROR c.s.s.service.MarketService - Add product to cart failed for guestId: 2, storeId: 0, productId: 0, amount: 3. Error: Amount doesn't exist in store
2024-06-05 13:39:41 ERROR c.s.s.service.MarketService - getStoreInfo: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-05 13:39:41 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=null does not exist
2024-06-05 13:39:41 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: User with username null does not exist
2024-06-05 13:39:42 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-05 13:39:42 ERROR c.s.s.service.MarketService - getStoreInfo: There is no store with id 2147483647.
2024-06-05 13:39:42 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=null does not exist
2024-06-05 13:39:42 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: User with username null does not exist
2024-06-05 13:39:42 ERROR c.s.s.domain.users.UserFacade - user JohnDoe already logged in
2024-06-05 13:39:42 ERROR c.s.s.service.MarketService - error in login: user already logged in
2024-06-05 13:39:42 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasGuest: Guest with guestID=1 does not exist
2024-06-05 13:39:42 ERROR c.s.s.service.MarketService - error in exitGuest: Guest with guestID 1 does not exist
2024-06-05 13:39:42 ERROR c.s.s.service.MarketService - getProductsInfo: No products found
2024-06-05 13:39:42 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-05 13:39:43 ERROR c.s.s.service.MarketService - getProductsInfo: There is no store with id 2147483647.
2024-06-05 13:39:43 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-05 13:39:43 ERROR c.s.s.service.MarketService - Change quantity in cart failed for guestId: 2, storeId: 0, productId: 0, amount: 2. Error: Amount doesn't exist in store
2024-06-05 13:39:43 ERROR c.s.s.service.MarketService - Add product to cart failed for guestId: 2, storeId: 0, productId: 2147483647, amount: 3. Error: Amount doesn't exist in store
2024-06-05 13:39:43 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-05 13:39:44 ERROR c.s.s.service.MarketService - getStoreInfo: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-05 13:39:44 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=null does not exist
2024-06-05 13:39:44 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: User with username null does not exist
2024-06-05 13:39:44 ERROR c.s.s.domain.auth.AuthFacade - user doesnt exist
2024-06-05 13:39:44 ERROR c.s.s.service.MarketService - error in login: password is incorrect
2024-06-05 13:39:44 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=null does not exist
2024-06-05 13:39:44 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: User with username null does not exist
2024-06-05 13:39:45 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-05 13:39:45 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-05 13:39:45 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-05 13:44:27 ERROR c.s.s.service.MarketService - createStore: jwt isnt valid
2024-06-05 13:44:27 ERROR c.s.sadnamarket.domain.users.Member - Exception in logout: user isn't logged in
2024-06-05 13:44:27 ERROR c.s.s.service.MarketService - error in logout: user isn't logged in
2024-06-05 13:44:28 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=username that isn't very real does not exist
2024-06-05 13:44:28 ERROR c.s.s.service.MarketService - error in logout: User with username username that isn't very real does not exist
2024-06-05 13:44:28 ERROR c.s.s.service.MarketService - Purchase cart failed for username: Billy. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 13:44:29 ERROR c.s.s.service.MarketService - Purchase cart failed for username: Billy. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 13:44:30 ERROR c.s.s.service.MarketService - Purchase cart failed for username: Billy. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 13:44:31 ERROR c.s.s.service.MarketService - getStoreOrderHistory: There is no store with id 2147483647.
2024-06-05 13:44:31 ERROR c.s.s.service.MarketService - Purchase cart failed for username: Billy. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 13:44:32 ERROR c.s.s.domain.users.MemoryRepo - Exception in getMember: User with userName=Username that nobody has does not exist
2024-06-05 13:44:32 ERROR c.s.s.service.MarketService - Get order DTO history failed for username: Username that nobody has. Error: User with userName Username that nobody has does not exist
2024-06-05 13:44:33 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=Eric does not exist
2024-06-05 13:44:33 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: User with username Eric does not exist
2024-06-05 13:44:33 ERROR c.s.s.service.MarketService - closeStore: There is no store with id 2147483647.
2024-06-05 13:44:34 ERROR c.s.s.service.MarketService - getOwners: There is no store with id 2147483647.
2024-06-05 13:44:34 ERROR c.s.s.service.MarketService - getManagers: There is no store with id 2147483647.
2024-06-05 13:44:34 ERROR c.s.s.service.MarketService - deleteProductFromStore: user Mallory can not delete a product from store with id 0.
2024-06-05 13:44:35 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: jwt isnt valid
2024-06-05 13:44:35 ERROR c.s.s.domain.products.ProductFacade - Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
2024-06-05 13:44:35 ERROR c.s.s.domain.products.ProductFacade - Error adding product: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
java.lang.IllegalArgumentException: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
	at com.sadna.sadnamarket.domain.products.ProductFacade.checkProductAttributes(ProductFacade.java:305)
	at com.sadna.sadnamarket.domain.products.ProductFacade.addProduct(ProductFacade.java:42)
	at com.sadna.sadnamarket.domain.stores.StoreFacade.addProductToStore(StoreFacade.java:95)
	at com.sadna.sadnamarket.service.MarketService.addProductToStore(MarketService.java:106)
	at com.sadna.sadnamarket.service.MarketServiceTestAdapter.addProductToStore(MarketServiceTestAdapter.java:157)
	at com.sadna.sadnamarket.StoreOwnerTests.addProductBadInfoTest(StoreOwnerTests.java:86)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)
2024-06-05 13:44:35 ERROR c.s.s.service.MarketService - addProductToStore: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
2024-06-05 13:44:36 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=null does not exist
2024-06-05 13:44:36 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 3. Error: User with username null does not exist
2024-06-05 13:44:36 ERROR c.s.s.service.MarketService - getStoreOrderHistory: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-05 13:44:37 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: jwt isnt valid
2024-06-05 13:44:37 ERROR c.s.s.service.MarketService - closeStore: User Mallory can not close the store with id 0 (not a founder).
2024-06-05 13:44:38 ERROR c.s.sadnamarket.domain.users.Member - Exception in getRequest: member already has role in store
2024-06-05 13:44:38 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: member already has role in store
2024-06-05 13:44:39 ERROR c.s.s.service.MarketService - getOwners: There is no store with id 2147483647.
2024-06-05 13:44:39 ERROR c.s.s.service.MarketService - getManagers: There is no store with id 2147483647.
2024-06-05 13:44:39 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: User StoreOwnerMan can not add user Eric as an owner to store 0.
2024-06-05 13:44:40 ERROR c.s.s.service.MarketService - addManagerPermission: User StoreOwnerMan can not add user Eric as a manager to store 0.
2024-06-05 13:44:41 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: User StoreOwnerMan can not add user Eric as a manager to store 0.
2024-06-05 13:44:41 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=null does not exist
2024-06-05 13:44:41 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 3. Error: User with username null does not exist
2024-06-05 13:44:43 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=null does not exist
2024-06-05 13:44:43 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 3. Error: User with username null does not exist
2024-06-05 13:44:43 ERROR c.s.s.service.MarketService - getStoreOrderHistory: jwt isnt valid
2024-06-05 13:44:44 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: User Mallory can not add user Eric as a manager to store 0.
2024-06-05 13:44:45 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-05 13:44:45 ERROR c.s.s.service.MarketService - getStoreInfo: The product with id 0 doesn't exist.
2024-06-05 13:44:46 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: User Mallory can not add user Eric as an owner to store 0.
2024-06-05 13:44:47 ERROR c.s.s.service.MarketService - updateProductInStore: A store with id 0 does not have a product with id 2147483647.
2024-06-05 13:44:47 ERROR c.s.s.service.MarketService - deleteProductFromStore: A product with id 2147483647 does not exist.
2024-06-05 13:44:47 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=Eric does not exist
2024-06-05 13:44:47 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: User with username Eric does not exist
2024-06-05 13:44:49 ERROR c.s.s.service.MarketService - updateProductInStore: A store with id 0 does not have a product with id 0.
2024-06-05 13:44:49 ERROR c.s.s.service.MarketService - addManagerPermission: User Mallory can not add user Eric as a manager to store 0.
2024-06-05 13:44:51 ERROR c.s.s.domain.products.ProductFacade - Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
2024-06-05 13:44:51 ERROR c.s.s.domain.products.ProductFacade - Error updating product: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
java.lang.IllegalArgumentException: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
	at com.sadna.sadnamarket.domain.products.ProductFacade.checkProductAttributes(ProductFacade.java:305)
	at com.sadna.sadnamarket.domain.products.ProductFacade.updateProduct(ProductFacade.java:91)
	at com.sadna.sadnamarket.domain.stores.StoreFacade.updateProduct(StoreFacade.java:125)
	at com.sadna.sadnamarket.service.MarketService.updateProductInStore(MarketService.java:145)
	at com.sadna.sadnamarket.service.MarketServiceTestAdapter.editStoreProduct(MarketServiceTestAdapter.java:169)
	at com.sadna.sadnamarket.StoreOwnerTests.editProductBadInfoTest(StoreOwnerTests.java:122)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)
2024-06-05 13:44:51 ERROR c.s.s.service.MarketService - updateProductInStore: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
2024-06-05 13:44:52 ERROR c.s.s.service.MarketService - deleteProductFromStore: A product with id 0 does not exist.
2024-06-05 13:44:54 ERROR c.s.s.service.MarketService - updateProductInStore: user Mallory can not update a product in store with id 0.
2024-06-05 13:44:54 ERROR c.s.s.service.MarketService - addProductToStore: user Mallory can not add a product to store with id 0.
2024-06-05 13:44:54 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 999 does not exist.
2024-06-05 13:44:54 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-05 13:44:54 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 999 does not exist.
2024-06-05 13:44:55 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=null does not exist
2024-06-05 13:44:55 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 3. Error: User with username null does not exist
2024-06-05 13:44:55 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=null does not exist
2024-06-05 13:44:55 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 4. Error: User with username null does not exist
2024-06-05 13:44:56 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=null does not exist
2024-06-05 13:44:56 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 3. Error: User with username null does not exist
2024-06-05 13:44:56 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-05 13:44:57 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-05 13:44:57 ERROR c.s.s.service.MarketService - Change quantity in cart failed for guestId: 2, storeId: 0, productId: 0, amount: 3. Error: Amount doesn't exist in store
2024-06-05 13:44:58 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Missing card details
2024-06-05 13:44:59 ERROR c.s.s.service.MarketService - Add product to cart failed for guestId: 2, storeId: 0, productId: 0, amount: 3. Error: Amount doesn't exist in store
2024-06-05 13:44:59 ERROR c.s.s.service.MarketService - getStoreInfo: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-05 13:44:59 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=null does not exist
2024-06-05 13:44:59 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: User with username null does not exist
2024-06-05 13:44:59 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-05 13:45:00 ERROR c.s.s.service.MarketService - getStoreInfo: There is no store with id 2147483647.
2024-06-05 13:45:00 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=null does not exist
2024-06-05 13:45:00 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: User with username null does not exist
2024-06-05 13:45:00 ERROR c.s.s.domain.users.UserFacade - user JohnDoe already logged in
2024-06-05 13:45:00 ERROR c.s.s.service.MarketService - error in login: user already logged in
2024-06-05 13:45:00 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasGuest: Guest with guestID=1 does not exist
2024-06-05 13:45:00 ERROR c.s.s.service.MarketService - error in exitGuest: Guest with guestID 1 does not exist
2024-06-05 13:45:00 ERROR c.s.s.service.MarketService - getProductsInfo: No products found
2024-06-05 13:45:01 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-05 13:45:01 ERROR c.s.s.service.MarketService - getProductsInfo: There is no store with id 2147483647.
2024-06-05 13:45:01 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-05 13:45:01 ERROR c.s.s.service.MarketService - Change quantity in cart failed for guestId: 2, storeId: 0, productId: 0, amount: 2. Error: Amount doesn't exist in store
2024-06-05 13:45:02 ERROR c.s.s.service.MarketService - Add product to cart failed for guestId: 2, storeId: 0, productId: 2147483647, amount: 3. Error: Amount doesn't exist in store
2024-06-05 13:45:02 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-05 13:45:02 ERROR c.s.s.service.MarketService - getStoreInfo: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-05 13:45:03 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=null does not exist
2024-06-05 13:45:03 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: User with username null does not exist
2024-06-05 13:45:03 ERROR c.s.s.domain.auth.AuthFacade - user doesnt exist
2024-06-05 13:45:03 ERROR c.s.s.service.MarketService - error in login: password is incorrect
2024-06-05 13:45:04 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=null does not exist
2024-06-05 13:45:04 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: User with username null does not exist
2024-06-05 13:45:04 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-05 13:45:04 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-05 13:45:04 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-05 13:47:08 ERROR c.s.s.service.MarketService - createStore: jwt isnt valid
2024-06-05 13:47:08 ERROR c.s.sadnamarket.domain.users.Member - Exception in logout: user isn't logged in
2024-06-05 13:47:08 ERROR c.s.s.service.MarketService - error in logout: user isn't logged in
2024-06-05 13:47:09 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=username that isn't very real does not exist
2024-06-05 13:47:09 ERROR c.s.s.service.MarketService - error in logout: User with username username that isn't very real does not exist
2024-06-05 13:47:10 ERROR c.s.s.service.MarketService - Purchase cart failed for username: Billy. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 13:47:11 ERROR c.s.s.service.MarketService - Purchase cart failed for username: Billy. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 13:47:12 ERROR c.s.s.service.MarketService - Purchase cart failed for username: Billy. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 13:47:12 ERROR c.s.s.service.MarketService - getStoreOrderHistory: There is no store with id 2147483647.
2024-06-05 13:47:13 ERROR c.s.s.service.MarketService - Purchase cart failed for username: Billy. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 13:47:13 ERROR c.s.s.domain.users.MemoryRepo - Exception in getMember: User with userName=Username that nobody has does not exist
2024-06-05 13:47:13 ERROR c.s.s.service.MarketService - Get order DTO history failed for username: Username that nobody has. Error: User with userName Username that nobody has does not exist
2024-06-05 13:47:13 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=Eric does not exist
2024-06-05 13:47:13 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: User with username Eric does not exist
2024-06-05 13:47:14 ERROR c.s.s.service.MarketService - closeStore: There is no store with id 2147483647.
2024-06-05 13:47:14 ERROR c.s.s.service.MarketService - getOwners: There is no store with id 2147483647.
2024-06-05 13:47:14 ERROR c.s.s.service.MarketService - getManagers: There is no store with id 2147483647.
2024-06-05 13:47:14 ERROR c.s.s.service.MarketService - deleteProductFromStore: user Mallory can not delete a product from store with id 0.
2024-06-05 13:47:15 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: jwt isnt valid
2024-06-05 13:47:15 ERROR c.s.s.domain.products.ProductFacade - Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
2024-06-05 13:47:15 ERROR c.s.s.domain.products.ProductFacade - Error adding product: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
java.lang.IllegalArgumentException: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
	at com.sadna.sadnamarket.domain.products.ProductFacade.checkProductAttributes(ProductFacade.java:305)
	at com.sadna.sadnamarket.domain.products.ProductFacade.addProduct(ProductFacade.java:42)
	at com.sadna.sadnamarket.domain.stores.StoreFacade.addProductToStore(StoreFacade.java:95)
	at com.sadna.sadnamarket.service.MarketService.addProductToStore(MarketService.java:106)
	at com.sadna.sadnamarket.service.MarketServiceTestAdapter.addProductToStore(MarketServiceTestAdapter.java:157)
	at com.sadna.sadnamarket.StoreOwnerTests.addProductBadInfoTest(StoreOwnerTests.java:86)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)
2024-06-05 13:47:15 ERROR c.s.s.service.MarketService - addProductToStore: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
2024-06-05 13:47:15 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=null does not exist
2024-06-05 13:47:15 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 3. Error: User with username null does not exist
2024-06-05 13:47:15 ERROR c.s.s.service.MarketService - getStoreOrderHistory: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-05 13:47:16 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: jwt isnt valid
2024-06-05 13:47:16 ERROR c.s.s.service.MarketService - closeStore: User Mallory can not close the store with id 0 (not a founder).
2024-06-05 13:47:17 ERROR c.s.sadnamarket.domain.users.Member - Exception in getRequest: member already has role in store
2024-06-05 13:47:17 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: member already has role in store
2024-06-05 13:47:17 ERROR c.s.s.service.MarketService - getOwners: There is no store with id 2147483647.
2024-06-05 13:47:17 ERROR c.s.s.service.MarketService - getManagers: There is no store with id 2147483647.
2024-06-05 13:47:18 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: User StoreOwnerMan can not add user Eric as an owner to store 0.
2024-06-05 13:47:18 ERROR c.s.s.service.MarketService - addManagerPermission: User StoreOwnerMan can not add user Eric as a manager to store 0.
2024-06-05 13:47:19 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: User StoreOwnerMan can not add user Eric as a manager to store 0.
2024-06-05 13:47:19 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=null does not exist
2024-06-05 13:47:19 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 3. Error: User with username null does not exist
2024-06-05 13:47:21 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=null does not exist
2024-06-05 13:47:21 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 3. Error: User with username null does not exist
2024-06-05 13:47:21 ERROR c.s.s.service.MarketService - getStoreOrderHistory: jwt isnt valid
2024-06-05 13:47:21 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: User Mallory can not add user Eric as a manager to store 0.
2024-06-05 13:47:21 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-05 13:47:21 ERROR c.s.s.service.MarketService - getStoreInfo: The product with id 0 doesn't exist.
2024-06-05 13:47:22 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: User Mallory can not add user Eric as an owner to store 0.
2024-06-05 13:47:23 ERROR c.s.s.service.MarketService - updateProductInStore: A store with id 0 does not have a product with id 2147483647.
2024-06-05 13:47:23 ERROR c.s.s.service.MarketService - deleteProductFromStore: A product with id 2147483647 does not exist.
2024-06-05 13:47:23 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=Eric does not exist
2024-06-05 13:47:23 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: User with username Eric does not exist
2024-06-05 13:47:24 ERROR c.s.s.service.MarketService - updateProductInStore: A store with id 0 does not have a product with id 0.
2024-06-05 13:47:25 ERROR c.s.s.service.MarketService - addManagerPermission: User Mallory can not add user Eric as a manager to store 0.
2024-06-05 13:47:26 ERROR c.s.s.domain.products.ProductFacade - Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
2024-06-05 13:47:26 ERROR c.s.s.domain.products.ProductFacade - Error updating product: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
java.lang.IllegalArgumentException: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
	at com.sadna.sadnamarket.domain.products.ProductFacade.checkProductAttributes(ProductFacade.java:305)
	at com.sadna.sadnamarket.domain.products.ProductFacade.updateProduct(ProductFacade.java:91)
	at com.sadna.sadnamarket.domain.stores.StoreFacade.updateProduct(StoreFacade.java:125)
	at com.sadna.sadnamarket.service.MarketService.updateProductInStore(MarketService.java:145)
	at com.sadna.sadnamarket.service.MarketServiceTestAdapter.editStoreProduct(MarketServiceTestAdapter.java:169)
	at com.sadna.sadnamarket.StoreOwnerTests.editProductBadInfoTest(StoreOwnerTests.java:122)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)
2024-06-05 13:47:26 ERROR c.s.s.service.MarketService - updateProductInStore: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
2024-06-05 13:47:26 ERROR c.s.s.service.MarketService - deleteProductFromStore: A product with id 0 does not exist.
2024-06-05 13:47:28 ERROR c.s.s.service.MarketService - updateProductInStore: user Mallory can not update a product in store with id 0.
2024-06-05 13:47:28 ERROR c.s.s.service.MarketService - addProductToStore: user Mallory can not add a product to store with id 0.
2024-06-05 13:47:28 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 999 does not exist.
2024-06-05 13:47:28 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-05 13:47:28 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 999 does not exist.
2024-06-05 13:47:28 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=null does not exist
2024-06-05 13:47:28 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 3. Error: User with username null does not exist
2024-06-05 13:47:28 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=null does not exist
2024-06-05 13:47:28 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 4. Error: User with username null does not exist
2024-06-05 13:47:29 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=null does not exist
2024-06-05 13:47:29 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 3. Error: User with username null does not exist
2024-06-05 13:47:29 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-05 13:47:29 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-05 13:47:30 ERROR c.s.s.service.MarketService - Change quantity in cart failed for guestId: 2, storeId: 0, productId: 0, amount: 3. Error: Amount doesn't exist in store
2024-06-05 13:47:31 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Missing card details
2024-06-05 13:47:31 ERROR c.s.s.service.MarketService - Add product to cart failed for guestId: 2, storeId: 0, productId: 0, amount: 3. Error: Amount doesn't exist in store
2024-06-05 13:47:31 ERROR c.s.s.service.MarketService - getStoreInfo: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-05 13:47:31 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=null does not exist
2024-06-05 13:47:31 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: User with username null does not exist
2024-06-05 13:47:31 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-05 13:47:31 ERROR c.s.s.service.MarketService - getStoreInfo: There is no store with id 2147483647.
2024-06-05 13:47:32 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=null does not exist
2024-06-05 13:47:32 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: User with username null does not exist
2024-06-05 13:47:32 ERROR c.s.s.domain.users.UserFacade - user JohnDoe already logged in
2024-06-05 13:47:32 ERROR c.s.s.service.MarketService - error in login: user already logged in
2024-06-05 13:47:32 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasGuest: Guest with guestID=1 does not exist
2024-06-05 13:47:32 ERROR c.s.s.service.MarketService - error in exitGuest: Guest with guestID 1 does not exist
2024-06-05 13:47:32 ERROR c.s.s.service.MarketService - getProductsInfo: No products found
2024-06-05 13:47:32 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-05 13:47:32 ERROR c.s.s.service.MarketService - getProductsInfo: There is no store with id 2147483647.
2024-06-05 13:47:33 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-05 13:47:33 ERROR c.s.s.service.MarketService - Change quantity in cart failed for guestId: 2, storeId: 0, productId: 0, amount: 2. Error: Amount doesn't exist in store
2024-06-05 13:47:33 ERROR c.s.s.service.MarketService - Add product to cart failed for guestId: 2, storeId: 0, productId: 2147483647, amount: 3. Error: Amount doesn't exist in store
2024-06-05 13:47:33 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-05 13:47:33 ERROR c.s.s.service.MarketService - getStoreInfo: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-05 13:47:34 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=null does not exist
2024-06-05 13:47:34 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: User with username null does not exist
2024-06-05 13:47:34 ERROR c.s.s.domain.auth.AuthFacade - user doesnt exist
2024-06-05 13:47:34 ERROR c.s.s.service.MarketService - error in login: password is incorrect
2024-06-05 13:47:34 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=null does not exist
2024-06-05 13:47:34 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: User with username null does not exist
2024-06-05 13:47:34 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-05 13:47:35 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-05 13:47:35 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-05 13:49:57 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=null does not exist
2024-06-05 13:49:57 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: User with username null does not exist
2024-06-05 13:51:36 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=null does not exist
2024-06-05 13:51:36 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: User with username null does not exist
2024-06-05 13:58:06 ERROR c.s.s.service.MarketService - createStore: jwt isnt valid
2024-06-05 13:58:06 ERROR c.s.sadnamarket.domain.users.Member - Exception in logout: user isn't logged in
2024-06-05 13:58:06 ERROR c.s.s.service.MarketService - error in logout: user isn't logged in
2024-06-05 13:58:07 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=username that isn't very real does not exist
2024-06-05 13:58:07 ERROR c.s.s.service.MarketService - error in logout: User with username username that isn't very real does not exist
2024-06-05 13:58:07 ERROR c.s.s.service.MarketService - Purchase cart failed for username: Billy. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 13:58:08 ERROR c.s.s.service.MarketService - Purchase cart failed for username: Billy. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 13:58:09 ERROR c.s.s.service.MarketService - Purchase cart failed for username: Billy. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 13:58:09 ERROR c.s.s.service.MarketService - getStoreOrderHistory: There is no store with id 2147483647.
2024-06-05 13:58:09 ERROR c.s.s.service.MarketService - Purchase cart failed for username: Billy. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 13:58:10 ERROR c.s.s.domain.users.MemoryRepo - Exception in getMember: User with userName=Username that nobody has does not exist
2024-06-05 13:58:10 ERROR c.s.s.service.MarketService - Get order DTO history failed for username: Username that nobody has. Error: User with userName Username that nobody has does not exist
2024-06-05 13:58:10 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=Eric does not exist
2024-06-05 13:58:10 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: User with username Eric does not exist
2024-06-05 13:58:10 ERROR c.s.s.service.MarketService - closeStore: There is no store with id 2147483647.
2024-06-05 13:58:11 ERROR c.s.s.service.MarketService - getOwners: There is no store with id 2147483647.
2024-06-05 13:58:11 ERROR c.s.s.service.MarketService - getManagers: There is no store with id 2147483647.
2024-06-05 13:58:11 ERROR c.s.s.service.MarketService - deleteProductFromStore: user Mallory can not delete a product from store with id 0.
2024-06-05 13:58:12 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: jwt isnt valid
2024-06-05 13:58:12 ERROR c.s.s.domain.products.ProductFacade - Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
2024-06-05 13:58:12 ERROR c.s.s.domain.products.ProductFacade - Error adding product: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
java.lang.IllegalArgumentException: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
	at com.sadna.sadnamarket.domain.products.ProductFacade.checkProductAttributes(ProductFacade.java:305)
	at com.sadna.sadnamarket.domain.products.ProductFacade.addProduct(ProductFacade.java:42)
	at com.sadna.sadnamarket.domain.stores.StoreFacade.addProductToStore(StoreFacade.java:95)
	at com.sadna.sadnamarket.service.MarketService.addProductToStore(MarketService.java:106)
	at com.sadna.sadnamarket.service.MarketServiceTestAdapter.addProductToStore(MarketServiceTestAdapter.java:157)
	at com.sadna.sadnamarket.StoreOwnerTests.addProductBadInfoTest(StoreOwnerTests.java:86)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)
2024-06-05 13:58:12 ERROR c.s.s.service.MarketService - addProductToStore: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
2024-06-05 13:58:12 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=null does not exist
2024-06-05 13:58:12 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 3. Error: User with username null does not exist
2024-06-05 13:58:12 ERROR c.s.s.service.MarketService - getStoreOrderHistory: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-05 13:58:13 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: jwt isnt valid
2024-06-05 13:58:13 ERROR c.s.s.service.MarketService - closeStore: User Mallory can not close the store with id 0 (not a founder).
2024-06-05 13:58:14 ERROR c.s.sadnamarket.domain.users.Member - Exception in getRequest: member already has role in store
2024-06-05 13:58:14 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: member already has role in store
2024-06-05 13:58:14 ERROR c.s.s.service.MarketService - getOwners: There is no store with id 2147483647.
2024-06-05 13:58:14 ERROR c.s.s.service.MarketService - getManagers: There is no store with id 2147483647.
2024-06-05 13:58:15 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: User StoreOwnerMan can not add user Eric as an owner to store 0.
2024-06-05 13:58:15 ERROR c.s.s.service.MarketService - addManagerPermission: User StoreOwnerMan can not add user Eric as a manager to store 0.
2024-06-05 13:58:16 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: User StoreOwnerMan can not add user Eric as a manager to store 0.
2024-06-05 13:58:16 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=null does not exist
2024-06-05 13:58:16 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 3. Error: User with username null does not exist
2024-06-05 13:58:18 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=null does not exist
2024-06-05 13:58:18 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 3. Error: User with username null does not exist
2024-06-05 13:58:18 ERROR c.s.s.service.MarketService - getStoreOrderHistory: jwt isnt valid
2024-06-05 13:58:18 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: User Mallory can not add user Eric as a manager to store 0.
2024-06-05 13:58:19 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-05 13:58:19 ERROR c.s.s.service.MarketService - getStoreInfo: The product with id 0 doesn't exist.
2024-06-05 13:58:20 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: User Mallory can not add user Eric as an owner to store 0.
2024-06-05 13:58:20 ERROR c.s.s.service.MarketService - updateProductInStore: A store with id 0 does not have a product with id 2147483647.
2024-06-05 13:58:20 ERROR c.s.s.service.MarketService - deleteProductFromStore: A product with id 2147483647 does not exist.
2024-06-05 13:58:21 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=Eric does not exist
2024-06-05 13:58:21 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: User with username Eric does not exist
2024-06-05 13:58:21 ERROR c.s.s.service.MarketService - updateProductInStore: A store with id 0 does not have a product with id 0.
2024-06-05 13:58:22 ERROR c.s.s.service.MarketService - addManagerPermission: User Mallory can not add user Eric as a manager to store 0.
2024-06-05 13:58:23 ERROR c.s.s.domain.products.ProductFacade - Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
2024-06-05 13:58:23 ERROR c.s.s.domain.products.ProductFacade - Error updating product: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
java.lang.IllegalArgumentException: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
	at com.sadna.sadnamarket.domain.products.ProductFacade.checkProductAttributes(ProductFacade.java:305)
	at com.sadna.sadnamarket.domain.products.ProductFacade.updateProduct(ProductFacade.java:91)
	at com.sadna.sadnamarket.domain.stores.StoreFacade.updateProduct(StoreFacade.java:125)
	at com.sadna.sadnamarket.service.MarketService.updateProductInStore(MarketService.java:145)
	at com.sadna.sadnamarket.service.MarketServiceTestAdapter.editStoreProduct(MarketServiceTestAdapter.java:169)
	at com.sadna.sadnamarket.StoreOwnerTests.editProductBadInfoTest(StoreOwnerTests.java:122)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)
2024-06-05 13:58:23 ERROR c.s.s.service.MarketService - updateProductInStore: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
2024-06-05 13:58:24 ERROR c.s.s.service.MarketService - deleteProductFromStore: A product with id 0 does not exist.
2024-06-05 13:58:25 ERROR c.s.s.service.MarketService - updateProductInStore: user Mallory can not update a product in store with id 0.
2024-06-05 13:58:25 ERROR c.s.s.service.MarketService - addProductToStore: user Mallory can not add a product to store with id 0.
2024-06-05 13:58:25 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 999 does not exist.
2024-06-05 13:58:25 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-05 13:58:25 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 999 does not exist.
2024-06-05 13:58:26 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=null does not exist
2024-06-05 13:58:26 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 3. Error: User with username null does not exist
2024-06-05 13:58:26 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=null does not exist
2024-06-05 13:58:26 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 4. Error: User with username null does not exist
2024-06-05 13:58:26 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=null does not exist
2024-06-05 13:58:26 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 3. Error: User with username null does not exist
2024-06-05 13:58:26 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-05 13:58:27 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-05 13:58:27 ERROR c.s.s.service.MarketService - Change quantity in cart failed for guestId: 2, storeId: 0, productId: 0, amount: 3. Error: Amount doesn't exist in store
2024-06-05 13:58:28 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Missing card details
2024-06-05 13:58:28 ERROR c.s.s.service.MarketService - Add product to cart failed for guestId: 2, storeId: 0, productId: 0, amount: 3. Error: Amount doesn't exist in store
2024-06-05 13:58:29 ERROR c.s.s.service.MarketService - getStoreInfo: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-05 13:58:29 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=null does not exist
2024-06-05 13:58:29 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: User with username null does not exist
2024-06-05 13:58:29 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-05 13:58:29 ERROR c.s.s.service.MarketService - getStoreInfo: There is no store with id 2147483647.
2024-06-05 13:58:29 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=null does not exist
2024-06-05 13:58:29 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: User with username null does not exist
2024-06-05 13:58:29 ERROR c.s.s.domain.users.UserFacade - user JohnDoe already logged in
2024-06-05 13:58:29 ERROR c.s.s.service.MarketService - error in login: user already logged in
2024-06-05 13:58:29 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasGuest: Guest with guestID=1 does not exist
2024-06-05 13:58:29 ERROR c.s.s.service.MarketService - error in exitGuest: Guest with guestID 1 does not exist
2024-06-05 13:58:30 ERROR c.s.s.service.MarketService - getProductsInfo: No products found
2024-06-05 13:58:30 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-05 13:58:30 ERROR c.s.s.service.MarketService - getProductsInfo: There is no store with id 2147483647.
2024-06-05 13:58:31 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-05 13:58:31 ERROR c.s.s.service.MarketService - Change quantity in cart failed for guestId: 2, storeId: 0, productId: 0, amount: 2. Error: Amount doesn't exist in store
2024-06-05 13:58:31 ERROR c.s.s.service.MarketService - Add product to cart failed for guestId: 2, storeId: 0, productId: 2147483647, amount: 3. Error: Amount doesn't exist in store
2024-06-05 13:58:31 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-05 13:58:32 ERROR c.s.s.service.MarketService - getStoreInfo: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-05 13:58:32 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=null does not exist
2024-06-05 13:58:32 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: User with username null does not exist
2024-06-05 13:58:32 ERROR c.s.s.domain.auth.AuthFacade - user doesnt exist
2024-06-05 13:58:32 ERROR c.s.s.service.MarketService - error in login: password is incorrect
2024-06-05 13:58:33 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=null does not exist
2024-06-05 13:58:33 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: User with username null does not exist
2024-06-05 13:58:33 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-05 13:58:33 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-05 13:58:33 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-05 13:59:31 ERROR c.s.s.service.MarketService - Purchase cart failed for username: Billy. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 14:05:54 ERROR c.s.s.service.MarketService - Purchase cart failed for username: Billy. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 14:16:28 ERROR c.s.s.service.MarketService - Purchase cart failed for username: Billy. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 14:26:40 ERROR c.s.s.service.MarketService - Purchase cart failed for username: Billy. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 14:31:10 ERROR c.s.s.service.MarketService - createStore: jwt isnt valid
2024-06-05 14:31:11 ERROR c.s.sadnamarket.domain.users.Member - Exception in logout: user isn't logged in
2024-06-05 14:31:11 ERROR c.s.s.service.MarketService - error in logout: user isn't logged in
2024-06-05 14:31:11 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=username that isn't very real does not exist
2024-06-05 14:31:11 ERROR c.s.s.service.MarketService - error in logout: User with username username that isn't very real does not exist
2024-06-05 14:31:13 ERROR c.s.s.service.MarketService - getStoreOrderHistory: There is no store with id 2147483647.
2024-06-05 14:31:14 ERROR c.s.s.domain.users.MemoryRepo - Exception in getMember: User with userName=Username that nobody has does not exist
2024-06-05 14:31:14 ERROR c.s.s.service.MarketService - Get order DTO history failed for username: Username that nobody has. Error: User with userName Username that nobody has does not exist
2024-06-05 14:31:15 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=Eric does not exist
2024-06-05 14:31:15 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: User with username Eric does not exist
2024-06-05 14:31:15 ERROR c.s.s.service.MarketService - closeStore: There is no store with id 2147483647.
2024-06-05 14:31:16 ERROR c.s.s.service.MarketService - getOwners: There is no store with id 2147483647.
2024-06-05 14:31:16 ERROR c.s.s.service.MarketService - getManagers: There is no store with id 2147483647.
2024-06-05 14:31:16 ERROR c.s.s.service.MarketService - deleteProductFromStore: user Mallory can not delete a product from store with id 0.
2024-06-05 14:31:16 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: jwt isnt valid
2024-06-05 14:31:17 ERROR c.s.s.domain.products.ProductFacade - Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
2024-06-05 14:31:17 ERROR c.s.s.domain.products.ProductFacade - Error adding product: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
java.lang.IllegalArgumentException: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
	at com.sadna.sadnamarket.domain.products.ProductFacade.checkProductAttributes(ProductFacade.java:305)
	at com.sadna.sadnamarket.domain.products.ProductFacade.addProduct(ProductFacade.java:42)
	at com.sadna.sadnamarket.domain.stores.StoreFacade.addProductToStore(StoreFacade.java:95)
	at com.sadna.sadnamarket.service.MarketService.addProductToStore(MarketService.java:106)
	at com.sadna.sadnamarket.service.MarketServiceTestAdapter.addProductToStore(MarketServiceTestAdapter.java:157)
	at com.sadna.sadnamarket.StoreOwnerTests.addProductBadInfoTest(StoreOwnerTests.java:86)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)
2024-06-05 14:31:17 ERROR c.s.s.service.MarketService - addProductToStore: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
2024-06-05 14:31:17 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=null does not exist
2024-06-05 14:31:17 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 3. Error: User with username null does not exist
2024-06-05 14:31:17 ERROR c.s.s.service.MarketService - getStoreOrderHistory: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-05 14:31:18 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: jwt isnt valid
2024-06-05 14:31:18 ERROR c.s.s.service.MarketService - closeStore: User Mallory can not close the store with id 0 (not a founder).
2024-06-05 14:31:19 ERROR c.s.sadnamarket.domain.users.Member - Exception in getRequest: member already has role in store
2024-06-05 14:31:19 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: member already has role in store
2024-06-05 14:31:20 ERROR c.s.s.service.MarketService - getOwners: There is no store with id 2147483647.
2024-06-05 14:31:20 ERROR c.s.s.service.MarketService - getManagers: There is no store with id 2147483647.
2024-06-05 14:31:20 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: User StoreOwnerMan can not add user Eric as an owner to store 0.
2024-06-05 14:31:21 ERROR c.s.s.service.MarketService - addManagerPermission: User StoreOwnerMan can not add user Eric as a manager to store 0.
2024-06-05 14:31:21 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: User StoreOwnerMan can not add user Eric as a manager to store 0.
2024-06-05 14:31:22 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=null does not exist
2024-06-05 14:31:22 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 3. Error: User with username null does not exist
2024-06-05 14:31:24 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=null does not exist
2024-06-05 14:31:24 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 3. Error: User with username null does not exist
2024-06-05 14:31:24 ERROR c.s.s.service.MarketService - getStoreOrderHistory: jwt isnt valid
2024-06-05 14:31:24 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: User Mallory can not add user Eric as a manager to store 0.
2024-06-05 14:31:24 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-05 14:31:24 ERROR c.s.s.service.MarketService - getStoreInfo: The product with id 0 doesn't exist.
2024-06-05 14:31:26 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: User Mallory can not add user Eric as an owner to store 0.
2024-06-05 14:31:26 ERROR c.s.s.service.MarketService - updateProductInStore: A store with id 0 does not have a product with id 2147483647.
2024-06-05 14:31:26 ERROR c.s.s.service.MarketService - deleteProductFromStore: A product with id 2147483647 does not exist.
2024-06-05 14:31:27 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=Eric does not exist
2024-06-05 14:31:27 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: User with username Eric does not exist
2024-06-05 14:31:28 ERROR c.s.s.service.MarketService - updateProductInStore: A store with id 0 does not have a product with id 0.
2024-06-05 14:31:28 ERROR c.s.s.service.MarketService - addManagerPermission: User Mallory can not add user Eric as a manager to store 0.
2024-06-05 14:31:29 ERROR c.s.s.domain.products.ProductFacade - Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
2024-06-05 14:31:29 ERROR c.s.s.domain.products.ProductFacade - Error updating product: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
java.lang.IllegalArgumentException: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
	at com.sadna.sadnamarket.domain.products.ProductFacade.checkProductAttributes(ProductFacade.java:305)
	at com.sadna.sadnamarket.domain.products.ProductFacade.updateProduct(ProductFacade.java:91)
	at com.sadna.sadnamarket.domain.stores.StoreFacade.updateProduct(StoreFacade.java:125)
	at com.sadna.sadnamarket.service.MarketService.updateProductInStore(MarketService.java:145)
	at com.sadna.sadnamarket.service.MarketServiceTestAdapter.editStoreProduct(MarketServiceTestAdapter.java:169)
	at com.sadna.sadnamarket.StoreOwnerTests.editProductBadInfoTest(StoreOwnerTests.java:122)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)
2024-06-05 14:31:29 ERROR c.s.s.service.MarketService - updateProductInStore: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
2024-06-05 14:31:30 ERROR c.s.s.service.MarketService - deleteProductFromStore: A product with id 0 does not exist.
2024-06-05 14:31:32 ERROR c.s.s.service.MarketService - updateProductInStore: user Mallory can not update a product in store with id 0.
2024-06-05 14:31:32 ERROR c.s.s.service.MarketService - addProductToStore: user Mallory can not add a product to store with id 0.
2024-06-05 14:31:32 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 999 does not exist.
2024-06-05 14:31:32 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-05 14:31:32 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 999 does not exist.
2024-06-05 14:31:32 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=null does not exist
2024-06-05 14:31:32 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 3. Error: User with username null does not exist
2024-06-05 14:31:32 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=null does not exist
2024-06-05 14:31:32 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 4. Error: User with username null does not exist
2024-06-05 14:31:33 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=null does not exist
2024-06-05 14:31:33 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 3. Error: User with username null does not exist
2024-06-05 14:31:33 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-05 14:31:34 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-05 14:31:34 ERROR c.s.s.service.MarketService - Change quantity in cart failed for guestId: 2, storeId: 0, productId: 0, amount: 3. Error: Amount doesn't exist in store
2024-06-05 14:31:35 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Missing card details
2024-06-05 14:31:36 ERROR c.s.s.service.MarketService - Add product to cart failed for guestId: 2, storeId: 0, productId: 0, amount: 3. Error: Amount doesn't exist in store
2024-06-05 14:31:36 ERROR c.s.s.service.MarketService - getStoreInfo: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-05 14:31:36 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=null does not exist
2024-06-05 14:31:36 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: User with username null does not exist
2024-06-05 14:31:36 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-05 14:31:36 ERROR c.s.s.service.MarketService - getStoreInfo: There is no store with id 2147483647.
2024-06-05 14:31:36 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=null does not exist
2024-06-05 14:31:36 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: User with username null does not exist
2024-06-05 14:31:37 ERROR c.s.s.domain.users.UserFacade - user JohnDoe already logged in
2024-06-05 14:31:37 ERROR c.s.s.service.MarketService - error in login: user already logged in
2024-06-05 14:31:37 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasGuest: Guest with guestID=1 does not exist
2024-06-05 14:31:37 ERROR c.s.s.service.MarketService - error in exitGuest: Guest with guestID 1 does not exist
2024-06-05 14:31:37 ERROR c.s.s.service.MarketService - getProductsInfo: No products found
2024-06-05 14:31:37 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-05 14:31:38 ERROR c.s.s.service.MarketService - getProductsInfo: There is no store with id 2147483647.
2024-06-05 14:31:38 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-05 14:31:38 ERROR c.s.s.service.MarketService - Change quantity in cart failed for guestId: 2, storeId: 0, productId: 0, amount: 2. Error: Amount doesn't exist in store
2024-06-05 14:31:38 ERROR c.s.s.service.MarketService - Add product to cart failed for guestId: 2, storeId: 0, productId: 2147483647, amount: 3. Error: Amount doesn't exist in store
2024-06-05 14:31:38 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-05 14:31:39 ERROR c.s.s.service.MarketService - getStoreInfo: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-05 14:31:39 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=null does not exist
2024-06-05 14:31:39 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: User with username null does not exist
2024-06-05 14:31:39 ERROR c.s.s.domain.auth.AuthFacade - user doesnt exist
2024-06-05 14:31:39 ERROR c.s.s.service.MarketService - error in login: password is incorrect
2024-06-05 14:31:40 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=null does not exist
2024-06-05 14:31:40 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: User with username null does not exist
2024-06-05 14:31:40 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-05 14:31:40 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-05 14:31:40 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-05 14:32:54 ERROR c.s.s.service.MarketService - createStore: jwt isnt valid
2024-06-05 14:32:54 ERROR c.s.sadnamarket.domain.users.Member - Exception in logout: user isn't logged in
2024-06-05 14:32:54 ERROR c.s.s.service.MarketService - error in logout: user isn't logged in
2024-06-05 14:32:54 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=username that isn't very real does not exist
2024-06-05 14:32:54 ERROR c.s.s.service.MarketService - error in logout: User with username username that isn't very real does not exist
2024-06-05 14:32:57 ERROR c.s.s.service.MarketService - getStoreOrderHistory: There is no store with id 2147483647.
2024-06-05 14:32:57 ERROR c.s.s.domain.users.MemoryRepo - Exception in getMember: User with userName=Username that nobody has does not exist
2024-06-05 14:32:57 ERROR c.s.s.service.MarketService - Get order DTO history failed for username: Username that nobody has. Error: User with userName Username that nobody has does not exist
2024-06-05 14:32:58 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=Eric does not exist
2024-06-05 14:32:58 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: User with username Eric does not exist
2024-06-05 14:32:58 ERROR c.s.s.service.MarketService - closeStore: There is no store with id 2147483647.
2024-06-05 14:32:59 ERROR c.s.s.service.MarketService - getOwners: There is no store with id 2147483647.
2024-06-05 14:32:59 ERROR c.s.s.service.MarketService - getManagers: There is no store with id 2147483647.
2024-06-05 14:32:59 ERROR c.s.s.service.MarketService - deleteProductFromStore: user Mallory can not delete a product from store with id 0.
2024-06-05 14:33:00 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: jwt isnt valid
2024-06-05 14:33:00 ERROR c.s.s.domain.products.ProductFacade - Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
2024-06-05 14:33:00 ERROR c.s.s.domain.products.ProductFacade - Error adding product: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
java.lang.IllegalArgumentException: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
	at com.sadna.sadnamarket.domain.products.ProductFacade.checkProductAttributes(ProductFacade.java:305)
	at com.sadna.sadnamarket.domain.products.ProductFacade.addProduct(ProductFacade.java:42)
	at com.sadna.sadnamarket.domain.stores.StoreFacade.addProductToStore(StoreFacade.java:95)
	at com.sadna.sadnamarket.service.MarketService.addProductToStore(MarketService.java:106)
	at com.sadna.sadnamarket.service.MarketServiceTestAdapter.addProductToStore(MarketServiceTestAdapter.java:157)
	at com.sadna.sadnamarket.StoreOwnerTests.addProductBadInfoTest(StoreOwnerTests.java:86)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)
2024-06-05 14:33:00 ERROR c.s.s.service.MarketService - addProductToStore: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
2024-06-05 14:33:00 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=null does not exist
2024-06-05 14:33:00 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 3. Error: User with username null does not exist
2024-06-05 14:33:00 ERROR c.s.s.service.MarketService - getStoreOrderHistory: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-05 14:33:01 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: jwt isnt valid
2024-06-05 14:33:01 ERROR c.s.s.service.MarketService - closeStore: User Mallory can not close the store with id 0 (not a founder).
2024-06-05 14:33:02 ERROR c.s.sadnamarket.domain.users.Member - Exception in getRequest: member already has role in store
2024-06-05 14:33:02 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: member already has role in store
2024-06-05 14:33:03 ERROR c.s.s.service.MarketService - getOwners: There is no store with id 2147483647.
2024-06-05 14:33:03 ERROR c.s.s.service.MarketService - getManagers: There is no store with id 2147483647.
2024-06-05 14:33:03 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: User StoreOwnerMan can not add user Eric as an owner to store 0.
2024-06-05 14:33:04 ERROR c.s.s.service.MarketService - addManagerPermission: User StoreOwnerMan can not add user Eric as a manager to store 0.
2024-06-05 14:33:05 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: User StoreOwnerMan can not add user Eric as a manager to store 0.
2024-06-05 14:33:05 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=null does not exist
2024-06-05 14:33:05 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 3. Error: User with username null does not exist
2024-06-05 14:33:07 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=null does not exist
2024-06-05 14:33:07 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 3. Error: User with username null does not exist
2024-06-05 14:33:07 ERROR c.s.s.service.MarketService - getStoreOrderHistory: jwt isnt valid
2024-06-05 14:33:07 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: User Mallory can not add user Eric as a manager to store 0.
2024-06-05 14:33:08 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-05 14:33:08 ERROR c.s.s.service.MarketService - getStoreInfo: The product with id 0 doesn't exist.
2024-06-05 14:33:09 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: User Mallory can not add user Eric as an owner to store 0.
2024-06-05 14:33:09 ERROR c.s.s.service.MarketService - updateProductInStore: A store with id 0 does not have a product with id 2147483647.
2024-06-05 14:33:09 ERROR c.s.s.service.MarketService - deleteProductFromStore: A product with id 2147483647 does not exist.
2024-06-05 14:33:10 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=Eric does not exist
2024-06-05 14:33:10 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: User with username Eric does not exist
2024-06-05 14:33:11 ERROR c.s.s.service.MarketService - updateProductInStore: A store with id 0 does not have a product with id 0.
2024-06-05 14:33:11 ERROR c.s.s.service.MarketService - addManagerPermission: User Mallory can not add user Eric as a manager to store 0.
2024-06-05 14:33:12 ERROR c.s.s.domain.products.ProductFacade - Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
2024-06-05 14:33:12 ERROR c.s.s.domain.products.ProductFacade - Error updating product: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
java.lang.IllegalArgumentException: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
	at com.sadna.sadnamarket.domain.products.ProductFacade.checkProductAttributes(ProductFacade.java:305)
	at com.sadna.sadnamarket.domain.products.ProductFacade.updateProduct(ProductFacade.java:91)
	at com.sadna.sadnamarket.domain.stores.StoreFacade.updateProduct(StoreFacade.java:125)
	at com.sadna.sadnamarket.service.MarketService.updateProductInStore(MarketService.java:145)
	at com.sadna.sadnamarket.service.MarketServiceTestAdapter.editStoreProduct(MarketServiceTestAdapter.java:169)
	at com.sadna.sadnamarket.StoreOwnerTests.editProductBadInfoTest(StoreOwnerTests.java:122)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)
2024-06-05 14:33:12 ERROR c.s.s.service.MarketService - updateProductInStore: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
2024-06-05 14:33:13 ERROR c.s.s.service.MarketService - deleteProductFromStore: A product with id 0 does not exist.
2024-06-05 14:33:15 ERROR c.s.s.service.MarketService - updateProductInStore: user Mallory can not update a product in store with id 0.
2024-06-05 14:33:15 ERROR c.s.s.service.MarketService - addProductToStore: user Mallory can not add a product to store with id 0.
2024-06-05 14:33:15 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 999 does not exist.
2024-06-05 14:33:15 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-05 14:33:15 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 999 does not exist.
2024-06-05 14:33:15 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=null does not exist
2024-06-05 14:33:15 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 3. Error: User with username null does not exist
2024-06-05 14:33:15 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=null does not exist
2024-06-05 14:33:15 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 4. Error: User with username null does not exist
2024-06-05 14:33:16 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=null does not exist
2024-06-05 14:33:16 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 3. Error: User with username null does not exist
2024-06-05 14:33:16 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-05 14:33:17 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-05 14:33:17 ERROR c.s.s.service.MarketService - Change quantity in cart failed for guestId: 2, storeId: 0, productId: 0, amount: 3. Error: Amount doesn't exist in store
2024-06-05 14:33:18 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Missing card details
2024-06-05 14:33:19 ERROR c.s.s.service.MarketService - Add product to cart failed for guestId: 2, storeId: 0, productId: 0, amount: 3. Error: Amount doesn't exist in store
2024-06-05 14:33:19 ERROR c.s.s.service.MarketService - getStoreInfo: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-05 14:33:19 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=null does not exist
2024-06-05 14:33:19 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: User with username null does not exist
2024-06-05 14:33:19 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-05 14:33:19 ERROR c.s.s.service.MarketService - getStoreInfo: There is no store with id 2147483647.
2024-06-05 14:33:20 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=null does not exist
2024-06-05 14:33:20 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: User with username null does not exist
2024-06-05 14:33:20 ERROR c.s.s.domain.users.UserFacade - user JohnDoe already logged in
2024-06-05 14:33:20 ERROR c.s.s.service.MarketService - error in login: user already logged in
2024-06-05 14:33:20 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasGuest: Guest with guestID=1 does not exist
2024-06-05 14:33:20 ERROR c.s.s.service.MarketService - error in exitGuest: Guest with guestID 1 does not exist
2024-06-05 14:33:20 ERROR c.s.s.service.MarketService - getProductsInfo: No products found
2024-06-05 14:33:20 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-05 14:33:21 ERROR c.s.s.service.MarketService - getProductsInfo: There is no store with id 2147483647.
2024-06-05 14:33:21 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-05 14:33:21 ERROR c.s.s.service.MarketService - Change quantity in cart failed for guestId: 2, storeId: 0, productId: 0, amount: 2. Error: Amount doesn't exist in store
2024-06-05 14:33:21 ERROR c.s.s.service.MarketService - Add product to cart failed for guestId: 2, storeId: 0, productId: 2147483647, amount: 3. Error: Amount doesn't exist in store
2024-06-05 14:33:22 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-05 14:33:22 ERROR c.s.s.service.MarketService - getStoreInfo: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-05 14:33:22 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=null does not exist
2024-06-05 14:33:22 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: User with username null does not exist
2024-06-05 14:33:22 ERROR c.s.s.domain.auth.AuthFacade - user doesnt exist
2024-06-05 14:33:22 ERROR c.s.s.service.MarketService - error in login: password is incorrect
2024-06-05 14:33:23 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=null does not exist
2024-06-05 14:33:23 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: User with username null does not exist
2024-06-05 14:33:23 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-05 14:33:23 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-05 14:33:23 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-05 14:37:57 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=null does not exist
2024-06-05 14:38:20 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 3. Error: User with username null does not exist
2024-06-05 14:39:38 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=null does not exist
2024-06-05 14:39:43 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 3. Error: User with username null does not exist
2024-06-05 14:40:22 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=null does not exist
2024-06-05 14:40:22 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 3. Error: User with username null does not exist
2024-06-05 14:41:58 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=null does not exist
2024-06-05 14:42:02 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 3. Error: User with username null does not exist
2024-06-05 14:45:38 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 3. Error: null



2024-06-05 14:47:02 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 3. Error: null



2024-06-05 14:48:39 ERROR c.s.s.service.MarketService - createStore: jwt isnt valid
2024-06-05 14:48:40 ERROR c.s.sadnamarket.domain.users.Member - Exception in logout: user isn't logged in
2024-06-05 14:48:40 ERROR c.s.s.service.MarketService - error in logout: user isn't logged in
2024-06-05 14:48:40 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=username that isn't very real does not exist
2024-06-05 14:48:40 ERROR c.s.s.service.MarketService - error in logout: User with username username that isn't very real does not exist
2024-06-05 14:48:43 ERROR c.s.s.service.MarketService - getStoreOrderHistory: There is no store with id 2147483647.
2024-06-05 14:48:43 ERROR c.s.s.domain.users.MemoryRepo - Exception in getMember: User with userName=Username that nobody has does not exist
2024-06-05 14:48:43 ERROR c.s.s.service.MarketService - Get order DTO history failed for username: Username that nobody has. Error: User with userName Username that nobody has does not exist
2024-06-05 14:48:44 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=Eric does not exist
2024-06-05 14:48:44 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: User with username Eric does not exist
2024-06-05 14:48:44 ERROR c.s.s.service.MarketService - closeStore: There is no store with id 2147483647.
2024-06-05 14:48:45 ERROR c.s.s.service.MarketService - getOwners: There is no store with id 2147483647.
2024-06-05 14:48:45 ERROR c.s.s.service.MarketService - getManagers: There is no store with id 2147483647.
2024-06-05 14:48:45 ERROR c.s.s.service.MarketService - deleteProductFromStore: user Mallory can not delete a product from store with id 0.
2024-06-05 14:48:46 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: jwt isnt valid
2024-06-05 14:48:46 ERROR c.s.s.domain.products.ProductFacade - Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
2024-06-05 14:48:46 ERROR c.s.s.domain.products.ProductFacade - Error adding product: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
java.lang.IllegalArgumentException: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
	at com.sadna.sadnamarket.domain.products.ProductFacade.checkProductAttributes(ProductFacade.java:305)
	at com.sadna.sadnamarket.domain.products.ProductFacade.addProduct(ProductFacade.java:42)
	at com.sadna.sadnamarket.domain.stores.StoreFacade.addProductToStore(StoreFacade.java:95)
	at com.sadna.sadnamarket.service.MarketService.addProductToStore(MarketService.java:106)
	at com.sadna.sadnamarket.service.MarketServiceTestAdapter.addProductToStore(MarketServiceTestAdapter.java:157)
	at com.sadna.sadnamarket.StoreOwnerTests.addProductBadInfoTest(StoreOwnerTests.java:86)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)
2024-06-05 14:48:46 ERROR c.s.s.service.MarketService - addProductToStore: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
2024-06-05 14:48:46 ERROR c.s.s.service.MarketService - getStoreOrderHistory: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-05 14:48:47 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: jwt isnt valid
2024-06-05 14:48:47 ERROR c.s.s.service.MarketService - closeStore: User Mallory can not close the store with id 0 (not a founder).
2024-06-05 14:48:48 ERROR c.s.sadnamarket.domain.users.Member - Exception in getRequest: member already has role in store
2024-06-05 14:48:48 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: member already has role in store
2024-06-05 14:48:49 ERROR c.s.s.service.MarketService - getOwners: There is no store with id 2147483647.
2024-06-05 14:48:49 ERROR c.s.s.service.MarketService - getManagers: There is no store with id 2147483647.
2024-06-05 14:48:49 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: User StoreOwnerMan can not add user Eric as an owner to store 0.
2024-06-05 14:48:50 ERROR c.s.s.service.MarketService - addManagerPermission: User StoreOwnerMan can not add user Eric as a manager to store 0.
2024-06-05 14:48:50 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: User StoreOwnerMan can not add user Eric as a manager to store 0.
2024-06-05 14:48:52 ERROR c.s.s.service.MarketService - getStoreOrderHistory: jwt isnt valid
2024-06-05 14:48:53 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: User Mallory can not add user Eric as a manager to store 0.
2024-06-05 14:48:53 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-05 14:48:53 ERROR c.s.s.service.MarketService - getStoreInfo: The product with id 0 doesn't exist.
2024-06-05 14:48:55 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: User Mallory can not add user Eric as an owner to store 0.
2024-06-05 14:48:55 ERROR c.s.s.service.MarketService - updateProductInStore: A store with id 0 does not have a product with id 2147483647.
2024-06-05 14:48:55 ERROR c.s.s.service.MarketService - deleteProductFromStore: A product with id 2147483647 does not exist.
2024-06-05 14:48:56 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=Eric does not exist
2024-06-05 14:48:56 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: User with username Eric does not exist
2024-06-05 14:48:57 ERROR c.s.s.service.MarketService - updateProductInStore: A store with id 0 does not have a product with id 0.
2024-06-05 14:48:57 ERROR c.s.s.service.MarketService - addManagerPermission: User Mallory can not add user Eric as a manager to store 0.
2024-06-05 14:48:58 ERROR c.s.s.domain.products.ProductFacade - Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
2024-06-05 14:48:58 ERROR c.s.s.domain.products.ProductFacade - Error updating product: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
java.lang.IllegalArgumentException: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
	at com.sadna.sadnamarket.domain.products.ProductFacade.checkProductAttributes(ProductFacade.java:305)
	at com.sadna.sadnamarket.domain.products.ProductFacade.updateProduct(ProductFacade.java:91)
	at com.sadna.sadnamarket.domain.stores.StoreFacade.updateProduct(StoreFacade.java:125)
	at com.sadna.sadnamarket.service.MarketService.updateProductInStore(MarketService.java:145)
	at com.sadna.sadnamarket.service.MarketServiceTestAdapter.editStoreProduct(MarketServiceTestAdapter.java:169)
	at com.sadna.sadnamarket.StoreOwnerTests.editProductBadInfoTest(StoreOwnerTests.java:122)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)
2024-06-05 14:48:58 ERROR c.s.s.service.MarketService - updateProductInStore: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
2024-06-05 14:48:59 ERROR c.s.s.service.MarketService - deleteProductFromStore: A product with id 0 does not exist.
2024-06-05 14:49:01 ERROR c.s.s.service.MarketService - updateProductInStore: user Mallory can not update a product in store with id 0.
2024-06-05 14:49:01 ERROR c.s.s.service.MarketService - addProductToStore: user Mallory can not add a product to store with id 0.
2024-06-05 14:49:01 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 999 does not exist.
2024-06-05 14:49:01 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-05 14:49:01 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 999 does not exist.
2024-06-05 14:49:02 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 4. Error: You can not buy 1 of product 0 - there are only 0 in stock.


2024-06-05 14:49:03 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-05 14:49:03 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-05 14:49:03 ERROR c.s.s.service.MarketService - Change quantity in cart failed for guestId: 2, storeId: 0, productId: 0, amount: 3. Error: Amount doesn't exist in store
2024-06-05 14:49:05 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Missing card details
2024-06-05 14:49:05 ERROR c.s.s.service.MarketService - Add product to cart failed for guestId: 2, storeId: 0, productId: 0, amount: 3. Error: Amount doesn't exist in store
2024-06-05 14:49:05 ERROR c.s.s.service.MarketService - getStoreInfo: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-05 14:49:05 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Order cannot be supplied
2024-06-05 14:49:05 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-05 14:49:06 ERROR c.s.s.service.MarketService - getStoreInfo: There is no store with id 2147483647.
2024-06-05 14:49:06 ERROR c.s.s.domain.users.UserFacade - user JohnDoe already logged in
2024-06-05 14:49:06 ERROR c.s.s.service.MarketService - error in login: user already logged in
2024-06-05 14:49:06 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasGuest: Guest with guestID=1 does not exist
2024-06-05 14:49:06 ERROR c.s.s.service.MarketService - error in exitGuest: Guest with guestID 1 does not exist
2024-06-05 14:49:06 ERROR c.s.s.service.MarketService - getProductsInfo: No products found
2024-06-05 14:49:06 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-05 14:49:07 ERROR c.s.s.service.MarketService - getProductsInfo: There is no store with id 2147483647.
2024-06-05 14:49:07 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-05 14:49:07 ERROR c.s.s.service.MarketService - Change quantity in cart failed for guestId: 2, storeId: 0, productId: 0, amount: 2. Error: Amount doesn't exist in store
2024-06-05 14:49:07 ERROR c.s.s.service.MarketService - Add product to cart failed for guestId: 2, storeId: 0, productId: 2147483647, amount: 3. Error: Amount doesn't exist in store
2024-06-05 14:49:08 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-05 14:49:08 ERROR c.s.s.service.MarketService - getStoreInfo: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-05 14:49:08 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Credit card invalid
2024-06-05 14:49:09 ERROR c.s.s.domain.auth.AuthFacade - user doesnt exist
2024-06-05 14:49:09 ERROR c.s.s.service.MarketService - error in login: password is incorrect
2024-06-05 14:49:09 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: You can not buy 5 of product 0 - there are only 4 in stock.


2024-06-05 14:49:09 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-05 14:49:09 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-05 14:49:09 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-05 17:02:25 ERROR c.s.s.service.MarketService - createStore: jwt isnt valid
2024-06-05 17:02:26 ERROR c.s.sadnamarket.domain.users.Member - Exception in logout: user isn't logged in
2024-06-05 17:02:26 ERROR c.s.s.service.MarketService - error in logout: user isn't logged in
2024-06-05 17:02:26 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=username that isn't very real does not exist
2024-06-05 17:02:26 ERROR c.s.s.service.MarketService - error in logout: User with username username that isn't very real does not exist
2024-06-05 17:02:29 ERROR c.s.s.service.MarketService - getStoreOrderHistory: There is no store with id 2147483647.
2024-06-05 17:02:29 ERROR c.s.s.domain.users.MemoryRepo - Exception in getMember: User with userName=Username that nobody has does not exist
2024-06-05 17:02:29 ERROR c.s.s.service.MarketService - Get order DTO history failed for username: Username that nobody has. Error: User with userName Username that nobody has does not exist
2024-06-05 17:02:30 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=Eric does not exist
2024-06-05 17:02:30 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: User with username Eric does not exist
2024-06-05 17:02:30 ERROR c.s.s.service.MarketService - closeStore: There is no store with id 2147483647.
2024-06-05 17:02:31 ERROR c.s.s.service.MarketService - getOwners: There is no store with id 2147483647.
2024-06-05 17:02:31 ERROR c.s.s.service.MarketService - getManagers: There is no store with id 2147483647.
2024-06-05 17:02:31 ERROR c.s.s.service.MarketService - deleteProductFromStore: user Mallory can not delete a product from store with id 0.
2024-06-05 17:02:32 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: jwt isnt valid
2024-06-05 17:02:32 ERROR c.s.s.domain.products.ProductFacade - Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
2024-06-05 17:02:32 ERROR c.s.s.domain.products.ProductFacade - Error adding product: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
java.lang.IllegalArgumentException: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
	at com.sadna.sadnamarket.domain.products.ProductFacade.checkProductAttributes(ProductFacade.java:305)
	at com.sadna.sadnamarket.domain.products.ProductFacade.addProduct(ProductFacade.java:42)
	at com.sadna.sadnamarket.domain.stores.StoreFacade.addProductToStore(StoreFacade.java:95)
	at com.sadna.sadnamarket.service.MarketService.addProductToStore(MarketService.java:106)
	at com.sadna.sadnamarket.service.MarketServiceTestAdapter.addProductToStore(MarketServiceTestAdapter.java:157)
	at com.sadna.sadnamarket.StoreOwnerTests.addProductBadInfoTest(StoreOwnerTests.java:86)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)
2024-06-05 17:02:32 ERROR c.s.s.service.MarketService - addProductToStore: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
2024-06-05 17:02:33 ERROR c.s.s.service.MarketService - getStoreOrderHistory: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-05 17:02:33 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: jwt isnt valid
2024-06-05 17:02:33 ERROR c.s.s.service.MarketService - closeStore: User Mallory can not close the store with id 0 (not a founder).
2024-06-05 17:02:34 ERROR c.s.sadnamarket.domain.users.Member - Exception in getRequest: member already has role in store
2024-06-05 17:02:34 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: member already has role in store
2024-06-05 17:02:35 ERROR c.s.s.service.MarketService - getOwners: There is no store with id 2147483647.
2024-06-05 17:02:35 ERROR c.s.s.service.MarketService - getManagers: There is no store with id 2147483647.
2024-06-05 17:02:35 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: User StoreOwnerMan can not add user Eric as an owner to store 0.
2024-06-05 17:02:36 ERROR c.s.s.service.MarketService - addManagerPermission: User StoreOwnerMan can not add user Eric as a manager to store 0.
2024-06-05 17:02:37 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: User StoreOwnerMan can not add user Eric as a manager to store 0.
2024-06-05 17:02:39 ERROR c.s.s.service.MarketService - getStoreOrderHistory: jwt isnt valid
2024-06-05 17:02:39 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: User Mallory can not add user Eric as a manager to store 0.
2024-06-05 17:02:40 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-05 17:02:40 ERROR c.s.s.service.MarketService - getStoreInfo: The product with id 0 doesn't exist.
2024-06-05 17:02:41 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: User Mallory can not add user Eric as an owner to store 0.
2024-06-05 17:02:41 ERROR c.s.s.service.MarketService - updateProductInStore: A store with id 0 does not have a product with id 2147483647.
2024-06-05 17:02:41 ERROR c.s.s.service.MarketService - deleteProductFromStore: A product with id 2147483647 does not exist.
2024-06-05 17:02:42 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=Eric does not exist
2024-06-05 17:02:42 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: User with username Eric does not exist
2024-06-05 17:02:43 ERROR c.s.s.service.MarketService - updateProductInStore: A store with id 0 does not have a product with id 0.
2024-06-05 17:02:43 ERROR c.s.s.service.MarketService - addManagerPermission: User Mallory can not add user Eric as a manager to store 0.
2024-06-05 17:02:44 ERROR c.s.s.domain.products.ProductFacade - Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
2024-06-05 17:02:44 ERROR c.s.s.domain.products.ProductFacade - Error updating product: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
java.lang.IllegalArgumentException: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
	at com.sadna.sadnamarket.domain.products.ProductFacade.checkProductAttributes(ProductFacade.java:305)
	at com.sadna.sadnamarket.domain.products.ProductFacade.updateProduct(ProductFacade.java:91)
	at com.sadna.sadnamarket.domain.stores.StoreFacade.updateProduct(StoreFacade.java:125)
	at com.sadna.sadnamarket.service.MarketService.updateProductInStore(MarketService.java:145)
	at com.sadna.sadnamarket.service.MarketServiceTestAdapter.editStoreProduct(MarketServiceTestAdapter.java:169)
	at com.sadna.sadnamarket.StoreOwnerTests.editProductBadInfoTest(StoreOwnerTests.java:122)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)
2024-06-05 17:02:44 ERROR c.s.s.service.MarketService - updateProductInStore: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
2024-06-05 17:02:45 ERROR c.s.s.service.MarketService - deleteProductFromStore: A product with id 0 does not exist.
2024-06-05 17:02:47 ERROR c.s.s.service.MarketService - updateProductInStore: user Mallory can not update a product in store with id 0.
2024-06-05 17:02:47 ERROR c.s.s.service.MarketService - addProductToStore: user Mallory can not add a product to store with id 0.
2024-06-05 17:02:47 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 999 does not exist.
2024-06-05 17:02:47 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-05 17:02:47 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 999 does not exist.
2024-06-05 17:02:47 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 4. Error: You can not buy 1 of product 0 - there are only 0 in stock.


2024-06-05 17:02:48 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-05 17:02:49 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-05 17:02:49 ERROR c.s.s.service.MarketService - Change quantity in cart failed for guestId: 2, storeId: 0, productId: 0, amount: 3. Error: Amount doesn't exist in store
2024-06-05 17:02:50 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Missing card details
2024-06-05 17:02:51 ERROR c.s.s.service.MarketService - Add product to cart failed for guestId: 2, storeId: 0, productId: 0, amount: 3. Error: Amount doesn't exist in store
2024-06-05 17:02:51 ERROR c.s.s.service.MarketService - getStoreInfo: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-05 17:02:51 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Order cannot be supplied
2024-06-05 17:02:51 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-05 17:02:51 ERROR c.s.s.service.MarketService - getStoreInfo: There is no store with id 2147483647.
2024-06-05 17:02:52 ERROR c.s.s.domain.users.UserFacade - user JohnDoe already logged in
2024-06-05 17:02:52 ERROR c.s.s.service.MarketService - error in login: user already logged in
2024-06-05 17:02:52 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasGuest: Guest with guestID=1 does not exist
2024-06-05 17:02:52 ERROR c.s.s.service.MarketService - error in exitGuest: Guest with guestID 1 does not exist
2024-06-05 17:02:52 ERROR c.s.s.service.MarketService - getProductsInfo: No products found
2024-06-05 17:02:52 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-05 17:02:53 ERROR c.s.s.service.MarketService - getProductsInfo: There is no store with id 2147483647.
2024-06-05 17:02:53 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-05 17:02:53 ERROR c.s.s.service.MarketService - Change quantity in cart failed for guestId: 2, storeId: 0, productId: 0, amount: 2. Error: Amount doesn't exist in store
2024-06-05 17:02:53 ERROR c.s.s.service.MarketService - Add product to cart failed for guestId: 2, storeId: 0, productId: 2147483647, amount: 3. Error: Amount doesn't exist in store
2024-06-05 17:02:53 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-05 17:02:54 ERROR c.s.s.service.MarketService - getStoreInfo: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-05 17:02:54 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Credit card invalid
2024-06-05 17:02:54 ERROR c.s.s.domain.auth.AuthFacade - user doesnt exist
2024-06-05 17:02:54 ERROR c.s.s.service.MarketService - error in login: password is incorrect
2024-06-05 17:02:55 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: You can not buy 5 of product 0 - there are only 4 in stock.


2024-06-05 17:02:55 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-05 17:02:55 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-05 17:02:55 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-05 17:08:04 ERROR c.s.s.service.MarketService - createStore: jwt isnt valid
2024-06-05 17:08:05 ERROR c.s.sadnamarket.domain.users.Member - Exception in logout: user isn't logged in
2024-06-05 17:08:05 ERROR c.s.s.service.MarketService - error in logout: user isn't logged in
2024-06-05 17:08:06 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=username that isn't very real does not exist
2024-06-05 17:08:06 ERROR c.s.s.service.MarketService - error in logout: User with username username that isn't very real does not exist
2024-06-05 17:08:09 ERROR c.s.s.service.MarketService - getStoreOrderHistory: There is no store with id 2147483647.
2024-06-05 17:08:10 ERROR c.s.s.domain.users.MemoryRepo - Exception in getMember: User with userName=Username that nobody has does not exist
2024-06-05 17:08:10 ERROR c.s.s.service.MarketService - Get order DTO history failed for username: Username that nobody has. Error: User with userName Username that nobody has does not exist
2024-06-05 17:08:10 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=Eric does not exist
2024-06-05 17:08:10 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: User with username Eric does not exist
2024-06-05 17:08:11 ERROR c.s.s.service.MarketService - closeStore: There is no store with id 2147483647.
2024-06-05 17:08:11 ERROR c.s.s.service.MarketService - getOwners: There is no store with id 2147483647.
2024-06-05 17:08:11 ERROR c.s.s.service.MarketService - getManagers: There is no store with id 2147483647.
2024-06-05 17:08:12 ERROR c.s.s.service.MarketService - deleteProductFromStore: user Mallory can not delete a product from store with id 0.
2024-06-05 17:08:12 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: jwt isnt valid
2024-06-05 17:08:13 ERROR c.s.s.domain.products.ProductFacade - Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
2024-06-05 17:08:13 ERROR c.s.s.domain.products.ProductFacade - Error adding product: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
java.lang.IllegalArgumentException: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
	at com.sadna.sadnamarket.domain.products.ProductFacade.checkProductAttributes(ProductFacade.java:305)
	at com.sadna.sadnamarket.domain.products.ProductFacade.addProduct(ProductFacade.java:42)
	at com.sadna.sadnamarket.domain.stores.StoreFacade.addProductToStore(StoreFacade.java:95)
	at com.sadna.sadnamarket.service.MarketService.addProductToStore(MarketService.java:106)
	at com.sadna.sadnamarket.service.MarketServiceTestAdapter.addProductToStore(MarketServiceTestAdapter.java:157)
	at com.sadna.sadnamarket.StoreOwnerTests.addProductBadInfoTest(StoreOwnerTests.java:86)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)
2024-06-05 17:08:13 ERROR c.s.s.service.MarketService - addProductToStore: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
2024-06-05 17:08:13 ERROR c.s.s.service.MarketService - getStoreOrderHistory: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-05 17:08:14 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: jwt isnt valid
2024-06-05 17:08:14 ERROR c.s.s.service.MarketService - closeStore: User Mallory can not close the store with id 0 (not a founder).
2024-06-05 17:08:15 ERROR c.s.sadnamarket.domain.users.Member - Exception in getRequest: member already has role in store
2024-06-05 17:08:15 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: member already has role in store
2024-06-05 17:08:16 ERROR c.s.s.service.MarketService - getOwners: There is no store with id 2147483647.
2024-06-05 17:08:16 ERROR c.s.s.service.MarketService - getManagers: There is no store with id 2147483647.
2024-06-05 17:08:17 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: User StoreOwnerMan can not add user Eric as an owner to store 0.
2024-06-05 17:08:18 ERROR c.s.s.service.MarketService - addManagerPermission: User StoreOwnerMan can not add user Eric as a manager to store 0.
2024-06-05 17:08:20 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: User StoreOwnerMan can not add user Eric as a manager to store 0.
2024-06-05 17:08:24 ERROR c.s.s.service.MarketService - getStoreOrderHistory: jwt isnt valid
2024-06-05 17:08:25 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: User Mallory can not add user Eric as a manager to store 0.
2024-06-05 17:08:26 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-05 17:08:26 ERROR c.s.s.service.MarketService - getStoreInfo: The product with id 0 doesn't exist.
2024-06-05 17:08:28 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: User Mallory can not add user Eric as an owner to store 0.
2024-06-05 17:08:29 ERROR c.s.s.service.MarketService - updateProductInStore: A store with id 0 does not have a product with id 2147483647.
2024-06-05 17:08:29 ERROR c.s.s.service.MarketService - deleteProductFromStore: A product with id 2147483647 does not exist.
2024-06-05 17:08:29 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=Eric does not exist
2024-06-05 17:08:29 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: User with username Eric does not exist
2024-06-05 17:08:30 ERROR c.s.s.service.MarketService - updateProductInStore: A store with id 0 does not have a product with id 0.
2024-06-05 17:08:31 ERROR c.s.s.service.MarketService - addManagerPermission: User Mallory can not add user Eric as a manager to store 0.
2024-06-05 17:08:32 ERROR c.s.s.domain.products.ProductFacade - Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
2024-06-05 17:08:32 ERROR c.s.s.domain.products.ProductFacade - Error updating product: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
java.lang.IllegalArgumentException: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
	at com.sadna.sadnamarket.domain.products.ProductFacade.checkProductAttributes(ProductFacade.java:305)
	at com.sadna.sadnamarket.domain.products.ProductFacade.updateProduct(ProductFacade.java:91)
	at com.sadna.sadnamarket.domain.stores.StoreFacade.updateProduct(StoreFacade.java:125)
	at com.sadna.sadnamarket.service.MarketService.updateProductInStore(MarketService.java:145)
	at com.sadna.sadnamarket.service.MarketServiceTestAdapter.editStoreProduct(MarketServiceTestAdapter.java:169)
	at com.sadna.sadnamarket.StoreOwnerTests.editProductBadInfoTest(StoreOwnerTests.java:122)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)
2024-06-05 17:08:32 ERROR c.s.s.service.MarketService - updateProductInStore: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
2024-06-05 17:08:33 ERROR c.s.s.service.MarketService - deleteProductFromStore: A product with id 0 does not exist.
2024-06-05 17:08:34 ERROR c.s.s.service.MarketService - updateProductInStore: user Mallory can not update a product in store with id 0.
2024-06-05 17:08:35 ERROR c.s.s.service.MarketService - addProductToStore: user Mallory can not add a product to store with id 0.
2024-06-05 17:08:35 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 999 does not exist.
2024-06-05 17:08:35 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-05 17:08:35 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 999 does not exist.
2024-06-05 17:08:35 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 4. Error: You can not buy 1 of product 0 - there are only 0 in stock.


2024-06-05 17:08:36 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-05 17:08:36 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-05 17:08:37 ERROR c.s.s.service.MarketService - Change quantity in cart failed for guestId: 2, storeId: 0, productId: 0, amount: 3. Error: Amount doesn't exist in store
2024-06-05 17:08:42 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Missing card details
2024-06-05 17:08:42 ERROR c.s.s.service.MarketService - Add product to cart failed for guestId: 2, storeId: 0, productId: 0, amount: 3. Error: Amount doesn't exist in store
2024-06-05 17:08:43 ERROR c.s.s.service.MarketService - getStoreInfo: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-05 17:08:43 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Order cannot be supplied
2024-06-05 17:08:43 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-05 17:08:43 ERROR c.s.s.service.MarketService - getStoreInfo: There is no store with id 2147483647.
2024-06-05 17:08:44 ERROR c.s.s.domain.users.UserFacade - user JohnDoe already logged in
2024-06-05 17:08:44 ERROR c.s.s.service.MarketService - error in login: user already logged in
2024-06-05 17:08:44 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasGuest: Guest with guestID=1 does not exist
2024-06-05 17:08:44 ERROR c.s.s.service.MarketService - error in exitGuest: Guest with guestID 1 does not exist
2024-06-05 17:08:44 ERROR c.s.s.service.MarketService - getProductsInfo: No products found
2024-06-05 17:08:44 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-05 17:08:45 ERROR c.s.s.service.MarketService - getProductsInfo: There is no store with id 2147483647.
2024-06-05 17:08:45 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-05 17:08:45 ERROR c.s.s.service.MarketService - Change quantity in cart failed for guestId: 2, storeId: 0, productId: 0, amount: 2. Error: Amount doesn't exist in store
2024-06-05 17:08:45 ERROR c.s.s.service.MarketService - Add product to cart failed for guestId: 2, storeId: 0, productId: 2147483647, amount: 3. Error: Amount doesn't exist in store
2024-06-05 17:08:46 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-05 17:08:46 ERROR c.s.s.service.MarketService - getStoreInfo: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-05 17:08:46 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Credit card invalid
2024-06-05 17:08:46 ERROR c.s.s.domain.auth.AuthFacade - user doesnt exist
2024-06-05 17:08:46 ERROR c.s.s.service.MarketService - error in login: password is incorrect
2024-06-05 17:08:47 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: You can not buy 5 of product 0 - there are only 4 in stock.


2024-06-05 17:08:47 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-05 17:08:47 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-05 17:08:47 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-05 17:12:18 ERROR c.s.s.service.MarketService - createStore: jwt isnt valid
2024-06-05 17:12:19 ERROR c.s.sadnamarket.domain.users.Member - Exception in logout: user isn't logged in
2024-06-05 17:12:19 ERROR c.s.s.service.MarketService - error in logout: user isn't logged in
2024-06-05 17:12:19 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=username that isn't very real does not exist
2024-06-05 17:12:19 ERROR c.s.s.service.MarketService - error in logout: User with username username that isn't very real does not exist
2024-06-05 17:12:22 ERROR c.s.s.service.MarketService - getStoreOrderHistory: There is no store with id 2147483647.
2024-06-05 17:12:22 ERROR c.s.s.domain.users.MemoryRepo - Exception in getMember: User with userName=Username that nobody has does not exist
2024-06-05 17:12:22 ERROR c.s.s.service.MarketService - Get order DTO history failed for username: Username that nobody has. Error: User with userName Username that nobody has does not exist
2024-06-05 17:12:23 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=Eric does not exist
2024-06-05 17:12:23 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: User with username Eric does not exist
2024-06-05 17:12:23 ERROR c.s.s.service.MarketService - closeStore: There is no store with id 2147483647.
2024-06-05 17:12:24 ERROR c.s.s.service.MarketService - getOwners: There is no store with id 2147483647.
2024-06-05 17:12:24 ERROR c.s.s.service.MarketService - getManagers: There is no store with id 2147483647.
2024-06-05 17:12:24 ERROR c.s.s.service.MarketService - deleteProductFromStore: user Mallory can not delete a product from store with id 0.
2024-06-05 17:12:25 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: jwt isnt valid
2024-06-05 17:12:25 ERROR c.s.s.domain.products.ProductFacade - Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
2024-06-05 17:12:25 ERROR c.s.s.domain.products.ProductFacade - Error adding product: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
java.lang.IllegalArgumentException: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
	at com.sadna.sadnamarket.domain.products.ProductFacade.checkProductAttributes(ProductFacade.java:305)
	at com.sadna.sadnamarket.domain.products.ProductFacade.addProduct(ProductFacade.java:42)
	at com.sadna.sadnamarket.domain.stores.StoreFacade.addProductToStore(StoreFacade.java:95)
	at com.sadna.sadnamarket.service.MarketService.addProductToStore(MarketService.java:106)
	at com.sadna.sadnamarket.service.MarketServiceTestAdapter.addProductToStore(MarketServiceTestAdapter.java:157)
	at com.sadna.sadnamarket.StoreOwnerTests.addProductBadInfoTest(StoreOwnerTests.java:86)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)
2024-06-05 17:12:25 ERROR c.s.s.service.MarketService - addProductToStore: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
2024-06-05 17:12:25 ERROR c.s.s.service.MarketService - getStoreOrderHistory: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-05 17:12:26 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: jwt isnt valid
2024-06-05 17:12:26 ERROR c.s.s.service.MarketService - closeStore: User Mallory can not close the store with id 0 (not a founder).
2024-06-05 17:12:27 ERROR c.s.sadnamarket.domain.users.Member - Exception in getRequest: member already has role in store
2024-06-05 17:12:27 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: member already has role in store
2024-06-05 17:12:28 ERROR c.s.s.service.MarketService - getOwners: There is no store with id 2147483647.
2024-06-05 17:12:28 ERROR c.s.s.service.MarketService - getManagers: There is no store with id 2147483647.
2024-06-05 17:12:28 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: User StoreOwnerMan can not add user Eric as an owner to store 0.
2024-06-05 17:12:29 ERROR c.s.s.service.MarketService - addManagerPermission: User StoreOwnerMan can not add user Eric as a manager to store 0.
2024-06-05 17:12:29 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: User StoreOwnerMan can not add user Eric as a manager to store 0.
2024-06-05 17:12:31 ERROR c.s.s.service.MarketService - getStoreOrderHistory: jwt isnt valid
2024-06-05 17:12:32 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: User Mallory can not add user Eric as a manager to store 0.
2024-06-05 17:12:32 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-05 17:12:32 ERROR c.s.s.service.MarketService - getStoreInfo: The product with id 0 doesn't exist.
2024-06-05 17:12:33 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: User Mallory can not add user Eric as an owner to store 0.
2024-06-05 17:12:34 ERROR c.s.s.service.MarketService - updateProductInStore: A store with id 0 does not have a product with id 2147483647.
2024-06-05 17:12:34 ERROR c.s.s.service.MarketService - deleteProductFromStore: A product with id 2147483647 does not exist.
2024-06-05 17:12:34 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=Eric does not exist
2024-06-05 17:12:34 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: User with username Eric does not exist
2024-06-05 17:12:35 ERROR c.s.s.service.MarketService - updateProductInStore: A store with id 0 does not have a product with id 0.
2024-06-05 17:12:36 ERROR c.s.s.service.MarketService - addManagerPermission: User Mallory can not add user Eric as a manager to store 0.
2024-06-05 17:12:37 ERROR c.s.s.domain.products.ProductFacade - Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
2024-06-05 17:12:37 ERROR c.s.s.domain.products.ProductFacade - Error updating product: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
java.lang.IllegalArgumentException: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
	at com.sadna.sadnamarket.domain.products.ProductFacade.checkProductAttributes(ProductFacade.java:305)
	at com.sadna.sadnamarket.domain.products.ProductFacade.updateProduct(ProductFacade.java:91)
	at com.sadna.sadnamarket.domain.stores.StoreFacade.updateProduct(StoreFacade.java:125)
	at com.sadna.sadnamarket.service.MarketService.updateProductInStore(MarketService.java:145)
	at com.sadna.sadnamarket.service.MarketServiceTestAdapter.editStoreProduct(MarketServiceTestAdapter.java:169)
	at com.sadna.sadnamarket.StoreOwnerTests.editProductBadInfoTest(StoreOwnerTests.java:122)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)
2024-06-05 17:12:37 ERROR c.s.s.service.MarketService - updateProductInStore: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
2024-06-05 17:12:38 ERROR c.s.s.service.MarketService - deleteProductFromStore: A product with id 0 does not exist.
2024-06-05 17:12:39 ERROR c.s.s.service.MarketService - updateProductInStore: user Mallory can not update a product in store with id 0.
2024-06-05 17:12:39 ERROR c.s.s.service.MarketService - addProductToStore: user Mallory can not add a product to store with id 0.
2024-06-05 17:12:39 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 999 does not exist.
2024-06-05 17:12:40 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-05 17:12:40 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 999 does not exist.
2024-06-05 17:12:40 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 4. Error: You can not buy 1 of product 0 - there are only 0 in stock.


2024-06-05 17:12:41 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-05 17:12:41 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-05 17:12:41 ERROR c.s.s.service.MarketService - Change quantity in cart failed for guestId: 2, storeId: 0, productId: 0, amount: 3. Error: Amount doesn't exist in store
2024-06-05 17:12:43 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Missing card details
2024-06-05 17:12:43 ERROR c.s.s.service.MarketService - Add product to cart failed for guestId: 2, storeId: 0, productId: 0, amount: 3. Error: Amount doesn't exist in store
2024-06-05 17:12:43 ERROR c.s.s.service.MarketService - getStoreInfo: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-05 17:12:43 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Order cannot be supplied
2024-06-05 17:12:43 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-05 17:12:44 ERROR c.s.s.service.MarketService - getStoreInfo: There is no store with id 2147483647.
2024-06-05 17:12:44 ERROR c.s.s.domain.users.UserFacade - user JohnDoe already logged in
2024-06-05 17:12:44 ERROR c.s.s.service.MarketService - error in login: user already logged in
2024-06-05 17:12:44 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasGuest: Guest with guestID=1 does not exist
2024-06-05 17:12:44 ERROR c.s.s.service.MarketService - error in exitGuest: Guest with guestID 1 does not exist
2024-06-05 17:12:44 ERROR c.s.s.service.MarketService - getProductsInfo: No products found
2024-06-05 17:12:44 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-05 17:12:45 ERROR c.s.s.service.MarketService - getProductsInfo: There is no store with id 2147483647.
2024-06-05 17:12:45 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-05 17:12:45 ERROR c.s.s.service.MarketService - Change quantity in cart failed for guestId: 2, storeId: 0, productId: 0, amount: 2. Error: Amount doesn't exist in store
2024-06-05 17:12:45 ERROR c.s.s.service.MarketService - Add product to cart failed for guestId: 2, storeId: 0, productId: 2147483647, amount: 3. Error: Amount doesn't exist in store
2024-06-05 17:12:46 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-05 17:12:46 ERROR c.s.s.service.MarketService - getStoreInfo: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-05 17:12:46 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Credit card invalid
2024-06-05 17:12:47 ERROR c.s.s.domain.auth.AuthFacade - user doesnt exist
2024-06-05 17:12:47 ERROR c.s.s.service.MarketService - error in login: password is incorrect
2024-06-05 17:12:47 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: You can not buy 5 of product 0 - there are only 4 in stock.


2024-06-05 17:12:47 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-05 17:12:47 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-05 17:12:47 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-05 17:13:20 ERROR c.s.s.service.MarketService - createStore: jwt isnt valid
2024-06-05 17:13:20 ERROR c.s.sadnamarket.domain.users.Member - Exception in logout: user isn't logged in
2024-06-05 17:13:20 ERROR c.s.s.service.MarketService - error in logout: user isn't logged in
2024-06-05 17:13:21 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=username that isn't very real does not exist
2024-06-05 17:13:21 ERROR c.s.s.service.MarketService - error in logout: User with username username that isn't very real does not exist
2024-06-05 17:13:21 ERROR c.s.s.service.MarketService - Purchase cart failed for username: Billy. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 17:13:22 ERROR c.s.s.service.MarketService - Purchase cart failed for username: Billy. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 17:13:23 ERROR c.s.s.service.MarketService - Purchase cart failed for username: Billy. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 17:13:23 ERROR c.s.s.service.MarketService - getStoreOrderHistory: There is no store with id 2147483647.
2024-06-05 17:13:24 ERROR c.s.s.service.MarketService - Purchase cart failed for username: Billy. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 17:13:24 ERROR c.s.s.domain.users.MemoryRepo - Exception in getMember: User with userName=Username that nobody has does not exist
2024-06-05 17:13:24 ERROR c.s.s.service.MarketService - Get order DTO history failed for username: Username that nobody has. Error: User with userName Username that nobody has does not exist
2024-06-05 17:13:24 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=Eric does not exist
2024-06-05 17:13:24 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: User with username Eric does not exist
2024-06-05 17:13:25 ERROR c.s.s.service.MarketService - closeStore: There is no store with id 2147483647.
2024-06-05 17:13:25 ERROR c.s.s.service.MarketService - getOwners: There is no store with id 2147483647.
2024-06-05 17:13:25 ERROR c.s.s.service.MarketService - getManagers: There is no store with id 2147483647.
2024-06-05 17:13:26 ERROR c.s.s.service.MarketService - deleteProductFromStore: user Mallory can not delete a product from store with id 0.
2024-06-05 17:13:26 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: jwt isnt valid
2024-06-05 17:13:27 ERROR c.s.s.domain.products.ProductFacade - Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
2024-06-05 17:13:27 ERROR c.s.s.domain.products.ProductFacade - Error adding product: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
java.lang.IllegalArgumentException: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
	at com.sadna.sadnamarket.domain.products.ProductFacade.checkProductAttributes(ProductFacade.java:305)
	at com.sadna.sadnamarket.domain.products.ProductFacade.addProduct(ProductFacade.java:42)
	at com.sadna.sadnamarket.domain.stores.StoreFacade.addProductToStore(StoreFacade.java:95)
	at com.sadna.sadnamarket.service.MarketService.addProductToStore(MarketService.java:106)
	at com.sadna.sadnamarket.service.MarketServiceTestAdapter.addProductToStore(MarketServiceTestAdapter.java:157)
	at com.sadna.sadnamarket.StoreOwnerTests.addProductBadInfoTest(StoreOwnerTests.java:86)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)
2024-06-05 17:13:27 ERROR c.s.s.service.MarketService - addProductToStore: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
2024-06-05 17:13:27 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 3. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 17:13:27 ERROR c.s.s.service.MarketService - getStoreOrderHistory: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-05 17:13:28 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: jwt isnt valid
2024-06-05 17:13:28 ERROR c.s.s.service.MarketService - closeStore: User Mallory can not close the store with id 0 (not a founder).
2024-06-05 17:13:29 ERROR c.s.sadnamarket.domain.users.Member - Exception in getRequest: member already has role in store
2024-06-05 17:13:29 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: member already has role in store
2024-06-05 17:13:29 ERROR c.s.s.service.MarketService - getOwners: There is no store with id 2147483647.
2024-06-05 17:13:29 ERROR c.s.s.service.MarketService - getManagers: There is no store with id 2147483647.
2024-06-05 17:13:30 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: User StoreOwnerMan can not add user Eric as an owner to store 0.
2024-06-05 17:13:30 ERROR c.s.s.service.MarketService - addManagerPermission: User StoreOwnerMan can not add user Eric as a manager to store 0.
2024-06-05 17:13:31 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: User StoreOwnerMan can not add user Eric as a manager to store 0.
2024-06-05 17:13:31 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 3. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 17:13:33 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 3. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 17:13:33 ERROR c.s.s.service.MarketService - getStoreOrderHistory: jwt isnt valid
2024-06-05 17:13:34 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: User Mallory can not add user Eric as a manager to store 0.
2024-06-05 17:13:34 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-05 17:13:34 ERROR c.s.s.service.MarketService - getStoreInfo: The product with id 0 doesn't exist.
2024-06-05 17:13:35 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: User Mallory can not add user Eric as an owner to store 0.
2024-06-05 17:13:35 ERROR c.s.s.service.MarketService - updateProductInStore: A store with id 0 does not have a product with id 2147483647.
2024-06-05 17:13:36 ERROR c.s.s.service.MarketService - deleteProductFromStore: A product with id 2147483647 does not exist.
2024-06-05 17:13:36 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=Eric does not exist
2024-06-05 17:13:36 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: User with username Eric does not exist
2024-06-05 17:13:37 ERROR c.s.s.service.MarketService - updateProductInStore: A store with id 0 does not have a product with id 0.
2024-06-05 17:13:38 ERROR c.s.s.service.MarketService - addManagerPermission: User Mallory can not add user Eric as a manager to store 0.
2024-06-05 17:13:39 ERROR c.s.s.domain.products.ProductFacade - Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
2024-06-05 17:13:39 ERROR c.s.s.domain.products.ProductFacade - Error updating product: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
java.lang.IllegalArgumentException: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
	at com.sadna.sadnamarket.domain.products.ProductFacade.checkProductAttributes(ProductFacade.java:305)
	at com.sadna.sadnamarket.domain.products.ProductFacade.updateProduct(ProductFacade.java:91)
	at com.sadna.sadnamarket.domain.stores.StoreFacade.updateProduct(StoreFacade.java:125)
	at com.sadna.sadnamarket.service.MarketService.updateProductInStore(MarketService.java:145)
	at com.sadna.sadnamarket.service.MarketServiceTestAdapter.editStoreProduct(MarketServiceTestAdapter.java:169)
	at com.sadna.sadnamarket.StoreOwnerTests.editProductBadInfoTest(StoreOwnerTests.java:122)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)
2024-06-05 17:13:39 ERROR c.s.s.service.MarketService - updateProductInStore: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
2024-06-05 17:13:40 ERROR c.s.s.service.MarketService - deleteProductFromStore: A product with id 0 does not exist.
2024-06-05 17:13:41 ERROR c.s.s.service.MarketService - updateProductInStore: user Mallory can not update a product in store with id 0.
2024-06-05 17:13:41 ERROR c.s.s.service.MarketService - addProductToStore: user Mallory can not add a product to store with id 0.
2024-06-05 17:13:41 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 999 does not exist.
2024-06-05 17:13:41 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-05 17:13:41 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 999 does not exist.
2024-06-05 17:13:42 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 3. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 17:13:42 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 4. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 17:13:43 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 3. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 17:13:43 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-05 17:13:43 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-05 17:13:43 ERROR c.s.s.service.MarketService - Change quantity in cart failed for guestId: 2, storeId: 0, productId: 0, amount: 3. Error: Amount doesn't exist in store
2024-06-05 17:13:45 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Missing card details
2024-06-05 17:13:45 ERROR c.s.s.service.MarketService - Add product to cart failed for guestId: 2, storeId: 0, productId: 0, amount: 3. Error: Amount doesn't exist in store
2024-06-05 17:13:45 ERROR c.s.s.service.MarketService - getStoreInfo: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-05 17:13:45 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 17:13:45 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-05 17:13:45 ERROR c.s.s.service.MarketService - getStoreInfo: There is no store with id 2147483647.
2024-06-05 17:13:46 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 17:13:46 ERROR c.s.s.domain.users.UserFacade - user JohnDoe already logged in
2024-06-05 17:13:46 ERROR c.s.s.service.MarketService - error in login: user already logged in
2024-06-05 17:13:46 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasGuest: Guest with guestID=1 does not exist
2024-06-05 17:13:46 ERROR c.s.s.service.MarketService - error in exitGuest: Guest with guestID 1 does not exist
2024-06-05 17:13:46 ERROR c.s.s.service.MarketService - getProductsInfo: No products found
2024-06-05 17:13:46 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-05 17:13:47 ERROR c.s.s.service.MarketService - getProductsInfo: There is no store with id 2147483647.
2024-06-05 17:13:47 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-05 17:13:47 ERROR c.s.s.service.MarketService - Change quantity in cart failed for guestId: 2, storeId: 0, productId: 0, amount: 2. Error: Amount doesn't exist in store
2024-06-05 17:13:47 ERROR c.s.s.service.MarketService - Add product to cart failed for guestId: 2, storeId: 0, productId: 2147483647, amount: 3. Error: Amount doesn't exist in store
2024-06-05 17:13:48 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-05 17:13:48 ERROR c.s.s.service.MarketService - getStoreInfo: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-05 17:13:48 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 17:13:48 ERROR c.s.s.domain.auth.AuthFacade - user doesnt exist
2024-06-05 17:13:48 ERROR c.s.s.service.MarketService - error in login: password is incorrect
2024-06-05 17:13:49 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 17:13:49 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-05 17:13:49 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-05 17:13:49 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-05 17:14:38 ERROR c.s.s.service.MarketService - createStore: jwt isnt valid
2024-06-05 17:14:39 ERROR c.s.sadnamarket.domain.users.Member - Exception in logout: user isn't logged in
2024-06-05 17:14:39 ERROR c.s.s.service.MarketService - error in logout: user isn't logged in
2024-06-05 17:14:39 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=username that isn't very real does not exist
2024-06-05 17:14:39 ERROR c.s.s.service.MarketService - error in logout: User with username username that isn't very real does not exist
2024-06-05 17:14:42 ERROR c.s.s.service.MarketService - getStoreOrderHistory: There is no store with id 2147483647.
2024-06-05 17:14:42 ERROR c.s.s.domain.users.MemoryRepo - Exception in getMember: User with userName=Username that nobody has does not exist
2024-06-05 17:14:42 ERROR c.s.s.service.MarketService - Get order DTO history failed for username: Username that nobody has. Error: User with userName Username that nobody has does not exist
2024-06-05 17:14:43 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=Eric does not exist
2024-06-05 17:14:43 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: User with username Eric does not exist
2024-06-05 17:14:43 ERROR c.s.s.service.MarketService - closeStore: There is no store with id 2147483647.
2024-06-05 17:14:44 ERROR c.s.s.service.MarketService - getOwners: There is no store with id 2147483647.
2024-06-05 17:14:44 ERROR c.s.s.service.MarketService - getManagers: There is no store with id 2147483647.
2024-06-05 17:14:44 ERROR c.s.s.service.MarketService - deleteProductFromStore: user Mallory can not delete a product from store with id 0.
2024-06-05 17:14:45 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: jwt isnt valid
2024-06-05 17:14:45 ERROR c.s.s.domain.products.ProductFacade - Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
2024-06-05 17:14:45 ERROR c.s.s.domain.products.ProductFacade - Error adding product: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
java.lang.IllegalArgumentException: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
	at com.sadna.sadnamarket.domain.products.ProductFacade.checkProductAttributes(ProductFacade.java:305)
	at com.sadna.sadnamarket.domain.products.ProductFacade.addProduct(ProductFacade.java:42)
	at com.sadna.sadnamarket.domain.stores.StoreFacade.addProductToStore(StoreFacade.java:95)
	at com.sadna.sadnamarket.service.MarketService.addProductToStore(MarketService.java:106)
	at com.sadna.sadnamarket.service.MarketServiceTestAdapter.addProductToStore(MarketServiceTestAdapter.java:157)
	at com.sadna.sadnamarket.StoreOwnerTests.addProductBadInfoTest(StoreOwnerTests.java:86)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)
2024-06-05 17:14:45 ERROR c.s.s.service.MarketService - addProductToStore: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
2024-06-05 17:14:45 ERROR c.s.s.service.MarketService - getStoreOrderHistory: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-05 17:14:46 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: jwt isnt valid
2024-06-05 17:14:46 ERROR c.s.s.service.MarketService - closeStore: User Mallory can not close the store with id 0 (not a founder).
2024-06-05 17:14:47 ERROR c.s.sadnamarket.domain.users.Member - Exception in getRequest: member already has role in store
2024-06-05 17:14:47 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: member already has role in store
2024-06-05 17:14:48 ERROR c.s.s.service.MarketService - getOwners: There is no store with id 2147483647.
2024-06-05 17:14:48 ERROR c.s.s.service.MarketService - getManagers: There is no store with id 2147483647.
2024-06-05 17:14:48 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: User StoreOwnerMan can not add user Eric as an owner to store 0.
2024-06-05 17:14:49 ERROR c.s.s.service.MarketService - addManagerPermission: User StoreOwnerMan can not add user Eric as a manager to store 0.
2024-06-05 17:14:49 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: User StoreOwnerMan can not add user Eric as a manager to store 0.
2024-06-05 17:14:51 ERROR c.s.s.service.MarketService - getStoreOrderHistory: jwt isnt valid
2024-06-05 17:14:52 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: User Mallory can not add user Eric as a manager to store 0.
2024-06-05 17:14:52 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-05 17:14:52 ERROR c.s.s.service.MarketService - getStoreInfo: The product with id 0 doesn't exist.
2024-06-05 17:14:53 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: User Mallory can not add user Eric as an owner to store 0.
2024-06-05 17:14:54 ERROR c.s.s.service.MarketService - updateProductInStore: A store with id 0 does not have a product with id 2147483647.
2024-06-05 17:14:54 ERROR c.s.s.service.MarketService - deleteProductFromStore: A product with id 2147483647 does not exist.
2024-06-05 17:14:54 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=Eric does not exist
2024-06-05 17:14:54 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: User with username Eric does not exist
2024-06-05 17:14:55 ERROR c.s.s.service.MarketService - updateProductInStore: A store with id 0 does not have a product with id 0.
2024-06-05 17:14:56 ERROR c.s.s.service.MarketService - addManagerPermission: User Mallory can not add user Eric as a manager to store 0.
2024-06-05 17:14:57 ERROR c.s.s.domain.products.ProductFacade - Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
2024-06-05 17:14:57 ERROR c.s.s.domain.products.ProductFacade - Error updating product: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
java.lang.IllegalArgumentException: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
	at com.sadna.sadnamarket.domain.products.ProductFacade.checkProductAttributes(ProductFacade.java:305)
	at com.sadna.sadnamarket.domain.products.ProductFacade.updateProduct(ProductFacade.java:91)
	at com.sadna.sadnamarket.domain.stores.StoreFacade.updateProduct(StoreFacade.java:125)
	at com.sadna.sadnamarket.service.MarketService.updateProductInStore(MarketService.java:145)
	at com.sadna.sadnamarket.service.MarketServiceTestAdapter.editStoreProduct(MarketServiceTestAdapter.java:169)
	at com.sadna.sadnamarket.StoreOwnerTests.editProductBadInfoTest(StoreOwnerTests.java:122)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)
2024-06-05 17:14:57 ERROR c.s.s.service.MarketService - updateProductInStore: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
2024-06-05 17:14:58 ERROR c.s.s.service.MarketService - deleteProductFromStore: A product with id 0 does not exist.
2024-06-05 17:14:59 ERROR c.s.s.service.MarketService - updateProductInStore: user Mallory can not update a product in store with id 0.
2024-06-05 17:15:00 ERROR c.s.s.service.MarketService - addProductToStore: user Mallory can not add a product to store with id 0.
2024-06-05 17:15:00 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 999 does not exist.
2024-06-05 17:15:00 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-05 17:15:00 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 999 does not exist.
2024-06-05 17:15:00 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 4. Error: You can not buy 1 of product 0 - there are only 0 in stock.


2024-06-05 17:15:01 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-05 17:15:01 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-05 17:15:02 ERROR c.s.s.service.MarketService - Change quantity in cart failed for guestId: 2, storeId: 0, productId: 0, amount: 3. Error: Amount doesn't exist in store
2024-06-05 17:15:03 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Missing card details
2024-06-05 17:15:03 ERROR c.s.s.service.MarketService - Add product to cart failed for guestId: 2, storeId: 0, productId: 0, amount: 3. Error: Amount doesn't exist in store
2024-06-05 17:15:03 ERROR c.s.s.service.MarketService - getStoreInfo: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-05 17:15:03 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Order cannot be supplied
2024-06-05 17:15:04 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-05 17:15:04 ERROR c.s.s.service.MarketService - getStoreInfo: There is no store with id 2147483647.
2024-06-05 17:15:04 ERROR c.s.s.domain.users.UserFacade - user JohnDoe already logged in
2024-06-05 17:15:04 ERROR c.s.s.service.MarketService - error in login: user already logged in
2024-06-05 17:15:04 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasGuest: Guest with guestID=1 does not exist
2024-06-05 17:15:04 ERROR c.s.s.service.MarketService - error in exitGuest: Guest with guestID 1 does not exist
2024-06-05 17:15:04 ERROR c.s.s.service.MarketService - getProductsInfo: No products found
2024-06-05 17:15:05 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-05 17:15:05 ERROR c.s.s.service.MarketService - getProductsInfo: There is no store with id 2147483647.
2024-06-05 17:15:05 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-05 17:15:05 ERROR c.s.s.service.MarketService - Change quantity in cart failed for guestId: 2, storeId: 0, productId: 0, amount: 2. Error: Amount doesn't exist in store
2024-06-05 17:15:05 ERROR c.s.s.service.MarketService - Add product to cart failed for guestId: 2, storeId: 0, productId: 2147483647, amount: 3. Error: Amount doesn't exist in store
2024-06-05 17:15:06 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-05 17:15:06 ERROR c.s.s.service.MarketService - getStoreInfo: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-05 17:15:06 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Credit card invalid
2024-06-05 17:15:07 ERROR c.s.s.domain.auth.AuthFacade - user doesnt exist
2024-06-05 17:15:07 ERROR c.s.s.service.MarketService - error in login: password is incorrect
2024-06-05 17:15:07 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: You can not buy 5 of product 0 - there are only 4 in stock.


2024-06-05 17:15:07 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-05 17:15:08 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-05 17:15:08 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-05 17:15:57 ERROR c.s.s.service.MarketService - createStore: jwt isnt valid
2024-06-05 17:15:58 ERROR c.s.sadnamarket.domain.users.Member - Exception in logout: user isn't logged in
2024-06-05 17:15:58 ERROR c.s.s.service.MarketService - error in logout: user isn't logged in
2024-06-05 17:15:58 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=username that isn't very real does not exist
2024-06-05 17:15:58 ERROR c.s.s.service.MarketService - error in logout: User with username username that isn't very real does not exist
2024-06-05 17:15:58 ERROR c.s.s.service.MarketService - Purchase cart failed for username: Billy. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 17:15:59 ERROR c.s.s.service.MarketService - Purchase cart failed for username: Billy. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 17:16:00 ERROR c.s.s.service.MarketService - Purchase cart failed for username: Billy. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 17:16:00 ERROR c.s.s.service.MarketService - getStoreOrderHistory: There is no store with id 2147483647.
2024-06-05 17:16:01 ERROR c.s.s.service.MarketService - Purchase cart failed for username: Billy. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 17:16:01 ERROR c.s.s.domain.users.MemoryRepo - Exception in getMember: User with userName=Username that nobody has does not exist
2024-06-05 17:16:01 ERROR c.s.s.service.MarketService - Get order DTO history failed for username: Username that nobody has. Error: User with userName Username that nobody has does not exist
2024-06-05 17:16:01 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=Eric does not exist
2024-06-05 17:16:01 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: User with username Eric does not exist
2024-06-05 17:16:02 ERROR c.s.s.service.MarketService - closeStore: There is no store with id 2147483647.
2024-06-05 17:16:02 ERROR c.s.s.service.MarketService - getOwners: There is no store with id 2147483647.
2024-06-05 17:16:02 ERROR c.s.s.service.MarketService - getManagers: There is no store with id 2147483647.
2024-06-05 17:16:03 ERROR c.s.s.service.MarketService - deleteProductFromStore: user Mallory can not delete a product from store with id 0.
2024-06-05 17:16:03 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: jwt isnt valid
2024-06-05 17:16:04 ERROR c.s.s.domain.products.ProductFacade - Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
2024-06-05 17:16:04 ERROR c.s.s.domain.products.ProductFacade - Error adding product: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
java.lang.IllegalArgumentException: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
	at com.sadna.sadnamarket.domain.products.ProductFacade.checkProductAttributes(ProductFacade.java:305)
	at com.sadna.sadnamarket.domain.products.ProductFacade.addProduct(ProductFacade.java:42)
	at com.sadna.sadnamarket.domain.stores.StoreFacade.addProductToStore(StoreFacade.java:95)
	at com.sadna.sadnamarket.service.MarketService.addProductToStore(MarketService.java:106)
	at com.sadna.sadnamarket.service.MarketServiceTestAdapter.addProductToStore(MarketServiceTestAdapter.java:157)
	at com.sadna.sadnamarket.StoreOwnerTests.addProductBadInfoTest(StoreOwnerTests.java:86)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)
2024-06-05 17:16:04 ERROR c.s.s.service.MarketService - addProductToStore: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
2024-06-05 17:16:04 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 3. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 17:16:04 ERROR c.s.s.service.MarketService - getStoreOrderHistory: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-05 17:16:05 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: jwt isnt valid
2024-06-05 17:16:05 ERROR c.s.s.service.MarketService - closeStore: User Mallory can not close the store with id 0 (not a founder).
2024-06-05 17:16:45 ERROR c.s.s.service.MarketService - createStore: jwt isnt valid
2024-06-05 17:16:46 ERROR c.s.sadnamarket.domain.users.Member - Exception in logout: user isn't logged in
2024-06-05 17:16:46 ERROR c.s.s.service.MarketService - error in logout: user isn't logged in
2024-06-05 17:17:09 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=username that isn't very real does not exist
2024-06-05 17:17:09 ERROR c.s.s.service.MarketService - error in logout: User with username username that isn't very real does not exist
2024-06-05 17:17:33 ERROR c.s.s.service.MarketService - Purchase cart failed for username: Billy. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 17:17:59 ERROR c.s.s.service.MarketService - Purchase cart failed for username: Billy. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 17:18:34 ERROR c.s.s.service.MarketService - Purchase cart failed for username: Billy. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 17:18:34 ERROR c.s.s.service.MarketService - getStoreOrderHistory: There is no store with id 2147483647.
2024-06-05 17:18:44 ERROR c.s.s.service.MarketService - Purchase cart failed for username: Billy. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 17:18:44 ERROR c.s.s.domain.users.MemoryRepo - Exception in getMember: User with userName=Username that nobody has does not exist
2024-06-05 17:18:44 ERROR c.s.s.service.MarketService - Get order DTO history failed for username: Username that nobody has. Error: User with userName Username that nobody has does not exist
2024-06-05 17:18:50 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=Eric does not exist
2024-06-05 17:18:50 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: User with username Eric does not exist
2024-06-05 17:19:01 ERROR c.s.s.service.MarketService - closeStore: There is no store with id 2147483647.
2024-06-05 17:19:06 ERROR c.s.s.service.MarketService - getOwners: There is no store with id 2147483647.
2024-06-05 17:19:06 ERROR c.s.s.service.MarketService - getManagers: There is no store with id 2147483647.
2024-06-05 17:19:06 ERROR c.s.s.service.MarketService - deleteProductFromStore: user Mallory can not delete a product from store with id 0.
2024-06-05 17:19:06 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: jwt isnt valid
2024-06-05 17:19:07 ERROR c.s.s.domain.products.ProductFacade - Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
2024-06-05 17:19:07 ERROR c.s.s.domain.products.ProductFacade - Error adding product: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
java.lang.IllegalArgumentException: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
	at com.sadna.sadnamarket.domain.products.ProductFacade.checkProductAttributes(ProductFacade.java:305)
	at com.sadna.sadnamarket.domain.products.ProductFacade.addProduct(ProductFacade.java:42)
	at com.sadna.sadnamarket.domain.stores.StoreFacade.addProductToStore(StoreFacade.java:95)
	at com.sadna.sadnamarket.service.MarketService.addProductToStore(MarketService.java:106)
	at com.sadna.sadnamarket.service.MarketServiceTestAdapter.addProductToStore(MarketServiceTestAdapter.java:157)
	at com.sadna.sadnamarket.StoreOwnerTests.addProductBadInfoTest(StoreOwnerTests.java:86)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)
2024-06-05 17:19:07 ERROR c.s.s.service.MarketService - addProductToStore: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
2024-06-05 17:19:07 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 3. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 17:19:07 ERROR c.s.s.service.MarketService - getStoreOrderHistory: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-05 17:19:37 ERROR c.s.s.service.MarketService - createStore: jwt isnt valid
2024-06-05 17:19:37 ERROR c.s.sadnamarket.domain.users.Member - Exception in logout: user isn't logged in
2024-06-05 17:19:37 ERROR c.s.s.service.MarketService - error in logout: user isn't logged in
2024-06-05 17:19:38 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=username that isn't very real does not exist
2024-06-05 17:19:38 ERROR c.s.s.service.MarketService - error in logout: User with username username that isn't very real does not exist
2024-06-05 17:19:38 ERROR c.s.s.service.MarketService - Purchase cart failed for username: Billy. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 17:19:39 ERROR c.s.s.service.MarketService - Purchase cart failed for username: Billy. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 17:19:40 ERROR c.s.s.service.MarketService - Purchase cart failed for username: Billy. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 17:19:40 ERROR c.s.s.service.MarketService - getStoreOrderHistory: There is no store with id 2147483647.
2024-06-05 17:19:40 ERROR c.s.s.service.MarketService - Purchase cart failed for username: Billy. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 17:19:41 ERROR c.s.s.domain.users.MemoryRepo - Exception in getMember: User with userName=Username that nobody has does not exist
2024-06-05 17:19:41 ERROR c.s.s.service.MarketService - Get order DTO history failed for username: Username that nobody has. Error: User with userName Username that nobody has does not exist
2024-06-05 17:19:41 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=Eric does not exist
2024-06-05 17:19:41 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: User with username Eric does not exist
2024-06-05 17:20:17 ERROR c.s.s.service.MarketService - createStore: jwt isnt valid
2024-06-05 17:20:18 ERROR c.s.sadnamarket.domain.users.Member - Exception in logout: user isn't logged in
2024-06-05 17:20:18 ERROR c.s.s.service.MarketService - error in logout: user isn't logged in
2024-06-05 17:20:18 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=username that isn't very real does not exist
2024-06-05 17:20:18 ERROR c.s.s.service.MarketService - error in logout: User with username username that isn't very real does not exist
2024-06-05 17:20:20 ERROR c.s.s.service.MarketService - getStoreOrderHistory: There is no store with id 2147483647.
2024-06-05 17:20:21 ERROR c.s.s.domain.users.MemoryRepo - Exception in getMember: User with userName=Username that nobody has does not exist
2024-06-05 17:20:21 ERROR c.s.s.service.MarketService - Get order DTO history failed for username: Username that nobody has. Error: User with userName Username that nobody has does not exist
2024-06-05 17:20:21 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=Eric does not exist
2024-06-05 17:20:21 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: User with username Eric does not exist
2024-06-05 17:20:22 ERROR c.s.s.service.MarketService - closeStore: There is no store with id 2147483647.
2024-06-05 17:20:22 ERROR c.s.s.service.MarketService - getOwners: There is no store with id 2147483647.
2024-06-05 17:20:22 ERROR c.s.s.service.MarketService - getManagers: There is no store with id 2147483647.
2024-06-05 17:20:23 ERROR c.s.s.service.MarketService - deleteProductFromStore: user Mallory can not delete a product from store with id 0.
2024-06-05 17:20:23 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: jwt isnt valid
2024-06-05 17:20:24 ERROR c.s.s.domain.products.ProductFacade - Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
2024-06-05 17:20:24 ERROR c.s.s.domain.products.ProductFacade - Error adding product: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
java.lang.IllegalArgumentException: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
	at com.sadna.sadnamarket.domain.products.ProductFacade.checkProductAttributes(ProductFacade.java:305)
	at com.sadna.sadnamarket.domain.products.ProductFacade.addProduct(ProductFacade.java:42)
	at com.sadna.sadnamarket.domain.stores.StoreFacade.addProductToStore(StoreFacade.java:95)
	at com.sadna.sadnamarket.service.MarketService.addProductToStore(MarketService.java:106)
	at com.sadna.sadnamarket.service.MarketServiceTestAdapter.addProductToStore(MarketServiceTestAdapter.java:157)
	at com.sadna.sadnamarket.StoreOwnerTests.addProductBadInfoTest(StoreOwnerTests.java:86)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)
2024-06-05 17:20:24 ERROR c.s.s.service.MarketService - addProductToStore: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
2024-06-05 17:20:24 ERROR c.s.s.service.MarketService - getStoreOrderHistory: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-05 17:20:24 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: jwt isnt valid
2024-06-05 17:20:25 ERROR c.s.s.service.MarketService - closeStore: User Mallory can not close the store with id 0 (not a founder).
2024-06-05 17:20:26 ERROR c.s.sadnamarket.domain.users.Member - Exception in getRequest: member already has role in store
2024-06-05 17:20:26 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: member already has role in store
2024-06-05 17:20:26 ERROR c.s.s.service.MarketService - getOwners: There is no store with id 2147483647.
2024-06-05 17:20:26 ERROR c.s.s.service.MarketService - getManagers: There is no store with id 2147483647.
2024-06-05 17:20:27 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: User StoreOwnerMan can not add user Eric as an owner to store 0.
2024-06-05 17:20:27 ERROR c.s.s.service.MarketService - addManagerPermission: User StoreOwnerMan can not add user Eric as a manager to store 0.
2024-06-05 17:20:28 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: User StoreOwnerMan can not add user Eric as a manager to store 0.
2024-06-05 17:20:30 ERROR c.s.s.service.MarketService - getStoreOrderHistory: jwt isnt valid
2024-06-05 17:20:31 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: User Mallory can not add user Eric as a manager to store 0.
2024-06-05 17:20:31 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-05 17:20:31 ERROR c.s.s.service.MarketService - getStoreInfo: The product with id 0 doesn't exist.
2024-06-05 17:20:32 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: User Mallory can not add user Eric as an owner to store 0.
2024-06-05 17:20:32 ERROR c.s.s.service.MarketService - updateProductInStore: A store with id 0 does not have a product with id 2147483647.
2024-06-05 17:20:33 ERROR c.s.s.service.MarketService - deleteProductFromStore: A product with id 2147483647 does not exist.
2024-06-05 17:20:33 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=Eric does not exist
2024-06-05 17:20:33 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: User with username Eric does not exist
2024-06-05 17:20:34 ERROR c.s.s.service.MarketService - updateProductInStore: A store with id 0 does not have a product with id 0.
2024-06-05 17:20:35 ERROR c.s.s.service.MarketService - addManagerPermission: User Mallory can not add user Eric as a manager to store 0.
2024-06-05 17:20:36 ERROR c.s.s.domain.products.ProductFacade - Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
2024-06-05 17:20:36 ERROR c.s.s.domain.products.ProductFacade - Error updating product: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
java.lang.IllegalArgumentException: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
	at com.sadna.sadnamarket.domain.products.ProductFacade.checkProductAttributes(ProductFacade.java:305)
	at com.sadna.sadnamarket.domain.products.ProductFacade.updateProduct(ProductFacade.java:91)
	at com.sadna.sadnamarket.domain.stores.StoreFacade.updateProduct(StoreFacade.java:125)
	at com.sadna.sadnamarket.service.MarketService.updateProductInStore(MarketService.java:145)
	at com.sadna.sadnamarket.service.MarketServiceTestAdapter.editStoreProduct(MarketServiceTestAdapter.java:169)
	at com.sadna.sadnamarket.StoreOwnerTests.editProductBadInfoTest(StoreOwnerTests.java:122)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)
2024-06-05 17:20:36 ERROR c.s.s.service.MarketService - updateProductInStore: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
2024-06-05 17:20:37 ERROR c.s.s.service.MarketService - deleteProductFromStore: A product with id 0 does not exist.
2024-06-05 17:20:38 ERROR c.s.s.service.MarketService - updateProductInStore: user Mallory can not update a product in store with id 0.
2024-06-05 17:20:39 ERROR c.s.s.service.MarketService - addProductToStore: user Mallory can not add a product to store with id 0.
2024-06-05 17:20:39 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 999 does not exist.
2024-06-05 17:20:39 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-05 17:20:39 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 999 does not exist.
2024-06-05 17:20:39 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 4. Error: You can not buy 1 of product 0 - there are only 0 in stock.


2024-06-05 17:20:40 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-05 17:20:40 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-05 17:20:41 ERROR c.s.s.service.MarketService - Change quantity in cart failed for guestId: 2, storeId: 0, productId: 0, amount: 3. Error: Amount doesn't exist in store
2024-06-05 17:20:42 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Missing card details
2024-06-05 17:20:42 ERROR c.s.s.service.MarketService - Add product to cart failed for guestId: 2, storeId: 0, productId: 0, amount: 3. Error: Amount doesn't exist in store
2024-06-05 17:20:42 ERROR c.s.s.service.MarketService - getStoreInfo: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-05 17:20:42 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Order cannot be supplied
2024-06-05 17:20:43 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-05 17:20:43 ERROR c.s.s.service.MarketService - getStoreInfo: There is no store with id 2147483647.
2024-06-05 17:20:43 ERROR c.s.s.domain.users.UserFacade - user JohnDoe already logged in
2024-06-05 17:20:43 ERROR c.s.s.service.MarketService - error in login: user already logged in
2024-06-05 17:20:43 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasGuest: Guest with guestID=1 does not exist
2024-06-05 17:20:43 ERROR c.s.s.service.MarketService - error in exitGuest: Guest with guestID 1 does not exist
2024-06-05 17:20:43 ERROR c.s.s.service.MarketService - getProductsInfo: No products found
2024-06-05 17:20:44 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-05 17:20:44 ERROR c.s.s.service.MarketService - getProductsInfo: There is no store with id 2147483647.
2024-06-05 17:20:44 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-05 17:20:44 ERROR c.s.s.service.MarketService - Change quantity in cart failed for guestId: 2, storeId: 0, productId: 0, amount: 2. Error: Amount doesn't exist in store
2024-06-05 17:20:44 ERROR c.s.s.service.MarketService - Add product to cart failed for guestId: 2, storeId: 0, productId: 2147483647, amount: 3. Error: Amount doesn't exist in store
2024-06-05 17:20:45 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-05 17:20:45 ERROR c.s.s.service.MarketService - getStoreInfo: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-05 17:20:45 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Credit card invalid
2024-06-05 17:20:46 ERROR c.s.s.domain.auth.AuthFacade - user doesnt exist
2024-06-05 17:20:46 ERROR c.s.s.service.MarketService - error in login: password is incorrect
2024-06-05 17:20:46 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: You can not buy 5 of product 0 - there are only 4 in stock.


2024-06-05 17:20:46 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-05 17:20:46 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-05 17:20:46 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-05 17:21:29 ERROR c.s.s.service.MarketService - createStore: jwt isnt valid
2024-06-05 17:21:29 ERROR c.s.sadnamarket.domain.users.Member - Exception in logout: user isn't logged in
2024-06-05 17:21:29 ERROR c.s.s.service.MarketService - error in logout: user isn't logged in
2024-06-05 17:21:29 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=username that isn't very real does not exist
2024-06-05 17:21:29 ERROR c.s.s.service.MarketService - error in logout: User with username username that isn't very real does not exist
2024-06-05 17:21:30 ERROR c.s.s.service.MarketService - Purchase cart failed for username: Billy. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 17:21:31 ERROR c.s.s.service.MarketService - Purchase cart failed for username: Billy. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 17:21:31 ERROR c.s.s.service.MarketService - Purchase cart failed for username: Billy. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 17:21:32 ERROR c.s.s.service.MarketService - getStoreOrderHistory: There is no store with id 2147483647.
2024-06-05 17:21:32 ERROR c.s.s.service.MarketService - Purchase cart failed for username: Billy. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 17:21:32 ERROR c.s.s.domain.users.MemoryRepo - Exception in getMember: User with userName=Username that nobody has does not exist
2024-06-05 17:21:32 ERROR c.s.s.service.MarketService - Get order DTO history failed for username: Username that nobody has. Error: User with userName Username that nobody has does not exist
2024-06-05 17:21:33 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=Eric does not exist
2024-06-05 17:21:33 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: User with username Eric does not exist
2024-06-05 17:21:33 ERROR c.s.s.service.MarketService - closeStore: There is no store with id 2147483647.
2024-06-05 17:21:34 ERROR c.s.s.service.MarketService - getOwners: There is no store with id 2147483647.
2024-06-05 17:21:34 ERROR c.s.s.service.MarketService - getManagers: There is no store with id 2147483647.
2024-06-05 17:21:34 ERROR c.s.s.service.MarketService - deleteProductFromStore: user Mallory can not delete a product from store with id 0.
2024-06-05 17:21:35 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: jwt isnt valid
2024-06-05 17:21:35 ERROR c.s.s.domain.products.ProductFacade - Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
2024-06-05 17:21:35 ERROR c.s.s.domain.products.ProductFacade - Error adding product: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
java.lang.IllegalArgumentException: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
	at com.sadna.sadnamarket.domain.products.ProductFacade.checkProductAttributes(ProductFacade.java:305)
	at com.sadna.sadnamarket.domain.products.ProductFacade.addProduct(ProductFacade.java:42)
	at com.sadna.sadnamarket.domain.stores.StoreFacade.addProductToStore(StoreFacade.java:95)
	at com.sadna.sadnamarket.service.MarketService.addProductToStore(MarketService.java:106)
	at com.sadna.sadnamarket.service.MarketServiceTestAdapter.addProductToStore(MarketServiceTestAdapter.java:157)
	at com.sadna.sadnamarket.StoreOwnerTests.addProductBadInfoTest(StoreOwnerTests.java:86)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)
2024-06-05 17:21:35 ERROR c.s.s.service.MarketService - addProductToStore: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
2024-06-05 17:21:35 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 3. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 17:21:35 ERROR c.s.s.service.MarketService - getStoreOrderHistory: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-05 17:21:36 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: jwt isnt valid
2024-06-05 17:21:36 ERROR c.s.s.service.MarketService - closeStore: User Mallory can not close the store with id 0 (not a founder).
2024-06-05 17:21:37 ERROR c.s.sadnamarket.domain.users.Member - Exception in getRequest: member already has role in store
2024-06-05 17:21:37 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: member already has role in store
2024-06-05 17:21:38 ERROR c.s.s.service.MarketService - getOwners: There is no store with id 2147483647.
2024-06-05 17:21:38 ERROR c.s.s.service.MarketService - getManagers: There is no store with id 2147483647.
2024-06-05 17:21:38 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: User StoreOwnerMan can not add user Eric as an owner to store 0.
2024-06-05 17:21:39 ERROR c.s.s.service.MarketService - addManagerPermission: User StoreOwnerMan can not add user Eric as a manager to store 0.
2024-06-05 17:21:39 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: User StoreOwnerMan can not add user Eric as a manager to store 0.
2024-06-05 17:21:40 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 3. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 17:21:41 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 3. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 17:21:41 ERROR c.s.s.service.MarketService - getStoreOrderHistory: jwt isnt valid
2024-06-05 17:21:42 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: User Mallory can not add user Eric as a manager to store 0.
2024-06-05 17:21:42 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-05 17:21:42 ERROR c.s.s.service.MarketService - getStoreInfo: The product with id 0 doesn't exist.
2024-06-05 17:21:44 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: User Mallory can not add user Eric as an owner to store 0.
2024-06-05 17:21:44 ERROR c.s.s.service.MarketService - updateProductInStore: A store with id 0 does not have a product with id 2147483647.
2024-06-05 17:21:44 ERROR c.s.s.service.MarketService - deleteProductFromStore: A product with id 2147483647 does not exist.
2024-06-05 17:21:45 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=Eric does not exist
2024-06-05 17:21:45 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: User with username Eric does not exist
2024-06-05 17:21:46 ERROR c.s.s.service.MarketService - updateProductInStore: A store with id 0 does not have a product with id 0.
2024-06-05 17:21:46 ERROR c.s.s.service.MarketService - addManagerPermission: User Mallory can not add user Eric as a manager to store 0.
2024-06-05 17:21:47 ERROR c.s.s.domain.products.ProductFacade - Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
2024-06-05 17:21:47 ERROR c.s.s.domain.products.ProductFacade - Error updating product: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
java.lang.IllegalArgumentException: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
	at com.sadna.sadnamarket.domain.products.ProductFacade.checkProductAttributes(ProductFacade.java:305)
	at com.sadna.sadnamarket.domain.products.ProductFacade.updateProduct(ProductFacade.java:91)
	at com.sadna.sadnamarket.domain.stores.StoreFacade.updateProduct(StoreFacade.java:125)
	at com.sadna.sadnamarket.service.MarketService.updateProductInStore(MarketService.java:145)
	at com.sadna.sadnamarket.service.MarketServiceTestAdapter.editStoreProduct(MarketServiceTestAdapter.java:169)
	at com.sadna.sadnamarket.StoreOwnerTests.editProductBadInfoTest(StoreOwnerTests.java:122)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)
2024-06-05 17:21:47 ERROR c.s.s.service.MarketService - updateProductInStore: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
2024-06-05 17:21:48 ERROR c.s.s.service.MarketService - deleteProductFromStore: A product with id 0 does not exist.
2024-06-05 17:21:50 ERROR c.s.s.service.MarketService - updateProductInStore: user Mallory can not update a product in store with id 0.
2024-06-05 17:21:51 ERROR c.s.s.service.MarketService - addProductToStore: user Mallory can not add a product to store with id 0.
2024-06-05 17:21:51 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 999 does not exist.
2024-06-05 17:21:51 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-05 17:21:51 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 999 does not exist.
2024-06-05 17:21:52 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 3. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 17:21:52 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 4. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 17:21:54 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 3. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 17:21:54 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-05 17:21:55 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-05 17:21:56 ERROR c.s.s.service.MarketService - Change quantity in cart failed for guestId: 2, storeId: 0, productId: 0, amount: 3. Error: Amount doesn't exist in store
2024-06-05 17:21:58 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Missing card details
2024-06-05 17:21:58 ERROR c.s.s.service.MarketService - Add product to cart failed for guestId: 2, storeId: 0, productId: 0, amount: 3. Error: Amount doesn't exist in store
2024-06-05 17:21:58 ERROR c.s.s.service.MarketService - getStoreInfo: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-05 17:21:58 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 17:21:59 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-05 17:21:59 ERROR c.s.s.service.MarketService - getStoreInfo: There is no store with id 2147483647.
2024-06-05 17:21:59 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 17:21:59 ERROR c.s.s.domain.users.UserFacade - user JohnDoe already logged in
2024-06-05 17:21:59 ERROR c.s.s.service.MarketService - error in login: user already logged in
2024-06-05 17:21:59 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasGuest: Guest with guestID=1 does not exist
2024-06-05 17:21:59 ERROR c.s.s.service.MarketService - error in exitGuest: Guest with guestID 1 does not exist
2024-06-05 17:21:59 ERROR c.s.s.service.MarketService - getProductsInfo: No products found
2024-06-05 17:22:00 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-05 17:22:00 ERROR c.s.s.service.MarketService - getProductsInfo: There is no store with id 2147483647.
2024-06-05 17:22:00 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-05 17:22:00 ERROR c.s.s.service.MarketService - Change quantity in cart failed for guestId: 2, storeId: 0, productId: 0, amount: 2. Error: Amount doesn't exist in store
2024-06-05 17:22:01 ERROR c.s.s.service.MarketService - Add product to cart failed for guestId: 2, storeId: 0, productId: 2147483647, amount: 3. Error: Amount doesn't exist in store
2024-06-05 17:22:01 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-05 17:22:01 ERROR c.s.s.service.MarketService - getStoreInfo: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-05 17:22:02 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 17:22:02 ERROR c.s.s.domain.auth.AuthFacade - user doesnt exist
2024-06-05 17:22:02 ERROR c.s.s.service.MarketService - error in login: password is incorrect
2024-06-05 17:22:03 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 17:22:03 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-05 17:22:03 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-05 17:22:03 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-05 17:28:13 ERROR c.s.s.service.MarketService - createStore: jwt isnt valid
2024-06-05 17:28:14 ERROR c.s.sadnamarket.domain.users.Member - Exception in logout: user isn't logged in
2024-06-05 17:28:14 ERROR c.s.s.service.MarketService - error in logout: user isn't logged in
2024-06-05 17:28:47 ERROR c.s.s.service.MarketService - createStore: jwt isnt valid
2024-06-05 17:28:47 ERROR c.s.sadnamarket.domain.users.Member - Exception in logout: user isn't logged in
2024-06-05 17:28:47 ERROR c.s.s.service.MarketService - error in logout: user isn't logged in
2024-06-05 17:28:48 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=username that isn't very real does not exist
2024-06-05 17:28:48 ERROR c.s.s.service.MarketService - error in logout: User with username username that isn't very real does not exist
2024-06-05 17:28:48 ERROR c.s.s.service.MarketService - Purchase cart failed for username: Billy. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 17:28:49 ERROR c.s.s.service.MarketService - Purchase cart failed for username: Billy. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 17:28:50 ERROR c.s.s.service.MarketService - Purchase cart failed for username: Billy. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 17:28:50 ERROR c.s.s.service.MarketService - getStoreOrderHistory: There is no store with id 2147483647.
2024-06-05 17:28:50 ERROR c.s.s.service.MarketService - Purchase cart failed for username: Billy. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 17:28:51 ERROR c.s.s.domain.users.MemoryRepo - Exception in getMember: User with userName=Username that nobody has does not exist
2024-06-05 17:28:51 ERROR c.s.s.service.MarketService - Get order DTO history failed for username: Username that nobody has. Error: User with userName Username that nobody has does not exist
2024-06-05 17:28:51 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=Eric does not exist
2024-06-05 17:28:51 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: User with username Eric does not exist
2024-06-05 17:28:52 ERROR c.s.s.service.MarketService - closeStore: There is no store with id 2147483647.
2024-06-05 17:28:52 ERROR c.s.s.service.MarketService - getOwners: There is no store with id 2147483647.
2024-06-05 17:28:52 ERROR c.s.s.service.MarketService - getManagers: There is no store with id 2147483647.
2024-06-05 17:28:53 ERROR c.s.s.service.MarketService - deleteProductFromStore: user Mallory can not delete a product from store with id 0.
2024-06-05 17:28:53 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: jwt isnt valid
2024-06-05 17:28:53 ERROR c.s.s.domain.products.ProductFacade - Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
2024-06-05 17:28:53 ERROR c.s.s.domain.products.ProductFacade - Error adding product: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
java.lang.IllegalArgumentException: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
	at com.sadna.sadnamarket.domain.products.ProductFacade.checkProductAttributes(ProductFacade.java:305)
	at com.sadna.sadnamarket.domain.products.ProductFacade.addProduct(ProductFacade.java:42)
	at com.sadna.sadnamarket.domain.stores.StoreFacade.addProductToStore(StoreFacade.java:95)
	at com.sadna.sadnamarket.service.MarketService.addProductToStore(MarketService.java:106)
	at com.sadna.sadnamarket.service.MarketServiceTestAdapter.addProductToStore(MarketServiceTestAdapter.java:157)
	at com.sadna.sadnamarket.StoreOwnerTests.addProductBadInfoTest(StoreOwnerTests.java:86)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)
2024-06-05 17:28:53 ERROR c.s.s.service.MarketService - addProductToStore: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
2024-06-05 17:28:54 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 3. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 17:28:54 ERROR c.s.s.service.MarketService - getStoreOrderHistory: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-05 17:28:54 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: jwt isnt valid
2024-06-05 17:28:55 ERROR c.s.s.service.MarketService - closeStore: User Mallory can not close the store with id 0 (not a founder).
2024-06-05 17:28:56 ERROR c.s.sadnamarket.domain.users.Member - Exception in getRequest: member already has role in store
2024-06-05 17:28:56 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: member already has role in store
2024-06-05 17:28:56 ERROR c.s.s.service.MarketService - getOwners: There is no store with id 2147483647.
2024-06-05 17:28:56 ERROR c.s.s.service.MarketService - getManagers: There is no store with id 2147483647.
2024-06-05 17:28:57 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: User StoreOwnerMan can not add user Eric as an owner to store 0.
2024-06-05 17:28:57 ERROR c.s.s.service.MarketService - addManagerPermission: User StoreOwnerMan can not add user Eric as a manager to store 0.
2024-06-05 17:28:58 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: User StoreOwnerMan can not add user Eric as a manager to store 0.
2024-06-05 17:28:58 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 3. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 17:29:00 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 3. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 17:29:00 ERROR c.s.s.service.MarketService - getStoreOrderHistory: jwt isnt valid
2024-06-05 17:29:01 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: User Mallory can not add user Eric as a manager to store 0.
2024-06-05 17:29:01 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-05 17:29:01 ERROR c.s.s.service.MarketService - getStoreInfo: The product with id 0 doesn't exist.
2024-06-05 17:29:02 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: User Mallory can not add user Eric as an owner to store 0.
2024-06-05 17:29:03 ERROR c.s.s.service.MarketService - updateProductInStore: A store with id 0 does not have a product with id 2147483647.
2024-06-05 17:29:03 ERROR c.s.s.service.MarketService - deleteProductFromStore: A product with id 2147483647 does not exist.
2024-06-05 17:29:03 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=Eric does not exist
2024-06-05 17:29:03 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: User with username Eric does not exist
2024-06-05 17:29:04 ERROR c.s.s.service.MarketService - updateProductInStore: A store with id 0 does not have a product with id 0.
2024-06-05 17:29:05 ERROR c.s.s.service.MarketService - addManagerPermission: User Mallory can not add user Eric as a manager to store 0.
2024-06-05 17:29:06 ERROR c.s.s.domain.products.ProductFacade - Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
2024-06-05 17:29:06 ERROR c.s.s.domain.products.ProductFacade - Error updating product: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
java.lang.IllegalArgumentException: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
	at com.sadna.sadnamarket.domain.products.ProductFacade.checkProductAttributes(ProductFacade.java:305)
	at com.sadna.sadnamarket.domain.products.ProductFacade.updateProduct(ProductFacade.java:91)
	at com.sadna.sadnamarket.domain.stores.StoreFacade.updateProduct(StoreFacade.java:125)
	at com.sadna.sadnamarket.service.MarketService.updateProductInStore(MarketService.java:145)
	at com.sadna.sadnamarket.service.MarketServiceTestAdapter.editStoreProduct(MarketServiceTestAdapter.java:169)
	at com.sadna.sadnamarket.StoreOwnerTests.editProductBadInfoTest(StoreOwnerTests.java:122)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)
2024-06-05 17:29:06 ERROR c.s.s.service.MarketService - updateProductInStore: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
2024-06-05 17:29:07 ERROR c.s.s.service.MarketService - deleteProductFromStore: A product with id 0 does not exist.
2024-06-05 17:29:08 ERROR c.s.s.service.MarketService - updateProductInStore: user Mallory can not update a product in store with id 0.
2024-06-05 17:29:09 ERROR c.s.s.service.MarketService - addProductToStore: user Mallory can not add a product to store with id 0.
2024-06-05 17:29:09 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 999 does not exist.
2024-06-05 17:29:09 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-05 17:29:09 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 999 does not exist.
2024-06-05 17:29:09 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 3. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 17:29:09 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 4. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 17:29:10 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 3. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 17:29:10 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-05 17:29:11 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-05 17:29:11 ERROR c.s.s.service.MarketService - Change quantity in cart failed for guestId: 2, storeId: 0, productId: 0, amount: 3. Error: Amount doesn't exist in store
2024-06-05 17:29:12 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Missing card details
2024-06-05 17:29:12 ERROR c.s.s.service.MarketService - Add product to cart failed for guestId: 2, storeId: 0, productId: 0, amount: 3. Error: Amount doesn't exist in store
2024-06-05 17:29:12 ERROR c.s.s.service.MarketService - getStoreInfo: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-05 17:29:13 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 17:29:13 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-05 17:29:13 ERROR c.s.s.service.MarketService - getStoreInfo: There is no store with id 2147483647.
2024-06-05 17:29:13 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 17:29:14 ERROR c.s.s.domain.users.UserFacade - user JohnDoe already logged in
2024-06-05 17:29:14 ERROR c.s.s.service.MarketService - error in login: user already logged in
2024-06-05 17:29:14 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasGuest: Guest with guestID=1 does not exist
2024-06-05 17:29:14 ERROR c.s.s.service.MarketService - error in exitGuest: Guest with guestID 1 does not exist
2024-06-05 17:29:14 ERROR c.s.s.service.MarketService - getProductsInfo: No products found
2024-06-05 17:29:14 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-05 17:29:14 ERROR c.s.s.service.MarketService - getProductsInfo: There is no store with id 2147483647.
2024-06-05 17:29:15 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-05 17:29:15 ERROR c.s.s.service.MarketService - Change quantity in cart failed for guestId: 2, storeId: 0, productId: 0, amount: 2. Error: Amount doesn't exist in store
2024-06-05 17:29:15 ERROR c.s.s.service.MarketService - Add product to cart failed for guestId: 2, storeId: 0, productId: 2147483647, amount: 3. Error: Amount doesn't exist in store
2024-06-05 17:29:15 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-05 17:29:15 ERROR c.s.s.service.MarketService - getStoreInfo: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-05 17:29:16 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 17:29:16 ERROR c.s.s.domain.auth.AuthFacade - user doesnt exist
2024-06-05 17:29:16 ERROR c.s.s.service.MarketService - error in login: password is incorrect
2024-06-05 17:29:17 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 17:29:17 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-05 17:29:17 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-05 17:29:17 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-05 17:32:26 ERROR c.s.s.service.MarketService - Purchase cart failed for username: Billy. Error: Cannot invoke "com.sadna.sadnamarket.domain.buyPolicies.BuyPolicyManager.canBuy(java.util.List, java.util.Map, com.sadna.sadnamarket.domain.users.MemberDTO)" because "buyPolicyManager" is null
2024-06-05 17:38:06 ERROR c.s.s.service.MarketService - createStore: jwt isnt valid
2024-06-05 17:38:07 ERROR c.s.sadnamarket.domain.users.Member - Exception in logout: user isn't logged in
2024-06-05 17:38:07 ERROR c.s.s.service.MarketService - error in logout: user isn't logged in
2024-06-05 17:38:08 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=username that isn't very real does not exist
2024-06-05 17:38:08 ERROR c.s.s.service.MarketService - error in logout: User with username username that isn't very real does not exist
2024-06-05 17:38:13 ERROR c.s.s.service.MarketService - getStoreOrderHistory: There is no store with id 2147483647.
2024-06-05 17:38:15 ERROR c.s.s.domain.users.MemoryRepo - Exception in getMember: User with userName=Username that nobody has does not exist
2024-06-05 17:38:15 ERROR c.s.s.service.MarketService - Get order DTO history failed for username: Username that nobody has. Error: User with userName Username that nobody has does not exist
2024-06-05 17:38:16 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=Eric does not exist
2024-06-05 17:38:16 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: User with username Eric does not exist
2024-06-05 17:38:17 ERROR c.s.s.service.MarketService - closeStore: There is no store with id 2147483647.
2024-06-05 17:38:18 ERROR c.s.s.service.MarketService - getOwners: There is no store with id 2147483647.
2024-06-05 17:38:18 ERROR c.s.s.service.MarketService - getManagers: There is no store with id 2147483647.
2024-06-05 17:38:19 ERROR c.s.s.service.MarketService - deleteProductFromStore: user Mallory can not delete a product from store with id 0.
2024-06-05 17:38:20 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: jwt isnt valid
2024-06-05 17:38:21 ERROR c.s.s.domain.products.ProductFacade - Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
2024-06-05 17:38:21 ERROR c.s.s.domain.products.ProductFacade - Error adding product: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
java.lang.IllegalArgumentException: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
	at com.sadna.sadnamarket.domain.products.ProductFacade.checkProductAttributes(ProductFacade.java:305)
	at com.sadna.sadnamarket.domain.products.ProductFacade.addProduct(ProductFacade.java:42)
	at com.sadna.sadnamarket.domain.stores.StoreFacade.addProductToStore(StoreFacade.java:97)
	at com.sadna.sadnamarket.service.MarketService.addProductToStore(MarketService.java:106)
	at com.sadna.sadnamarket.service.MarketServiceTestAdapter.addProductToStore(MarketServiceTestAdapter.java:157)
	at com.sadna.sadnamarket.StoreOwnerTests.addProductBadInfoTest(StoreOwnerTests.java:86)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)
2024-06-05 17:38:21 ERROR c.s.s.service.MarketService - addProductToStore: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
2024-06-05 17:38:22 ERROR c.s.s.service.MarketService - getStoreOrderHistory: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-05 17:38:23 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: jwt isnt valid
2024-06-05 17:38:24 ERROR c.s.s.service.MarketService - closeStore: User Mallory can not close the store with id 0 (not a founder).
2024-06-05 17:38:26 ERROR c.s.sadnamarket.domain.users.Member - Exception in getRequest: member already has role in store
2024-06-05 17:38:26 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: member already has role in store
2024-06-05 17:38:28 ERROR c.s.s.service.MarketService - getOwners: There is no store with id 2147483647.
2024-06-05 17:38:28 ERROR c.s.s.service.MarketService - getManagers: There is no store with id 2147483647.
2024-06-05 17:38:29 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: User StoreOwnerMan can not add user Eric as an owner to store 0.
2024-06-05 17:38:30 ERROR c.s.s.service.MarketService - addManagerPermission: User StoreOwnerMan can not add user Eric as a manager to store 0.
2024-06-05 17:38:32 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: User StoreOwnerMan can not add user Eric as a manager to store 0.
2024-06-05 17:38:37 ERROR c.s.s.service.MarketService - getStoreOrderHistory: jwt isnt valid
2024-06-05 17:38:38 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: User Mallory can not add user Eric as a manager to store 0.
2024-06-05 17:38:39 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-05 17:38:39 ERROR c.s.s.service.MarketService - getStoreInfo: The product with id 0 doesn't exist.
2024-06-05 17:38:41 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: User Mallory can not add user Eric as an owner to store 0.
2024-06-05 17:38:42 ERROR c.s.s.service.MarketService - updateProductInStore: A store with id 0 does not have a product with id 2147483647.
2024-06-05 17:38:43 ERROR c.s.s.service.MarketService - deleteProductFromStore: A product with id 2147483647 does not exist.
2024-06-05 17:38:44 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=Eric does not exist
2024-06-05 17:38:44 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: User with username Eric does not exist
2024-06-05 17:38:47 ERROR c.s.s.service.MarketService - updateProductInStore: A store with id 0 does not have a product with id 0.
2024-06-05 17:38:48 ERROR c.s.s.service.MarketService - addManagerPermission: User Mallory can not add user Eric as a manager to store 0.
2024-06-05 17:38:50 ERROR c.s.s.domain.products.ProductFacade - Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
2024-06-05 17:38:50 ERROR c.s.s.domain.products.ProductFacade - Error updating product: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
java.lang.IllegalArgumentException: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
	at com.sadna.sadnamarket.domain.products.ProductFacade.checkProductAttributes(ProductFacade.java:305)
	at com.sadna.sadnamarket.domain.products.ProductFacade.updateProduct(ProductFacade.java:91)
	at com.sadna.sadnamarket.domain.stores.StoreFacade.updateProduct(StoreFacade.java:127)
	at com.sadna.sadnamarket.service.MarketService.updateProductInStore(MarketService.java:145)
	at com.sadna.sadnamarket.service.MarketServiceTestAdapter.editStoreProduct(MarketServiceTestAdapter.java:169)
	at com.sadna.sadnamarket.StoreOwnerTests.editProductBadInfoTest(StoreOwnerTests.java:122)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)
2024-06-05 17:38:50 ERROR c.s.s.service.MarketService - updateProductInStore: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
2024-06-05 17:38:52 ERROR c.s.s.service.MarketService - deleteProductFromStore: A product with id 0 does not exist.
2024-06-05 17:38:56 ERROR c.s.s.service.MarketService - updateProductInStore: user Mallory can not update a product in store with id 0.
2024-06-05 17:38:57 ERROR c.s.s.service.MarketService - addProductToStore: user Mallory can not add a product to store with id 0.
2024-06-05 17:38:57 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 999 does not exist.
2024-06-05 17:38:57 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-05 17:38:57 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 999 does not exist.
2024-06-05 17:38:57 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 4. Error: You can not buy 1 of product 0 - there are only 0 in stock.


2024-06-05 17:38:58 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-05 17:38:59 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-05 17:38:59 ERROR c.s.s.service.MarketService - Change quantity in cart failed for guestId: 2, storeId: 0, productId: 0, amount: 3. Error: Amount doesn't exist in store
2024-06-05 17:39:00 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Missing card details
2024-06-05 17:39:00 ERROR c.s.s.service.MarketService - Add product to cart failed for guestId: 2, storeId: 0, productId: 0, amount: 3. Error: Amount doesn't exist in store
2024-06-05 17:39:00 ERROR c.s.s.service.MarketService - getStoreInfo: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-05 17:39:01 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Order cannot be supplied
2024-06-05 17:39:01 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-05 17:39:01 ERROR c.s.s.service.MarketService - getStoreInfo: There is no store with id 2147483647.
2024-06-05 17:39:02 ERROR c.s.s.domain.users.UserFacade - user JohnDoe already logged in
2024-06-05 17:39:02 ERROR c.s.s.service.MarketService - error in login: user already logged in
2024-06-05 17:39:02 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasGuest: Guest with guestID=1 does not exist
2024-06-05 17:39:02 ERROR c.s.s.service.MarketService - error in exitGuest: Guest with guestID 1 does not exist
2024-06-05 17:39:02 ERROR c.s.s.service.MarketService - getProductsInfo: No products found
2024-06-05 17:39:02 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-05 17:39:02 ERROR c.s.s.service.MarketService - getProductsInfo: There is no store with id 2147483647.
2024-06-05 17:39:02 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-05 17:39:02 ERROR c.s.s.service.MarketService - Change quantity in cart failed for guestId: 2, storeId: 0, productId: 0, amount: 2. Error: Amount doesn't exist in store
2024-06-05 17:39:03 ERROR c.s.s.service.MarketService - Add product to cart failed for guestId: 2, storeId: 0, productId: 2147483647, amount: 3. Error: Amount doesn't exist in store
2024-06-05 17:39:03 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-05 17:39:03 ERROR c.s.s.service.MarketService - getStoreInfo: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-05 17:39:04 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Credit card invalid
2024-06-05 17:39:04 ERROR c.s.s.domain.auth.AuthFacade - user doesnt exist
2024-06-05 17:39:04 ERROR c.s.s.service.MarketService - error in login: password is incorrect
2024-06-05 17:39:05 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: You can not buy 5 of product 0 - there are only 4 in stock.


2024-06-05 17:39:05 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-05 17:39:05 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-05 17:39:05 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-05 17:40:38 ERROR c.s.s.service.MarketService - createStore: jwt isnt valid
2024-06-05 17:40:39 ERROR c.s.sadnamarket.domain.users.Member - Exception in logout: user isn't logged in
2024-06-05 17:40:39 ERROR c.s.s.service.MarketService - error in logout: user isn't logged in
2024-06-05 17:40:39 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=username that isn't very real does not exist
2024-06-05 17:40:39 ERROR c.s.s.service.MarketService - error in logout: User with username username that isn't very real does not exist
2024-06-05 17:40:42 ERROR c.s.s.service.MarketService - getStoreOrderHistory: There is no store with id 2147483647.
2024-06-05 17:40:43 ERROR c.s.s.domain.users.MemoryRepo - Exception in getMember: User with userName=Username that nobody has does not exist
2024-06-05 17:40:43 ERROR c.s.s.service.MarketService - Get order DTO history failed for username: Username that nobody has. Error: User with userName Username that nobody has does not exist
2024-06-05 17:40:43 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=Eric does not exist
2024-06-05 17:40:43 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: User with username Eric does not exist
2024-06-05 17:40:43 ERROR c.s.s.service.MarketService - closeStore: There is no store with id 2147483647.
2024-06-05 17:40:44 ERROR c.s.s.service.MarketService - getOwners: There is no store with id 2147483647.
2024-06-05 17:40:44 ERROR c.s.s.service.MarketService - getManagers: There is no store with id 2147483647.
2024-06-05 17:40:44 ERROR c.s.s.service.MarketService - deleteProductFromStore: user Mallory can not delete a product from store with id 0.
2024-06-05 17:40:45 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: jwt isnt valid
2024-06-05 17:40:45 ERROR c.s.s.domain.products.ProductFacade - Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
2024-06-05 17:40:45 ERROR c.s.s.domain.products.ProductFacade - Error adding product: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
java.lang.IllegalArgumentException: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
	at com.sadna.sadnamarket.domain.products.ProductFacade.checkProductAttributes(ProductFacade.java:305)
	at com.sadna.sadnamarket.domain.products.ProductFacade.addProduct(ProductFacade.java:42)
	at com.sadna.sadnamarket.domain.stores.StoreFacade.addProductToStore(StoreFacade.java:95)
	at com.sadna.sadnamarket.service.MarketService.addProductToStore(MarketService.java:106)
	at com.sadna.sadnamarket.service.MarketServiceTestAdapter.addProductToStore(MarketServiceTestAdapter.java:157)
	at com.sadna.sadnamarket.StoreOwnerTests.addProductBadInfoTest(StoreOwnerTests.java:86)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)
2024-06-05 17:40:45 ERROR c.s.s.service.MarketService - addProductToStore: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
2024-06-05 17:40:46 ERROR c.s.s.service.MarketService - getStoreOrderHistory: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-05 17:40:46 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: jwt isnt valid
2024-06-05 17:40:47 ERROR c.s.s.service.MarketService - closeStore: User Mallory can not close the store with id 0 (not a founder).
2024-06-05 17:40:48 ERROR c.s.sadnamarket.domain.users.Member - Exception in getRequest: member already has role in store
2024-06-05 17:40:48 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: member already has role in store
2024-06-05 17:40:48 ERROR c.s.s.service.MarketService - getOwners: There is no store with id 2147483647.
2024-06-05 17:40:48 ERROR c.s.s.service.MarketService - getManagers: There is no store with id 2147483647.
2024-06-05 17:40:49 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: User StoreOwnerMan can not add user Eric as an owner to store 0.
2024-06-05 17:40:49 ERROR c.s.s.service.MarketService - addManagerPermission: User StoreOwnerMan can not add user Eric as a manager to store 0.
2024-06-05 17:40:50 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: User StoreOwnerMan can not add user Eric as a manager to store 0.
2024-06-05 17:40:52 ERROR c.s.s.service.MarketService - getStoreOrderHistory: jwt isnt valid
2024-06-05 17:40:53 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: User Mallory can not add user Eric as a manager to store 0.
2024-06-05 17:40:53 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-05 17:40:53 ERROR c.s.s.service.MarketService - getStoreInfo: The product with id 0 doesn't exist.
2024-06-05 17:40:54 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: User Mallory can not add user Eric as an owner to store 0.
2024-06-05 17:40:54 ERROR c.s.s.service.MarketService - updateProductInStore: A store with id 0 does not have a product with id 2147483647.
2024-06-05 17:40:55 ERROR c.s.s.service.MarketService - deleteProductFromStore: A product with id 2147483647 does not exist.
2024-06-05 17:40:55 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=Eric does not exist
2024-06-05 17:40:55 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: User with username Eric does not exist
2024-06-05 17:40:56 ERROR c.s.s.service.MarketService - updateProductInStore: A store with id 0 does not have a product with id 0.
2024-06-05 17:40:57 ERROR c.s.s.service.MarketService - addManagerPermission: User Mallory can not add user Eric as a manager to store 0.
2024-06-05 17:40:58 ERROR c.s.s.domain.products.ProductFacade - Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
2024-06-05 17:40:58 ERROR c.s.s.domain.products.ProductFacade - Error updating product: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
java.lang.IllegalArgumentException: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
	at com.sadna.sadnamarket.domain.products.ProductFacade.checkProductAttributes(ProductFacade.java:305)
	at com.sadna.sadnamarket.domain.products.ProductFacade.updateProduct(ProductFacade.java:91)
	at com.sadna.sadnamarket.domain.stores.StoreFacade.updateProduct(StoreFacade.java:125)
	at com.sadna.sadnamarket.service.MarketService.updateProductInStore(MarketService.java:145)
	at com.sadna.sadnamarket.service.MarketServiceTestAdapter.editStoreProduct(MarketServiceTestAdapter.java:169)
	at com.sadna.sadnamarket.StoreOwnerTests.editProductBadInfoTest(StoreOwnerTests.java:122)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)
2024-06-05 17:40:58 ERROR c.s.s.service.MarketService - updateProductInStore: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
2024-06-05 17:40:59 ERROR c.s.s.service.MarketService - deleteProductFromStore: A product with id 0 does not exist.
2024-06-05 17:41:00 ERROR c.s.s.service.MarketService - updateProductInStore: user Mallory can not update a product in store with id 0.
2024-06-05 17:41:00 ERROR c.s.s.service.MarketService - addProductToStore: user Mallory can not add a product to store with id 0.
2024-06-05 17:41:00 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 999 does not exist.
2024-06-05 17:41:00 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-05 17:41:00 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 999 does not exist.
2024-06-05 17:41:01 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 4. Error: You can not buy 1 of product 0 - there are only 0 in stock.


2024-06-05 17:41:05 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-05 17:41:05 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-05 17:41:05 ERROR c.s.s.service.MarketService - Change quantity in cart failed for guestId: 2, storeId: 0, productId: 0, amount: 3. Error: Amount doesn't exist in store
2024-06-05 17:41:07 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Missing card details
2024-06-05 17:41:07 ERROR c.s.s.service.MarketService - Add product to cart failed for guestId: 2, storeId: 0, productId: 0, amount: 3. Error: Amount doesn't exist in store
2024-06-05 17:41:07 ERROR c.s.s.service.MarketService - getStoreInfo: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-05 17:41:07 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Order cannot be supplied
2024-06-05 17:41:07 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-05 17:41:08 ERROR c.s.s.service.MarketService - getStoreInfo: There is no store with id 2147483647.
2024-06-05 17:41:08 ERROR c.s.s.domain.users.UserFacade - user JohnDoe already logged in
2024-06-05 17:41:08 ERROR c.s.s.service.MarketService - error in login: user already logged in
2024-06-05 17:41:08 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasGuest: Guest with guestID=1 does not exist
2024-06-05 17:41:08 ERROR c.s.s.service.MarketService - error in exitGuest: Guest with guestID 1 does not exist
2024-06-05 17:41:08 ERROR c.s.s.service.MarketService - getProductsInfo: No products found
2024-06-05 17:41:08 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-05 17:41:09 ERROR c.s.s.service.MarketService - getProductsInfo: There is no store with id 2147483647.
2024-06-05 17:41:09 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-05 17:41:09 ERROR c.s.s.service.MarketService - Change quantity in cart failed for guestId: 2, storeId: 0, productId: 0, amount: 2. Error: Amount doesn't exist in store
2024-06-05 17:41:09 ERROR c.s.s.service.MarketService - Add product to cart failed for guestId: 2, storeId: 0, productId: 2147483647, amount: 3. Error: Amount doesn't exist in store
2024-06-05 17:41:10 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-05 17:41:10 ERROR c.s.s.service.MarketService - getStoreInfo: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-05 17:41:11 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Credit card invalid
2024-06-05 17:41:11 ERROR c.s.s.domain.auth.AuthFacade - user doesnt exist
2024-06-05 17:41:11 ERROR c.s.s.service.MarketService - error in login: password is incorrect
2024-06-05 17:41:11 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: You can not buy 5 of product 0 - there are only 4 in stock.


2024-06-05 17:41:11 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-05 17:41:12 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-05 17:41:12 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-07 10:49:15 ERROR c.s.s.service.MarketService - createStore: jwt isnt valid
2024-06-07 10:49:15 ERROR c.s.sadnamarket.domain.users.Member - Exception in logout: user isn't logged in
2024-06-07 10:49:15 ERROR c.s.s.service.MarketService - error in logout: user isn't logged in
2024-06-07 10:49:15 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=username that isn't very real does not exist
2024-06-07 10:49:15 ERROR c.s.s.service.MarketService - error in logout: User with username username that isn't very real does not exist
2024-06-07 10:49:18 ERROR c.s.s.service.MarketService - getStoreOrderHistory: There is no store with id 2147483647.
2024-06-07 10:49:18 ERROR c.s.s.domain.users.MemoryRepo - Exception in getMember: User with userName=Username that nobody has does not exist
2024-06-07 10:49:18 ERROR c.s.s.service.MarketService - Get order DTO history failed for username: Username that nobody has. Error: User with userName Username that nobody has does not exist
2024-06-07 10:49:19 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=Eric does not exist
2024-06-07 10:49:19 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: User with username Eric does not exist
2024-06-07 10:49:19 ERROR c.s.s.service.MarketService - closeStore: There is no store with id 2147483647.
2024-06-07 10:49:20 ERROR c.s.s.service.MarketService - getOwners: There is no store with id 2147483647.
2024-06-07 10:49:20 ERROR c.s.s.service.MarketService - getManagers: There is no store with id 2147483647.
2024-06-07 10:49:20 ERROR c.s.s.service.MarketService - deleteProductFromStore: user Mallory can not delete a product from store with id 0.
2024-06-07 10:49:21 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: jwt isnt valid
2024-06-07 10:49:21 ERROR c.s.s.domain.products.ProductFacade - Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
2024-06-07 10:49:21 ERROR c.s.s.domain.products.ProductFacade - Error adding product: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
java.lang.IllegalArgumentException: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
	at com.sadna.sadnamarket.domain.products.ProductFacade.checkProductAttributes(ProductFacade.java:305)
	at com.sadna.sadnamarket.domain.products.ProductFacade.addProduct(ProductFacade.java:42)
	at com.sadna.sadnamarket.domain.stores.StoreFacade.addProductToStore(StoreFacade.java:95)
	at com.sadna.sadnamarket.service.MarketService.addProductToStore(MarketService.java:106)
	at com.sadna.sadnamarket.service.MarketServiceTestAdapter.addProductToStore(MarketServiceTestAdapter.java:157)
	at com.sadna.sadnamarket.StoreOwnerTests.addProductBadInfoTest(StoreOwnerTests.java:86)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)
2024-06-07 10:49:21 ERROR c.s.s.service.MarketService - addProductToStore: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product rank must be between 0 and 5. 
2024-06-07 10:49:21 ERROR c.s.s.service.MarketService - getStoreOrderHistory: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-07 10:49:22 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: jwt isnt valid
2024-06-07 10:49:22 ERROR c.s.s.service.MarketService - closeStore: User Mallory can not close the store with id 0 (not a founder).
2024-06-07 10:49:23 ERROR c.s.sadnamarket.domain.users.Member - Exception in getRequest: member already has role in store
2024-06-07 10:49:23 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: member already has role in store
2024-06-07 10:49:24 ERROR c.s.s.service.MarketService - getOwners: There is no store with id 2147483647.
2024-06-07 10:49:24 ERROR c.s.s.service.MarketService - getManagers: There is no store with id 2147483647.
2024-06-07 10:49:24 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: User StoreOwnerMan can not add user Eric as an owner to store 0.
2024-06-07 10:49:25 ERROR c.s.s.service.MarketService - addManagerPermission: User StoreOwnerMan can not add user Eric as a manager to store 0.
2024-06-07 10:49:25 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: User StoreOwnerMan can not add user Eric as a manager to store 0.
2024-06-07 10:49:27 ERROR c.s.s.service.MarketService - getStoreOrderHistory: jwt isnt valid
2024-06-07 10:49:28 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: User Mallory can not add user Eric as a manager to store 0.
2024-06-07 10:49:28 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-07 10:49:28 ERROR c.s.s.service.MarketService - getStoreInfo: The product with id 0 doesn't exist.
2024-06-07 10:49:29 ERROR c.s.s.service.MarketService - sendStoreOwnerRequest: User Mallory can not add user Eric as an owner to store 0.
2024-06-07 10:49:30 ERROR c.s.s.service.MarketService - updateProductInStore: A store with id 0 does not have a product with id 2147483647.
2024-06-07 10:49:30 ERROR c.s.s.service.MarketService - deleteProductFromStore: A product with id 2147483647 does not exist.
2024-06-07 10:49:31 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasMember: User with username=Eric does not exist
2024-06-07 10:49:31 ERROR c.s.s.service.MarketService - sendStoreManagerRequest: User with username Eric does not exist
2024-06-07 10:49:32 ERROR c.s.s.service.MarketService - updateProductInStore: A store with id 0 does not have a product with id 0.
2024-06-07 10:49:32 ERROR c.s.s.service.MarketService - addManagerPermission: User Mallory can not add user Eric as a manager to store 0.
2024-06-07 10:49:33 ERROR c.s.s.domain.products.ProductFacade - Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
2024-06-07 10:49:33 ERROR c.s.s.domain.products.ProductFacade - Error updating product: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
java.lang.IllegalArgumentException: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
	at com.sadna.sadnamarket.domain.products.ProductFacade.checkProductAttributes(ProductFacade.java:305)
	at com.sadna.sadnamarket.domain.products.ProductFacade.updateProduct(ProductFacade.java:91)
	at com.sadna.sadnamarket.domain.stores.StoreFacade.updateProduct(StoreFacade.java:125)
	at com.sadna.sadnamarket.service.MarketService.updateProductInStore(MarketService.java:145)
	at com.sadna.sadnamarket.service.MarketServiceTestAdapter.editStoreProduct(MarketServiceTestAdapter.java:169)
	at com.sadna.sadnamarket.StoreOwnerTests.editProductBadInfoTest(StoreOwnerTests.java:122)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)
2024-06-07 10:49:33 ERROR c.s.s.service.MarketService - updateProductInStore: Product information is invalid: Product name cannot be null or empty. Product price cannot be negative. Product category cannot be null or empty. 
2024-06-07 10:49:34 ERROR c.s.s.service.MarketService - deleteProductFromStore: A product with id 0 does not exist.
2024-06-07 10:49:35 ERROR c.s.s.service.MarketService - updateProductInStore: user Mallory can not update a product in store with id 0.
2024-06-07 10:49:36 ERROR c.s.s.service.MarketService - addProductToStore: user Mallory can not add a product to store with id 0.
2024-06-07 10:49:36 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 999 does not exist.
2024-06-07 10:49:36 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-07 10:49:36 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 999 does not exist.
2024-06-07 10:49:36 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 4. Error: You can not buy 1 of product 0 - there are only 0 in stock.


2024-06-07 10:49:37 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-07 10:49:38 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-07 10:49:38 ERROR c.s.s.service.MarketService - Change quantity in cart failed for guestId: 2, storeId: 0, productId: 0, amount: 3. Error: Amount doesn't exist in store
2024-06-07 10:49:39 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Missing card details
2024-06-07 10:49:39 ERROR c.s.s.service.MarketService - Add product to cart failed for guestId: 2, storeId: 0, productId: 0, amount: 3. Error: Amount doesn't exist in store
2024-06-07 10:49:39 ERROR c.s.s.service.MarketService - getStoreInfo: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-07 10:49:40 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Order cannot be supplied
2024-06-07 10:49:40 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-07 10:49:40 ERROR c.s.s.service.MarketService - getStoreInfo: There is no store with id 2147483647.
2024-06-07 10:49:40 ERROR c.s.s.domain.users.UserFacade - user JohnDoe already logged in
2024-06-07 10:49:40 ERROR c.s.s.service.MarketService - error in login: user already logged in
2024-06-07 10:49:40 ERROR c.s.s.domain.users.MemoryRepo - Exception in hasGuest: Guest with guestID=1 does not exist
2024-06-07 10:49:40 ERROR c.s.s.service.MarketService - error in exitGuest: Guest with guestID 1 does not exist
2024-06-07 10:49:41 ERROR c.s.s.service.MarketService - getProductsInfo: No products found
2024-06-07 10:49:41 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-07 10:49:41 ERROR c.s.s.service.MarketService - getProductsInfo: There is no store with id 2147483647.
2024-06-07 10:49:41 ERROR c.s.s.d.p.MemoryProductRepository - Product Id 0 was succesully removed.
2024-06-07 10:49:41 ERROR c.s.s.service.MarketService - Change quantity in cart failed for guestId: 2, storeId: 0, productId: 0, amount: 2. Error: Amount doesn't exist in store
2024-06-07 10:49:41 ERROR c.s.s.service.MarketService - Add product to cart failed for guestId: 2, storeId: 0, productId: 2147483647, amount: 3. Error: Amount doesn't exist in store
2024-06-07 10:49:42 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-07 10:49:42 ERROR c.s.s.service.MarketService - getStoreInfo: Cannot invoke "String.equals(Object)" because the return value of "com.sadna.sadnamarket.domain.users.UserFacade.getSystemManagerUserName()" is null
2024-06-07 10:49:43 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: Credit card invalid
2024-06-07 10:49:43 ERROR c.s.s.domain.auth.AuthFacade - user doesnt exist
2024-06-07 10:49:43 ERROR c.s.s.service.MarketService - error in login: password is incorrect
2024-06-07 10:49:43 ERROR c.s.s.service.MarketService - Purchase cart failed for guestId: 2. Error: You can not buy 5 of product 0 - there are only 4 in stock.


2024-06-07 10:49:43 ERROR c.s.s.service.MarketService - getStoreInfo: jwt isnt valid
2024-06-07 10:49:44 ERROR c.s.s.service.MarketService - error in register: username already exits
2024-06-07 10:49:44 ERROR c.s.s.service.MarketService - error in register: username already exits
